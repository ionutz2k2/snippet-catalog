{"version":3,"sources":["jquery-2.1.4.js","bootstrap.min.js","vue.js","vue-router.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1/RA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"vendor.js","sourcesContent":["/*!\n * jQuery JavaScript Library v2.1.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-04-28T16:01Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\treturn !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\tnodeType = context.nodeType;\n\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\tif ( !seed && documentIsHTML ) {\n\n\t\t// Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType !== 1 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\tparent = doc.defaultView;\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Support tests\n\t---------------------------------------------------------------------- */\n\tdocumentIsHTML = !isXML( doc );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android<4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android<4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Support: Firefox, Chrome, Safari\n// Create \"bubbling\" focus and blur events\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optimization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tif ( elem.ownerDocument.defaultView.opener ) {\n\t\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t\t}\n\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\t\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur(),\n\t\t\t\t// break the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// Toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Document location\n\tajaxLocation = window.location.href,\n\n\t// Segment location into parts\n\tajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// Support: BlackBerry 5, iOS 3 (original iPhone)\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Support: Safari<7+, Chrome<37+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n","/*!\r\n * Bootstrap v3.3.5 (http://getbootstrap.com)\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under the MIT license\r\n */\r\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.5\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.5\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.5\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(\"hidden.bs.dropdown\",f))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.5\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(\"shown.bs.dropdown\",h)}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.5\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.5\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),\r\n    d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.5\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);","/*!\r\n * Vue.js v0.12.16\r\n * (c) 2015 Evan You\r\n * Released under the MIT License.\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n    if(typeof exports === 'object' && typeof module === 'object')\r\n        module.exports = factory();\r\n    else if(typeof define === 'function' && define.amd)\r\n        define([], factory);\r\n    else if(typeof exports === 'object')\r\n        exports[\"Vue\"] = factory();\r\n    else\r\n        root[\"Vue\"] = factory();\r\n})(this, function() {\r\n    return /******/ (function(modules) { // webpackBootstrap\r\n        /******/ \t// The module cache\r\n        /******/ \tvar installedModules = {};\r\n\r\n        /******/ \t// The require function\r\n        /******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n            /******/ \t\t// Check if module is in cache\r\n            /******/ \t\tif(installedModules[moduleId])\r\n            /******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n            /******/ \t\t// Create a new module (and put it into the cache)\r\n            /******/ \t\tvar module = installedModules[moduleId] = {\r\n                /******/ \t\t\texports: {},\r\n                /******/ \t\t\tid: moduleId,\r\n                /******/ \t\t\tloaded: false\r\n                /******/ \t\t};\r\n\r\n            /******/ \t\t// Execute the module function\r\n            /******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n            /******/ \t\t// Flag the module as loaded\r\n            /******/ \t\tmodule.loaded = true;\r\n\r\n            /******/ \t\t// Return the exports of the module\r\n            /******/ \t\treturn module.exports;\r\n            /******/ \t}\r\n\r\n\r\n        /******/ \t// expose the modules object (__webpack_modules__)\r\n        /******/ \t__webpack_require__.m = modules;\r\n\r\n        /******/ \t// expose the module cache\r\n        /******/ \t__webpack_require__.c = installedModules;\r\n\r\n        /******/ \t// __webpack_public_path__\r\n        /******/ \t__webpack_require__.p = \"\";\r\n\r\n        /******/ \t// Load entry module and return exports\r\n        /******/ \treturn __webpack_require__(0);\r\n        /******/ })\r\n        /************************************************************************/\r\n        /******/ ([\r\n        /* 0 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var extend = _.extend\r\n\r\n            /**\r\n             * The exposed Vue constructor.\r\n             *\r\n             * API conventions:\r\n             * - public API methods/properties are prefiexed with `$`\r\n             * - internal methods/properties are prefixed with `_`\r\n             * - non-prefixed properties are assumed to be proxied user\r\n             *   data.\r\n             *\r\n             * @constructor\r\n             * @param {Object} [options]\r\n             * @public\r\n             */\r\n\r\n            function Vue (options) {\r\n                this._init(options)\r\n            }\r\n\r\n            /**\r\n             * Mixin global API\r\n             */\r\n\r\n            extend(Vue, __webpack_require__(9))\r\n\r\n            /**\r\n             * Vue and every constructor that extends Vue has an\r\n             * associated options object, which can be accessed during\r\n             * compilation steps as `this.constructor.options`.\r\n             *\r\n             * These can be seen as the default options of every\r\n             * Vue instance.\r\n             */\r\n\r\n            Vue.options = {\r\n                replace: true,\r\n                directives: __webpack_require__(25),\r\n                elementDirectives: __webpack_require__(47),\r\n                filters: __webpack_require__(50),\r\n                transitions: {},\r\n                components: {},\r\n                partials: {}\r\n            }\r\n\r\n            /**\r\n             * Build up the prototype\r\n             */\r\n\r\n            var p = Vue.prototype\r\n\r\n            /**\r\n             * $data has a setter which does a bunch of\r\n             * teardown/setup work\r\n             */\r\n\r\n            Object.defineProperty(p, '$data', {\r\n                get: function () {\r\n                    return this._data\r\n                },\r\n                set: function (newData) {\r\n                    if (newData !== this._data) {\r\n                        this._setData(newData)\r\n                    }\r\n                }\r\n            })\r\n\r\n            /**\r\n             * Mixin internal instance methods\r\n             */\r\n\r\n            extend(p, __webpack_require__(52))\r\n            extend(p, __webpack_require__(53))\r\n            extend(p, __webpack_require__(54))\r\n            extend(p, __webpack_require__(58))\r\n            extend(p, __webpack_require__(60))\r\n\r\n            /**\r\n             * Mixin public API methods\r\n             */\r\n\r\n            extend(p, __webpack_require__(61))\r\n            extend(p, __webpack_require__(62))\r\n            extend(p, __webpack_require__(63))\r\n            extend(p, __webpack_require__(64))\r\n            extend(p, __webpack_require__(65))\r\n\r\n            module.exports = _.Vue = Vue\r\n\r\n\r\n            /***/ },\r\n        /* 1 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var lang = __webpack_require__(2)\r\n            var extend = lang.extend\r\n\r\n            extend(exports, lang)\r\n            extend(exports, __webpack_require__(3))\r\n            extend(exports, __webpack_require__(4))\r\n            extend(exports, __webpack_require__(6))\r\n            extend(exports, __webpack_require__(7))\r\n            extend(exports, __webpack_require__(8))\r\n\r\n\r\n            /***/ },\r\n        /* 2 */\r\n        /***/ function(module, exports) {\r\n\r\n            /**\r\n             * Check if a string starts with $ or _\r\n             *\r\n             * @param {String} str\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.isReserved = function (str) {\r\n                var c = (str + '').charCodeAt(0)\r\n                return c === 0x24 || c === 0x5F\r\n            }\r\n\r\n            /**\r\n             * Guard text output, make sure undefined outputs\r\n             * empty string\r\n             *\r\n             * @param {*} value\r\n             * @return {String}\r\n             */\r\n\r\n            exports.toString = function (value) {\r\n                return value == null\r\n                    ? ''\r\n                    : value.toString()\r\n            }\r\n\r\n            /**\r\n             * Check and convert possible numeric strings to numbers\r\n             * before setting back to data\r\n             *\r\n             * @param {*} value\r\n             * @return {*|Number}\r\n             */\r\n\r\n            exports.toNumber = function (value) {\r\n                if (typeof value !== 'string') {\r\n                    return value\r\n                } else {\r\n                    var parsed = Number(value)\r\n                    return isNaN(parsed)\r\n                        ? value\r\n                        : parsed\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Convert string boolean literals into real booleans.\r\n             *\r\n             * @param {*} value\r\n             * @return {*|Boolean}\r\n             */\r\n\r\n            exports.toBoolean = function (value) {\r\n                return value === 'true'\r\n                    ? true\r\n                    : value === 'false'\r\n                    ? false\r\n                    : value\r\n            }\r\n\r\n            /**\r\n             * Strip quotes from a string\r\n             *\r\n             * @param {String} str\r\n             * @return {String | false}\r\n             */\r\n\r\n            exports.stripQuotes = function (str) {\r\n                var a = str.charCodeAt(0)\r\n                var b = str.charCodeAt(str.length - 1)\r\n                return a === b && (a === 0x22 || a === 0x27)\r\n                    ? str.slice(1, -1)\r\n                    : false\r\n            }\r\n\r\n            /**\r\n             * Camelize a hyphen-delmited string.\r\n             *\r\n             * @param {String} str\r\n             * @return {String}\r\n             */\r\n\r\n            exports.camelize = function (str) {\r\n                return str.replace(/-(\\w)/g, toUpper)\r\n            }\r\n\r\n            function toUpper (_, c) {\r\n                return c ? c.toUpperCase() : ''\r\n            }\r\n\r\n            /**\r\n             * Hyphenate a camelCase string.\r\n             *\r\n             * @param {String} str\r\n             * @return {String}\r\n             */\r\n\r\n            exports.hyphenate = function (str) {\r\n                return str\r\n                    .replace(/([a-z\\d])([A-Z])/g, '$1-$2')\r\n                    .toLowerCase()\r\n            }\r\n\r\n            /**\r\n             * Converts hyphen/underscore/slash delimitered names into\r\n             * camelized classNames.\r\n             *\r\n             * e.g. my-component => MyComponent\r\n             *      some_else    => SomeElse\r\n             *      some/comp    => SomeComp\r\n             *\r\n             * @param {String} str\r\n             * @return {String}\r\n             */\r\n\r\n            var classifyRE = /(?:^|[-_\\/])(\\w)/g\r\n            exports.classify = function (str) {\r\n                return str.replace(classifyRE, toUpper)\r\n            }\r\n\r\n            /**\r\n             * Simple bind, faster than native\r\n             *\r\n             * @param {Function} fn\r\n             * @param {Object} ctx\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.bind = function (fn, ctx) {\r\n                return function (a) {\r\n                    var l = arguments.length\r\n                    return l\r\n                        ? l > 1\r\n                        ? fn.apply(ctx, arguments)\r\n                        : fn.call(ctx, a)\r\n                        : fn.call(ctx)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Convert an Array-like object to a real Array.\r\n             *\r\n             * @param {Array-like} list\r\n             * @param {Number} [start] - start index\r\n             * @return {Array}\r\n             */\r\n\r\n            exports.toArray = function (list, start) {\r\n                start = start || 0\r\n                var i = list.length - start\r\n                var ret = new Array(i)\r\n                while (i--) {\r\n                    ret[i] = list[i + start]\r\n                }\r\n                return ret\r\n            }\r\n\r\n            /**\r\n             * Mix properties into target object.\r\n             *\r\n             * @param {Object} to\r\n             * @param {Object} from\r\n             */\r\n\r\n            exports.extend = function (to, from) {\r\n                for (var key in from) {\r\n                    to[key] = from[key]\r\n                }\r\n                return to\r\n            }\r\n\r\n            /**\r\n             * Quick object check - this is primarily used to tell\r\n             * Objects from primitive values when we know the value\r\n             * is a JSON-compliant type.\r\n             *\r\n             * @param {*} obj\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.isObject = function (obj) {\r\n                return obj !== null && typeof obj === 'object'\r\n            }\r\n\r\n            /**\r\n             * Strict object type check. Only returns true\r\n             * for plain JavaScript objects.\r\n             *\r\n             * @param {*} obj\r\n             * @return {Boolean}\r\n             */\r\n\r\n            var toString = Object.prototype.toString\r\n            var OBJECT_STRING = '[object Object]'\r\n            exports.isPlainObject = function (obj) {\r\n                return toString.call(obj) === OBJECT_STRING\r\n            }\r\n\r\n            /**\r\n             * Array type check.\r\n             *\r\n             * @param {*} obj\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.isArray = Array.isArray\r\n\r\n            /**\r\n             * Define a non-enumerable property\r\n             *\r\n             * @param {Object} obj\r\n             * @param {String} key\r\n             * @param {*} val\r\n             * @param {Boolean} [enumerable]\r\n             */\r\n\r\n            exports.define = function (obj, key, val, enumerable) {\r\n                Object.defineProperty(obj, key, {\r\n                    value: val,\r\n                    enumerable: !!enumerable,\r\n                    writable: true,\r\n                    configurable: true\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Debounce a function so it only gets called after the\r\n             * input stops arriving after the given wait period.\r\n             *\r\n             * @param {Function} func\r\n             * @param {Number} wait\r\n             * @return {Function} - the debounced function\r\n             */\r\n\r\n            exports.debounce = function (func, wait) {\r\n                var timeout, args, context, timestamp, result\r\n                var later = function () {\r\n                    var last = Date.now() - timestamp\r\n                    if (last < wait && last >= 0) {\r\n                        timeout = setTimeout(later, wait - last)\r\n                    } else {\r\n                        timeout = null\r\n                        result = func.apply(context, args)\r\n                        if (!timeout) context = args = null\r\n                    }\r\n                }\r\n                return function () {\r\n                    context = this\r\n                    args = arguments\r\n                    timestamp = Date.now()\r\n                    if (!timeout) {\r\n                        timeout = setTimeout(later, wait)\r\n                    }\r\n                    return result\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Manual indexOf because it's slightly faster than\r\n             * native.\r\n             *\r\n             * @param {Array} arr\r\n             * @param {*} obj\r\n             */\r\n\r\n            exports.indexOf = function (arr, obj) {\r\n                var i = arr.length\r\n                while (i--) {\r\n                    if (arr[i] === obj) return i\r\n                }\r\n                return -1\r\n            }\r\n\r\n            /**\r\n             * Make a cancellable version of an async callback.\r\n             *\r\n             * @param {Function} fn\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.cancellable = function (fn) {\r\n                var cb = function () {\r\n                    if (!cb.cancelled) {\r\n                        return fn.apply(this, arguments)\r\n                    }\r\n                }\r\n                cb.cancel = function () {\r\n                    cb.cancelled = true\r\n                }\r\n                return cb\r\n            }\r\n\r\n            /**\r\n             * Check if two values are loosely equal - that is,\r\n             * if they are plain objects, do they have the same shape?\r\n             *\r\n             * @param {*} a\r\n             * @param {*} b\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.looseEqual = function (a, b) {\r\n                /* eslint-disable eqeqeq */\r\n                return a == b || (\r\n                        exports.isObject(a) && exports.isObject(b)\r\n                            ? JSON.stringify(a) === JSON.stringify(b)\r\n                            : false\r\n                    )\r\n                /* eslint-enable eqeqeq */\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 3 */\r\n        /***/ function(module, exports) {\r\n\r\n            // can we use __proto__?\r\n            exports.hasProto = '__proto__' in {}\r\n\r\n            // Browser environment sniffing\r\n            var inBrowser = exports.inBrowser =\r\n                typeof window !== 'undefined' &&\r\n                Object.prototype.toString.call(window) !== '[object Object]'\r\n\r\n            exports.isIE9 =\r\n                inBrowser &&\r\n                navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0\r\n\r\n            exports.isAndroid =\r\n                inBrowser &&\r\n                navigator.userAgent.toLowerCase().indexOf('android') > 0\r\n\r\n            // Transition property/event sniffing\r\n            if (inBrowser && !exports.isIE9) {\r\n                var isWebkitTrans =\r\n                    window.ontransitionend === undefined &&\r\n                    window.onwebkittransitionend !== undefined\r\n                var isWebkitAnim =\r\n                    window.onanimationend === undefined &&\r\n                    window.onwebkitanimationend !== undefined\r\n                exports.transitionProp = isWebkitTrans\r\n                    ? 'WebkitTransition'\r\n                    : 'transition'\r\n                exports.transitionEndEvent = isWebkitTrans\r\n                    ? 'webkitTransitionEnd'\r\n                    : 'transitionend'\r\n                exports.animationProp = isWebkitAnim\r\n                    ? 'WebkitAnimation'\r\n                    : 'animation'\r\n                exports.animationEndEvent = isWebkitAnim\r\n                    ? 'webkitAnimationEnd'\r\n                    : 'animationend'\r\n            }\r\n\r\n            /**\r\n             * Defer a task to execute it asynchronously. Ideally this\r\n             * should be executed as a microtask, so we leverage\r\n             * MutationObserver if it's available, and fallback to\r\n             * setTimeout(0).\r\n             *\r\n             * @param {Function} cb\r\n             * @param {Object} ctx\r\n             */\r\n\r\n            exports.nextTick = (function () {\r\n                var callbacks = []\r\n                var pending = false\r\n                var timerFunc\r\n                function nextTickHandler () {\r\n                    pending = false\r\n                    var copies = callbacks.slice(0)\r\n                    callbacks = []\r\n                    for (var i = 0; i < copies.length; i++) {\r\n                        copies[i]()\r\n                    }\r\n                }\r\n                /* istanbul ignore if */\r\n                if (typeof MutationObserver !== 'undefined') {\r\n                    var counter = 1\r\n                    var observer = new MutationObserver(nextTickHandler)\r\n                    var textNode = document.createTextNode(counter)\r\n                    observer.observe(textNode, {\r\n                        characterData: true\r\n                    })\r\n                    timerFunc = function () {\r\n                        counter = (counter + 1) % 2\r\n                        textNode.data = counter\r\n                    }\r\n                } else {\r\n                    timerFunc = setTimeout\r\n                }\r\n                return function (cb, ctx) {\r\n                    var func = ctx\r\n                        ? function () { cb.call(ctx) }\r\n                        : cb\r\n                    callbacks.push(func)\r\n                    if (pending) return\r\n                    pending = true\r\n                    timerFunc(nextTickHandler, 0)\r\n                }\r\n            })()\r\n\r\n\r\n            /***/ },\r\n        /* 4 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n\r\n            /**\r\n             * Query an element selector if it's not an element already.\r\n             *\r\n             * @param {String|Element} el\r\n             * @return {Element}\r\n             */\r\n\r\n            exports.query = function (el) {\r\n                if (typeof el === 'string') {\r\n                    var selector = el\r\n                    el = document.querySelector(el)\r\n                    if (!el) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Cannot find element: ' + selector\r\n                        )\r\n                    }\r\n                }\r\n                return el\r\n            }\r\n\r\n            /**\r\n             * Check if a node is in the document.\r\n             * Note: document.documentElement.contains should work here\r\n             * but always returns false for comment nodes in phantomjs,\r\n             * making unit tests difficult. This is fixed byy doing the\r\n             * contains() check on the node's parentNode instead of\r\n             * the node itself.\r\n             *\r\n             * @param {Node} node\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.inDoc = function (node) {\r\n                var doc = document.documentElement\r\n                var parent = node && node.parentNode\r\n                return doc === node ||\r\n                    doc === parent ||\r\n                    !!(parent && parent.nodeType === 1 && (doc.contains(parent)))\r\n            }\r\n\r\n            /**\r\n             * Extract an attribute from a node.\r\n             *\r\n             * @param {Node} node\r\n             * @param {String} attr\r\n             */\r\n\r\n            exports.attr = function (node, attr) {\r\n                attr = config.prefix + attr\r\n                var val = node.getAttribute(attr)\r\n                if (val !== null) {\r\n                    node.removeAttribute(attr)\r\n                }\r\n                return val\r\n            }\r\n\r\n            /**\r\n             * Insert el before target\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             */\r\n\r\n            exports.before = function (el, target) {\r\n                target.parentNode.insertBefore(el, target)\r\n            }\r\n\r\n            /**\r\n             * Insert el after target\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             */\r\n\r\n            exports.after = function (el, target) {\r\n                if (target.nextSibling) {\r\n                    exports.before(el, target.nextSibling)\r\n                } else {\r\n                    target.parentNode.appendChild(el)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Remove el from DOM\r\n             *\r\n             * @param {Element} el\r\n             */\r\n\r\n            exports.remove = function (el) {\r\n                el.parentNode.removeChild(el)\r\n            }\r\n\r\n            /**\r\n             * Prepend el to target\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             */\r\n\r\n            exports.prepend = function (el, target) {\r\n                if (target.firstChild) {\r\n                    exports.before(el, target.firstChild)\r\n                } else {\r\n                    target.appendChild(el)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Replace target with el\r\n             *\r\n             * @param {Element} target\r\n             * @param {Element} el\r\n             */\r\n\r\n            exports.replace = function (target, el) {\r\n                var parent = target.parentNode\r\n                if (parent) {\r\n                    parent.replaceChild(el, target)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Add event listener shorthand.\r\n             *\r\n             * @param {Element} el\r\n             * @param {String} event\r\n             * @param {Function} cb\r\n             */\r\n\r\n            exports.on = function (el, event, cb) {\r\n                el.addEventListener(event, cb)\r\n            }\r\n\r\n            /**\r\n             * Remove event listener shorthand.\r\n             *\r\n             * @param {Element} el\r\n             * @param {String} event\r\n             * @param {Function} cb\r\n             */\r\n\r\n            exports.off = function (el, event, cb) {\r\n                el.removeEventListener(event, cb)\r\n            }\r\n\r\n            /**\r\n             * Add class with compatibility for IE & SVG\r\n             *\r\n             * @param {Element} el\r\n             * @param {Strong} cls\r\n             */\r\n\r\n            exports.addClass = function (el, cls) {\r\n                if (el.classList) {\r\n                    el.classList.add(cls)\r\n                } else {\r\n                    var cur = ' ' + (el.getAttribute('class') || '') + ' '\r\n                    if (cur.indexOf(' ' + cls + ' ') < 0) {\r\n                        el.setAttribute('class', (cur + cls).trim())\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Remove class with compatibility for IE & SVG\r\n             *\r\n             * @param {Element} el\r\n             * @param {Strong} cls\r\n             */\r\n\r\n            exports.removeClass = function (el, cls) {\r\n                if (el.classList) {\r\n                    el.classList.remove(cls)\r\n                } else {\r\n                    var cur = ' ' + (el.getAttribute('class') || '') + ' '\r\n                    var tar = ' ' + cls + ' '\r\n                    while (cur.indexOf(tar) >= 0) {\r\n                        cur = cur.replace(tar, ' ')\r\n                    }\r\n                    el.setAttribute('class', cur.trim())\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Extract raw content inside an element into a temporary\r\n             * container div\r\n             *\r\n             * @param {Element} el\r\n             * @param {Boolean} asFragment\r\n             * @return {Element}\r\n             */\r\n\r\n            exports.extractContent = function (el, asFragment) {\r\n                var child\r\n                var rawContent\r\n                /* istanbul ignore if */\r\n                if (\r\n                    exports.isTemplate(el) &&\r\n                    el.content instanceof DocumentFragment\r\n                ) {\r\n                    el = el.content\r\n                }\r\n                if (el.hasChildNodes()) {\r\n                    exports.trimNode(el)\r\n                    rawContent = asFragment\r\n                        ? document.createDocumentFragment()\r\n                        : document.createElement('div')\r\n                    /* eslint-disable no-cond-assign */\r\n                    while (child = el.firstChild) {\r\n                        /* eslint-enable no-cond-assign */\r\n                        rawContent.appendChild(child)\r\n                    }\r\n                }\r\n                return rawContent\r\n            }\r\n\r\n            /**\r\n             * Trim possible empty head/tail textNodes inside a parent.\r\n             *\r\n             * @param {Node} node\r\n             */\r\n\r\n            exports.trimNode = function (node) {\r\n                trim(node, node.firstChild)\r\n                trim(node, node.lastChild)\r\n            }\r\n\r\n            function trim (parent, node) {\r\n                if (node && node.nodeType === 3 && !node.data.trim()) {\r\n                    parent.removeChild(node)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check if an element is a template tag.\r\n             * Note if the template appears inside an SVG its tagName\r\n             * will be in lowercase.\r\n             *\r\n             * @param {Element} el\r\n             */\r\n\r\n            exports.isTemplate = function (el) {\r\n                return el.tagName &&\r\n                    el.tagName.toLowerCase() === 'template'\r\n            }\r\n\r\n            /**\r\n             * Create an \"anchor\" for performing dom insertion/removals.\r\n             * This is used in a number of scenarios:\r\n             * - fragment instance\r\n             * - v-html\r\n             * - v-if\r\n             * - component\r\n             * - repeat\r\n             *\r\n             * @param {String} content\r\n             * @param {Boolean} persist - IE trashes empty textNodes on\r\n             *                            cloneNode(true), so in certain\r\n             *                            cases the anchor needs to be\r\n             *                            non-empty to be persisted in\r\n             *                            templates.\r\n             * @return {Comment|Text}\r\n             */\r\n\r\n            exports.createAnchor = function (content, persist) {\r\n                return config.debug\r\n                    ? document.createComment(content)\r\n                    : document.createTextNode(persist ? ' ' : '')\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 5 */\r\n        /***/ function(module, exports) {\r\n\r\n            module.exports = {\r\n\r\n                /**\r\n                 * The prefix to look for when parsing directives.\r\n                 *\r\n                 * @type {String}\r\n                 */\r\n\r\n                prefix: 'v-',\r\n\r\n                /**\r\n                 * Whether to print debug messages.\r\n                 * Also enables stack trace for warnings.\r\n                 *\r\n                 * @type {Boolean}\r\n                 */\r\n\r\n                debug: false,\r\n\r\n                /**\r\n                 * Strict mode.\r\n                 * Disables asset lookup in the view parent chain.\r\n                 */\r\n\r\n                strict: false,\r\n\r\n                /**\r\n                 * Whether to suppress warnings.\r\n                 *\r\n                 * @type {Boolean}\r\n                 */\r\n\r\n                silent: false,\r\n\r\n                /**\r\n                 * Whether allow observer to alter data objects'\r\n                 * __proto__.\r\n                 *\r\n                 * @type {Boolean}\r\n                 */\r\n\r\n                proto: true,\r\n\r\n                /**\r\n                 * Whether to parse mustache tags in templates.\r\n                 *\r\n                 * @type {Boolean}\r\n                 */\r\n\r\n                interpolate: true,\r\n\r\n                /**\r\n                 * Whether to use async rendering.\r\n                 */\r\n\r\n                async: true,\r\n\r\n                /**\r\n                 * Whether to warn against errors caught when evaluating\r\n                 * expressions.\r\n                 */\r\n\r\n                warnExpressionErrors: true,\r\n\r\n                /**\r\n                 * Internal flag to indicate the delimiters have been\r\n                 * changed.\r\n                 *\r\n                 * @type {Boolean}\r\n                 */\r\n\r\n                _delimitersChanged: true,\r\n\r\n                /**\r\n                 * List of asset types that a component can own.\r\n                 *\r\n                 * @type {Array}\r\n                 */\r\n\r\n                _assetTypes: [\r\n                    'component',\r\n                    'directive',\r\n                    'elementDirective',\r\n                    'filter',\r\n                    'transition',\r\n                    'partial'\r\n                ],\r\n\r\n                /**\r\n                 * prop binding modes\r\n                 */\r\n\r\n                _propBindingModes: {\r\n                    ONE_WAY: 0,\r\n                    TWO_WAY: 1,\r\n                    ONE_TIME: 2\r\n                },\r\n\r\n                /**\r\n                 * Max circular updates allowed in a batcher flush cycle.\r\n                 */\r\n\r\n                _maxUpdateCount: 100\r\n\r\n            }\r\n\r\n            /**\r\n             * Interpolation delimiters.\r\n             * We need to mark the changed flag so that the text parser\r\n             * knows it needs to recompile the regex.\r\n             *\r\n             * @type {Array<String>}\r\n             */\r\n\r\n            var delimiters = ['{{', '}}']\r\n            Object.defineProperty(module.exports, 'delimiters', {\r\n                get: function () {\r\n                    return delimiters\r\n                },\r\n                set: function (val) {\r\n                    delimiters = val\r\n                    this._delimitersChanged = true\r\n                }\r\n            })\r\n\r\n\r\n            /***/ },\r\n        /* 6 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var extend = _.extend\r\n\r\n            /**\r\n             * Option overwriting strategies are functions that handle\r\n             * how to merge a parent option value and a child option\r\n             * value into the final value.\r\n             *\r\n             * All strategy functions follow the same signature:\r\n             *\r\n             * @param {*} parentVal\r\n             * @param {*} childVal\r\n             * @param {Vue} [vm]\r\n             */\r\n\r\n            var strats = config.optionMergeStrategies = Object.create(null)\r\n\r\n            /**\r\n             * Helper that recursively merges two data objects together.\r\n             */\r\n\r\n            function mergeData (to, from) {\r\n                var key, toVal, fromVal\r\n                for (key in from) {\r\n                    toVal = to[key]\r\n                    fromVal = from[key]\r\n                    if (!to.hasOwnProperty(key)) {\r\n                        to.$add(key, fromVal)\r\n                    } else if (_.isObject(toVal) && _.isObject(fromVal)) {\r\n                        mergeData(toVal, fromVal)\r\n                    }\r\n                }\r\n                return to\r\n            }\r\n\r\n            /**\r\n             * Data\r\n             */\r\n\r\n            strats.data = function (parentVal, childVal, vm) {\r\n                if (!vm) {\r\n                    // in a Vue.extend merge, both should be functions\r\n                    if (!childVal) {\r\n                        return parentVal\r\n                    }\r\n                    if (typeof childVal !== 'function') {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'The \"data\" option should be a function ' +\r\n                            'that returns a per-instance value in component ' +\r\n                            'definitions.'\r\n                        )\r\n                        return parentVal\r\n                    }\r\n                    if (!parentVal) {\r\n                        return childVal\r\n                    }\r\n                    // when parentVal & childVal are both present,\r\n                    // we need to return a function that returns the\r\n                    // merged result of both functions... no need to\r\n                    // check if parentVal is a function here because\r\n                    // it has to be a function to pass previous merges.\r\n                    return function mergedDataFn () {\r\n                        return mergeData(\r\n                            childVal.call(this),\r\n                            parentVal.call(this)\r\n                        )\r\n                    }\r\n                } else if (parentVal || childVal) {\r\n                    return function mergedInstanceDataFn () {\r\n                        // instance merge\r\n                        var instanceData = typeof childVal === 'function'\r\n                            ? childVal.call(vm)\r\n                            : childVal\r\n                        var defaultData = typeof parentVal === 'function'\r\n                            ? parentVal.call(vm)\r\n                            : undefined\r\n                        if (instanceData) {\r\n                            return mergeData(instanceData, defaultData)\r\n                        } else {\r\n                            return defaultData\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * El\r\n             */\r\n\r\n            strats.el = function (parentVal, childVal, vm) {\r\n                if (!vm && childVal && typeof childVal !== 'function') {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'The \"el\" option should be a function ' +\r\n                        'that returns a per-instance value in component ' +\r\n                        'definitions.'\r\n                    )\r\n                    return\r\n                }\r\n                var ret = childVal || parentVal\r\n                // invoke the element factory if this is instance merge\r\n                return vm && typeof ret === 'function'\r\n                    ? ret.call(vm)\r\n                    : ret\r\n            }\r\n\r\n            /**\r\n             * Hooks and param attributes are merged as arrays.\r\n             */\r\n\r\n            strats.created =\r\n                strats.ready =\r\n                    strats.attached =\r\n                        strats.detached =\r\n                            strats.beforeCompile =\r\n                                strats.compiled =\r\n                                    strats.beforeDestroy =\r\n                                        strats.destroyed =\r\n                                            strats.props = function (parentVal, childVal) {\r\n                                                return childVal\r\n                                                    ? parentVal\r\n                                                    ? parentVal.concat(childVal)\r\n                                                    : _.isArray(childVal)\r\n                                                    ? childVal\r\n                                                    : [childVal]\r\n                                                    : parentVal\r\n                                            }\r\n\r\n            /**\r\n             * 0.11 deprecation warning\r\n             */\r\n\r\n            strats.paramAttributes = function () {\r\n                /* istanbul ignore next */\r\n                (\"development\") !== 'production' && _.warn(\r\n                    '\"paramAttributes\" option has been deprecated in 0.12. ' +\r\n                    'Use \"props\" instead.'\r\n                )\r\n            }\r\n\r\n            /**\r\n             * Assets\r\n             *\r\n             * When a vm is present (instance creation), we need to do\r\n             * a three-way merge between constructor options, instance\r\n             * options and parent options.\r\n             */\r\n\r\n            function mergeAssets (parentVal, childVal) {\r\n                var res = Object.create(parentVal)\r\n                return childVal\r\n                    ? extend(res, guardArrayAssets(childVal))\r\n                    : res\r\n            }\r\n\r\n            config._assetTypes.forEach(function (type) {\r\n                strats[type + 's'] = mergeAssets\r\n            })\r\n\r\n            /**\r\n             * Events & Watchers.\r\n             *\r\n             * Events & watchers hashes should not overwrite one\r\n             * another, so we merge them as arrays.\r\n             */\r\n\r\n            strats.watch =\r\n                strats.events = function (parentVal, childVal) {\r\n                    if (!childVal) return parentVal\r\n                    if (!parentVal) return childVal\r\n                    var ret = {}\r\n                    extend(ret, parentVal)\r\n                    for (var key in childVal) {\r\n                        var parent = ret[key]\r\n                        var child = childVal[key]\r\n                        if (parent && !_.isArray(parent)) {\r\n                            parent = [parent]\r\n                        }\r\n                        ret[key] = parent\r\n                            ? parent.concat(child)\r\n                            : [child]\r\n                    }\r\n                    return ret\r\n                }\r\n\r\n            /**\r\n             * Other object hashes.\r\n             */\r\n\r\n            strats.methods =\r\n                strats.computed = function (parentVal, childVal) {\r\n                    if (!childVal) return parentVal\r\n                    if (!parentVal) return childVal\r\n                    var ret = Object.create(parentVal)\r\n                    extend(ret, childVal)\r\n                    return ret\r\n                }\r\n\r\n            /**\r\n             * Default strategy.\r\n             */\r\n\r\n            var defaultStrat = function (parentVal, childVal) {\r\n                return childVal === undefined\r\n                    ? parentVal\r\n                    : childVal\r\n            }\r\n\r\n            /**\r\n             * Make sure component options get converted to actual\r\n             * constructors.\r\n             *\r\n             * @param {Object} options\r\n             */\r\n\r\n            function guardComponents (options) {\r\n                if (options.components) {\r\n                    var components = options.components =\r\n                        guardArrayAssets(options.components)\r\n                    var def\r\n                    var ids = Object.keys(components)\r\n                    for (var i = 0, l = ids.length; i < l; i++) {\r\n                        var key = ids[i]\r\n                        if (_.commonTagRE.test(key)) {\r\n                            (\"development\") !== 'production' && _.warn(\r\n                                'Do not use built-in HTML elements as component ' +\r\n                                'id: ' + key\r\n                            )\r\n                            continue\r\n                        }\r\n                        def = components[key]\r\n                        if (_.isPlainObject(def)) {\r\n                            def.id = def.id || key\r\n                            components[key] = def._Ctor || (def._Ctor = _.Vue.extend(def))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Ensure all props option syntax are normalized into the\r\n             * Object-based format.\r\n             *\r\n             * @param {Object} options\r\n             */\r\n\r\n            function guardProps (options) {\r\n                var props = options.props\r\n                if (_.isPlainObject(props)) {\r\n                    options.props = Object.keys(props).map(function (key) {\r\n                        var val = props[key]\r\n                        if (!_.isPlainObject(val)) {\r\n                            val = { type: val }\r\n                        }\r\n                        val.name = key\r\n                        return val\r\n                    })\r\n                } else if (_.isArray(props)) {\r\n                    options.props = props.map(function (prop) {\r\n                        return typeof prop === 'string'\r\n                            ? { name: prop }\r\n                            : prop\r\n                    })\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Guard an Array-format assets option and converted it\r\n             * into the key-value Object format.\r\n             *\r\n             * @param {Object|Array} assets\r\n             * @return {Object}\r\n             */\r\n\r\n            function guardArrayAssets (assets) {\r\n                if (_.isArray(assets)) {\r\n                    var res = {}\r\n                    var i = assets.length\r\n                    var asset\r\n                    while (i--) {\r\n                        asset = assets[i]\r\n                        var id = asset.id || (asset.options && asset.options.id)\r\n                        if (!id) {\r\n                            (\"development\") !== 'production' && _.warn(\r\n                                'Array-syntax assets must provide an id field.'\r\n                            )\r\n                        } else {\r\n                            res[id] = asset\r\n                        }\r\n                    }\r\n                    return res\r\n                }\r\n                return assets\r\n            }\r\n\r\n            /**\r\n             * Merge two option objects into a new one.\r\n             * Core utility used in both instantiation and inheritance.\r\n             *\r\n             * @param {Object} parent\r\n             * @param {Object} child\r\n             * @param {Vue} [vm] - if vm is present, indicates this is\r\n             *                     an instantiation merge.\r\n             */\r\n\r\n            exports.mergeOptions = function merge (parent, child, vm) {\r\n                guardComponents(child)\r\n                guardProps(child)\r\n                var options = {}\r\n                var key\r\n                if (child.mixins) {\r\n                    for (var i = 0, l = child.mixins.length; i < l; i++) {\r\n                        parent = merge(parent, child.mixins[i], vm)\r\n                    }\r\n                }\r\n                for (key in parent) {\r\n                    mergeField(key)\r\n                }\r\n                for (key in child) {\r\n                    if (!(parent.hasOwnProperty(key))) {\r\n                        mergeField(key)\r\n                    }\r\n                }\r\n                function mergeField (key) {\r\n                    var strat = strats[key] || defaultStrat\r\n                    options[key] = strat(parent[key], child[key], vm, key)\r\n                }\r\n                return options\r\n            }\r\n\r\n            /**\r\n             * Resolve an asset.\r\n             * This function is used because child instances need access\r\n             * to assets defined in its ancestor chain.\r\n             *\r\n             * @param {Object} options\r\n             * @param {String} type\r\n             * @param {String} id\r\n             * @return {Object|Function}\r\n             */\r\n\r\n            exports.resolveAsset = function resolve (options, type, id) {\r\n                var camelizedId = _.camelize(id)\r\n                var pascalizedId = camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)\r\n                var assets = options[type]\r\n                var asset = assets[id] || assets[camelizedId] || assets[pascalizedId]\r\n                while (\r\n                !asset &&\r\n                options._parent &&\r\n                (!config.strict || options._repeat)\r\n                    ) {\r\n                    options = (options._context || options._parent).$options\r\n                    assets = options[type]\r\n                    asset = assets[id] || assets[camelizedId] || assets[pascalizedId]\r\n                }\r\n                return asset\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 7 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Check if an element is a component, if yes return its\r\n             * component id.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {String|undefined}\r\n             */\r\n\r\n            exports.commonTagRE = /^(div|p|span|img|a|br|ul|ol|li|h1|h2|h3|h4|h5|code|pre)$/\r\n            exports.checkComponent = function (el, options) {\r\n                var tag = el.tagName.toLowerCase()\r\n                if (tag === 'component') {\r\n                    // dynamic syntax\r\n                    var exp = el.getAttribute('is')\r\n                    el.removeAttribute('is')\r\n                    return exp\r\n                } else if (\r\n                    !exports.commonTagRE.test(tag) &&\r\n                    _.resolveAsset(options, 'components', tag)\r\n                ) {\r\n                    return tag\r\n                    /* eslint-disable no-cond-assign */\r\n                } else if (tag = _.attr(el, 'component')) {\r\n                    /* eslint-enable no-cond-assign */\r\n                    return tag\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Set a prop's initial value on a vm and its data object.\r\n             * The vm may have inherit:true so we need to make sure\r\n             * we don't accidentally overwrite parent value.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Object} prop\r\n             * @param {*} value\r\n             */\r\n\r\n            exports.initProp = function (vm, prop, value) {\r\n                if (exports.assertProp(prop, value)) {\r\n                    var key = prop.path\r\n                    if (key in vm) {\r\n                        _.define(vm, key, value, true)\r\n                    } else {\r\n                        vm[key] = value\r\n                    }\r\n                    vm._data[key] = value\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Assert whether a prop is valid.\r\n             *\r\n             * @param {Object} prop\r\n             * @param {*} value\r\n             */\r\n\r\n            exports.assertProp = function (prop, value) {\r\n                // if a prop is not provided and is not required,\r\n                // skip the check.\r\n                if (prop.raw === null && !prop.required) {\r\n                    return true\r\n                }\r\n                var options = prop.options\r\n                var type = options.type\r\n                var valid = true\r\n                var expectedType\r\n                if (type) {\r\n                    if (type === String) {\r\n                        expectedType = 'string'\r\n                        valid = typeof value === expectedType\r\n                    } else if (type === Number) {\r\n                        expectedType = 'number'\r\n                        valid = typeof value === 'number'\r\n                    } else if (type === Boolean) {\r\n                        expectedType = 'boolean'\r\n                        valid = typeof value === 'boolean'\r\n                    } else if (type === Function) {\r\n                        expectedType = 'function'\r\n                        valid = typeof value === 'function'\r\n                    } else if (type === Object) {\r\n                        expectedType = 'object'\r\n                        valid = _.isPlainObject(value)\r\n                    } else if (type === Array) {\r\n                        expectedType = 'array'\r\n                        valid = _.isArray(value)\r\n                    } else {\r\n                        valid = value instanceof type\r\n                    }\r\n                }\r\n                if (!valid) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Invalid prop: type check failed for ' +\r\n                        prop.path + '=\"' + prop.raw + '\".' +\r\n                        ' Expected ' + formatType(expectedType) +\r\n                        ', got ' + formatValue(value) + '.'\r\n                    )\r\n                    return false\r\n                }\r\n                var validator = options.validator\r\n                if (validator) {\r\n                    if (!validator.call(null, value)) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Invalid prop: custom validator check failed for ' +\r\n                            prop.path + '=\"' + prop.raw + '\"'\r\n                        )\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            }\r\n\r\n            function formatType (val) {\r\n                return val\r\n                    ? val.charAt(0).toUpperCase() + val.slice(1)\r\n                    : 'custom type'\r\n            }\r\n\r\n            function formatValue (val) {\r\n                return Object.prototype.toString.call(val).slice(8, -1)\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 8 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            /**\r\n             * Enable debug utilities.\r\n             */\r\n\r\n            if (true) {\r\n\r\n                var config = __webpack_require__(5)\r\n                var hasConsole = typeof console !== 'undefined'\r\n\r\n                /**\r\n                 * Log a message.\r\n                 *\r\n                 * @param {String} msg\r\n                 */\r\n\r\n                exports.log = function (msg) {\r\n                    if (hasConsole && config.debug) {\r\n                        console.log('[Vue info]: ' + msg)\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * We've got a problem here.\r\n                 *\r\n                 * @param {String} msg\r\n                 */\r\n\r\n                exports.warn = function (msg, e) {\r\n                    if (hasConsole && (!config.silent || config.debug)) {\r\n                        console.warn('[Vue warn]: ' + msg)\r\n                        /* istanbul ignore if */\r\n                        if (config.debug) {\r\n                            console.warn((e || new Error('Warning Stack Trace')).stack)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Assert asset exists\r\n                 */\r\n\r\n                exports.assertAsset = function (val, type, id) {\r\n                    /* istanbul ignore if */\r\n                    if (type === 'directive') {\r\n                        if (id === 'with') {\r\n                            exports.warn(\r\n                                'v-with has been deprecated in ^0.12.0. ' +\r\n                                'Use props instead.'\r\n                            )\r\n                            return\r\n                        }\r\n                        if (id === 'events') {\r\n                            exports.warn(\r\n                                'v-events has been deprecated in ^0.12.0. ' +\r\n                                'Pass down methods as callback props instead.'\r\n                            )\r\n                            return\r\n                        }\r\n                    }\r\n                    if (!val) {\r\n                        exports.warn('Failed to resolve ' + type + ': ' + id)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 9 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n\r\n            /**\r\n             * Expose useful internals\r\n             */\r\n\r\n            exports.util = _\r\n            exports.config = config\r\n            exports.nextTick = _.nextTick\r\n            exports.compiler = __webpack_require__(10)\r\n\r\n            exports.parsers = {\r\n                path: __webpack_require__(20),\r\n                text: __webpack_require__(13),\r\n                template: __webpack_require__(22),\r\n                directive: __webpack_require__(15),\r\n                expression: __webpack_require__(19)\r\n            }\r\n\r\n            /**\r\n             * Each instance constructor, including Vue, has a unique\r\n             * cid. This enables us to create wrapped \"child\r\n             * constructors\" for prototypal inheritance and cache them.\r\n             */\r\n\r\n            exports.cid = 0\r\n            var cid = 1\r\n\r\n            /**\r\n             * Class inheritance\r\n             *\r\n             * @param {Object} extendOptions\r\n             */\r\n\r\n            exports.extend = function (extendOptions) {\r\n                extendOptions = extendOptions || {}\r\n                var Super = this\r\n                var Sub = createClass(\r\n                    extendOptions.name ||\r\n                    Super.options.name ||\r\n                    'VueComponent'\r\n                )\r\n                Sub.prototype = Object.create(Super.prototype)\r\n                Sub.prototype.constructor = Sub\r\n                Sub.cid = cid++\r\n                Sub.options = _.mergeOptions(\r\n                    Super.options,\r\n                    extendOptions\r\n                )\r\n                Sub['super'] = Super\r\n                // allow further extension\r\n                Sub.extend = Super.extend\r\n                // create asset registers, so extended classes\r\n                // can have their private assets too.\r\n                config._assetTypes.forEach(function (type) {\r\n                    Sub[type] = Super[type]\r\n                })\r\n                return Sub\r\n            }\r\n\r\n            /**\r\n             * A function that returns a sub-class constructor with the\r\n             * given name. This gives us much nicer output when\r\n             * logging instances in the console.\r\n             *\r\n             * @param {String} name\r\n             * @return {Function}\r\n             */\r\n\r\n            function createClass (name) {\r\n                return new Function(\r\n                    'return function ' + _.classify(name) +\r\n                    ' (options) { this._init(options) }'\r\n                )()\r\n            }\r\n\r\n            /**\r\n             * Plugin system\r\n             *\r\n             * @param {Object} plugin\r\n             */\r\n\r\n            exports.use = function (plugin) {\r\n                // additional parameters\r\n                var args = _.toArray(arguments, 1)\r\n                args.unshift(this)\r\n                if (typeof plugin.install === 'function') {\r\n                    plugin.install.apply(plugin, args)\r\n                } else {\r\n                    plugin.apply(null, args)\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Apply a global mixin by merging it into the default\r\n             * options.\r\n             */\r\n\r\n            exports.mixin = function (mixin) {\r\n                var Vue = _.Vue\r\n                Vue.options = _.mergeOptions(Vue.options, mixin)\r\n            }\r\n\r\n            /**\r\n             * Create asset registration methods with the following\r\n             * signature:\r\n             *\r\n             * @param {String} id\r\n             * @param {*} definition\r\n             */\r\n\r\n            config._assetTypes.forEach(function (type) {\r\n                exports[type] = function (id, definition) {\r\n                    if (!definition) {\r\n                        return this.options[type + 's'][id]\r\n                    } else {\r\n                        if (\r\n                            type === 'component' &&\r\n                            _.isPlainObject(definition)\r\n                        ) {\r\n                            definition.name = id\r\n                            definition = _.Vue.extend(definition)\r\n                        }\r\n                        this.options[type + 's'][id] = definition\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n            /***/ },\r\n        /* 10 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            _.extend(exports, __webpack_require__(11))\r\n            _.extend(exports, __webpack_require__(24))\r\n\r\n\r\n            /***/ },\r\n        /* 11 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var compileProps = __webpack_require__(12)\r\n            var config = __webpack_require__(5)\r\n            var textParser = __webpack_require__(13)\r\n            var dirParser = __webpack_require__(15)\r\n            var templateParser = __webpack_require__(22)\r\n            var resolveAsset = _.resolveAsset\r\n            var componentDef = __webpack_require__(23)\r\n\r\n            // terminal directives\r\n            var terminalDirectives = [\r\n                'repeat',\r\n                'if'\r\n            ]\r\n\r\n            /**\r\n             * Compile a template and return a reusable composite link\r\n             * function, which recursively contains more link functions\r\n             * inside. This top level compile function would normally\r\n             * be called on instance root nodes, but can also be used\r\n             * for partial compilation if the partial argument is true.\r\n             *\r\n             * The returned composite link function, when called, will\r\n             * return an unlink function that tearsdown all directives\r\n             * created during the linking phase.\r\n             *\r\n             * @param {Element|DocumentFragment} el\r\n             * @param {Object} options\r\n             * @param {Boolean} partial\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.compile = function (el, options, partial) {\r\n                // link function for the node itself.\r\n                var nodeLinkFn = partial || !options._asComponent\r\n                    ? compileNode(el, options)\r\n                    : null\r\n                // link function for the childNodes\r\n                var childLinkFn =\r\n                    !(nodeLinkFn && nodeLinkFn.terminal) &&\r\n                    el.tagName !== 'SCRIPT' &&\r\n                    el.hasChildNodes()\r\n                        ? compileNodeList(el.childNodes, options)\r\n                        : null\r\n\r\n                /**\r\n                 * A composite linker function to be called on a already\r\n                 * compiled piece of DOM, which instantiates all directive\r\n                 * instances.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 * @param {Element|DocumentFragment} el\r\n                 * @param {Vue} [host] - host vm of transcluded content\r\n                 * @return {Function|undefined}\r\n                 */\r\n\r\n                return function compositeLinkFn (vm, el, host) {\r\n                    // cache childNodes before linking parent, fix #657\r\n                    var childNodes = _.toArray(el.childNodes)\r\n                    // link\r\n                    var dirs = linkAndCapture(function () {\r\n                        if (nodeLinkFn) nodeLinkFn(vm, el, host)\r\n                        if (childLinkFn) childLinkFn(vm, childNodes, host)\r\n                    }, vm)\r\n                    return makeUnlinkFn(vm, dirs)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Apply a linker to a vm/element pair and capture the\r\n             * directives created during the process.\r\n             *\r\n             * @param {Function} linker\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            function linkAndCapture (linker, vm) {\r\n                var originalDirCount = vm._directives.length\r\n                linker()\r\n                return vm._directives.slice(originalDirCount)\r\n            }\r\n\r\n            /**\r\n             * Linker functions return an unlink function that\r\n             * tearsdown all directives instances generated during\r\n             * the process.\r\n             *\r\n             * We create unlink functions with only the necessary\r\n             * information to avoid retaining additional closures.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Array} dirs\r\n             * @param {Vue} [context]\r\n             * @param {Array} [contextDirs]\r\n             * @return {Function}\r\n             */\r\n\r\n            function makeUnlinkFn (vm, dirs, context, contextDirs) {\r\n                return function unlink (destroying) {\r\n                    teardownDirs(vm, dirs, destroying)\r\n                    if (context && contextDirs) {\r\n                        teardownDirs(context, contextDirs)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Teardown partial linked directives.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Array} dirs\r\n             * @param {Boolean} destroying\r\n             */\r\n\r\n            function teardownDirs (vm, dirs, destroying) {\r\n                var i = dirs.length\r\n                while (i--) {\r\n                    dirs[i]._teardown()\r\n                    if (!destroying) {\r\n                        vm._directives.$remove(dirs[i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compile link props on an instance.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.compileAndLinkProps = function (vm, el, props) {\r\n                var propsLinkFn = compileProps(el, props)\r\n                var propDirs = linkAndCapture(function () {\r\n                    propsLinkFn(vm, null)\r\n                }, vm)\r\n                return makeUnlinkFn(vm, propDirs)\r\n            }\r\n\r\n            /**\r\n             * Compile the root element of an instance.\r\n             *\r\n             * 1. attrs on context container (context scope)\r\n             * 2. attrs on the component template root node, if\r\n             *    replace:true (child scope)\r\n             *\r\n             * If this is a fragment instance, we only need to compile 1.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.compileRoot = function (el, options) {\r\n                var containerAttrs = options._containerAttrs\r\n                var replacerAttrs = options._replacerAttrs\r\n                var contextLinkFn, replacerLinkFn\r\n\r\n                // only need to compile other attributes for\r\n                // non-fragment instances\r\n                if (el.nodeType !== 11) {\r\n                    // for components, container and replacer need to be\r\n                    // compiled separately and linked in different scopes.\r\n                    if (options._asComponent) {\r\n                        // 2. container attributes\r\n                        if (containerAttrs) {\r\n                            contextLinkFn = compileDirectives(containerAttrs, options)\r\n                        }\r\n                        if (replacerAttrs) {\r\n                            // 3. replacer attributes\r\n                            replacerLinkFn = compileDirectives(replacerAttrs, options)\r\n                        }\r\n                    } else {\r\n                        // non-component, just compile as a normal element.\r\n                        replacerLinkFn = compileDirectives(el.attributes, options)\r\n                    }\r\n                }\r\n\r\n                return function rootLinkFn (vm, el) {\r\n                    // link context scope dirs\r\n                    var context = vm._context\r\n                    var contextDirs\r\n                    if (context && contextLinkFn) {\r\n                        contextDirs = linkAndCapture(function () {\r\n                            contextLinkFn(context, el)\r\n                        }, context)\r\n                    }\r\n\r\n                    // link self\r\n                    var selfDirs = linkAndCapture(function () {\r\n                        if (replacerLinkFn) replacerLinkFn(vm, el)\r\n                    }, vm)\r\n\r\n                    // return the unlink function that tearsdown context\r\n                    // container directives.\r\n                    return makeUnlinkFn(vm, selfDirs, context, contextDirs)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compile a node and return a nodeLinkFn based on the\r\n             * node type.\r\n             *\r\n             * @param {Node} node\r\n             * @param {Object} options\r\n             * @return {Function|null}\r\n             */\r\n\r\n            function compileNode (node, options) {\r\n                var type = node.nodeType\r\n                if (type === 1 && node.tagName !== 'SCRIPT') {\r\n                    return compileElement(node, options)\r\n                } else if (type === 3 && config.interpolate && node.data.trim()) {\r\n                    return compileTextNode(node, options)\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compile an element and return a nodeLinkFn.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Function|null}\r\n             */\r\n\r\n            function compileElement (el, options) {\r\n                // preprocess textareas.\r\n                // textarea treats its text content as the initial value.\r\n                // just bind it as a v-attr directive for value.\r\n                if (el.tagName === 'TEXTAREA') {\r\n                    if (textParser.parse(el.value)) {\r\n                        el.setAttribute('value', el.value)\r\n                    }\r\n                }\r\n                var linkFn\r\n                var hasAttrs = el.hasAttributes()\r\n                // check terminal directives (repeat & if)\r\n                if (hasAttrs) {\r\n                    linkFn = checkTerminalDirectives(el, options)\r\n                }\r\n                // check element directives\r\n                if (!linkFn) {\r\n                    linkFn = checkElementDirectives(el, options)\r\n                }\r\n                // check component\r\n                if (!linkFn) {\r\n                    linkFn = checkComponent(el, options)\r\n                }\r\n                // normal directives\r\n                if (!linkFn && hasAttrs) {\r\n                    linkFn = compileDirectives(el.attributes, options)\r\n                }\r\n                return linkFn\r\n            }\r\n\r\n            /**\r\n             * Compile a textNode and return a nodeLinkFn.\r\n             *\r\n             * @param {TextNode} node\r\n             * @param {Object} options\r\n             * @return {Function|null} textNodeLinkFn\r\n             */\r\n\r\n            function compileTextNode (node, options) {\r\n                var tokens = textParser.parse(node.data)\r\n                if (!tokens) {\r\n                    return null\r\n                }\r\n                var frag = document.createDocumentFragment()\r\n                var el, token\r\n                for (var i = 0, l = tokens.length; i < l; i++) {\r\n                    token = tokens[i]\r\n                    el = token.tag\r\n                        ? processTextToken(token, options)\r\n                        : document.createTextNode(token.value)\r\n                    frag.appendChild(el)\r\n                }\r\n                return makeTextNodeLinkFn(tokens, frag, options)\r\n            }\r\n\r\n            /**\r\n             * Process a single text token.\r\n             *\r\n             * @param {Object} token\r\n             * @param {Object} options\r\n             * @return {Node}\r\n             */\r\n\r\n            function processTextToken (token, options) {\r\n                var el\r\n                if (token.oneTime) {\r\n                    el = document.createTextNode(token.value)\r\n                } else {\r\n                    if (token.html) {\r\n                        el = document.createComment('v-html')\r\n                        setTokenType('html')\r\n                    } else {\r\n                        // IE will clean up empty textNodes during\r\n                        // frag.cloneNode(true), so we have to give it\r\n                        // something here...\r\n                        el = document.createTextNode(' ')\r\n                        setTokenType('text')\r\n                    }\r\n                }\r\n                function setTokenType (type) {\r\n                    token.type = type\r\n                    token.def = resolveAsset(options, 'directives', type)\r\n                    token.descriptor = dirParser.parse(token.value)[0]\r\n                }\r\n                return el\r\n            }\r\n\r\n            /**\r\n             * Build a function that processes a textNode.\r\n             *\r\n             * @param {Array<Object>} tokens\r\n             * @param {DocumentFragment} frag\r\n             */\r\n\r\n            function makeTextNodeLinkFn (tokens, frag) {\r\n                return function textNodeLinkFn (vm, el) {\r\n                    var fragClone = frag.cloneNode(true)\r\n                    var childNodes = _.toArray(fragClone.childNodes)\r\n                    var token, value, node\r\n                    for (var i = 0, l = tokens.length; i < l; i++) {\r\n                        token = tokens[i]\r\n                        value = token.value\r\n                        if (token.tag) {\r\n                            node = childNodes[i]\r\n                            if (token.oneTime) {\r\n                                value = vm.$eval(value)\r\n                                if (token.html) {\r\n                                    _.replace(node, templateParser.parse(value, true))\r\n                                } else {\r\n                                    node.data = value\r\n                                }\r\n                            } else {\r\n                                vm._bindDir(token.type, node,\r\n                                    token.descriptor, token.def)\r\n                            }\r\n                        }\r\n                    }\r\n                    _.replace(el, fragClone)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compile a node list and return a childLinkFn.\r\n             *\r\n             * @param {NodeList} nodeList\r\n             * @param {Object} options\r\n             * @return {Function|undefined}\r\n             */\r\n\r\n            function compileNodeList (nodeList, options) {\r\n                var linkFns = []\r\n                var nodeLinkFn, childLinkFn, node\r\n                for (var i = 0, l = nodeList.length; i < l; i++) {\r\n                    node = nodeList[i]\r\n                    nodeLinkFn = compileNode(node, options)\r\n                    childLinkFn =\r\n                        !(nodeLinkFn && nodeLinkFn.terminal) &&\r\n                        node.tagName !== 'SCRIPT' &&\r\n                        node.hasChildNodes()\r\n                            ? compileNodeList(node.childNodes, options)\r\n                            : null\r\n                    linkFns.push(nodeLinkFn, childLinkFn)\r\n                }\r\n                return linkFns.length\r\n                    ? makeChildLinkFn(linkFns)\r\n                    : null\r\n            }\r\n\r\n            /**\r\n             * Make a child link function for a node's childNodes.\r\n             *\r\n             * @param {Array<Function>} linkFns\r\n             * @return {Function} childLinkFn\r\n             */\r\n\r\n            function makeChildLinkFn (linkFns) {\r\n                return function childLinkFn (vm, nodes, host) {\r\n                    var node, nodeLinkFn, childrenLinkFn\r\n                    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\r\n                        node = nodes[n]\r\n                        nodeLinkFn = linkFns[i++]\r\n                        childrenLinkFn = linkFns[i++]\r\n                        // cache childNodes before linking parent, fix #657\r\n                        var childNodes = _.toArray(node.childNodes)\r\n                        if (nodeLinkFn) {\r\n                            nodeLinkFn(vm, node, host)\r\n                        }\r\n                        if (childrenLinkFn) {\r\n                            childrenLinkFn(vm, childNodes, host)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check for element directives (custom elements that should\r\n             * be resovled as terminal directives).\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             */\r\n\r\n            function checkElementDirectives (el, options) {\r\n                var tag = el.tagName.toLowerCase()\r\n                if (_.commonTagRE.test(tag)) return\r\n                var def = resolveAsset(options, 'elementDirectives', tag)\r\n                if (def) {\r\n                    return makeTerminalNodeLinkFn(el, tag, '', options, def)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check if an element is a component. If yes, return\r\n             * a component link function.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @param {Boolean} hasAttrs\r\n             * @return {Function|undefined}\r\n             */\r\n\r\n            function checkComponent (el, options, hasAttrs) {\r\n                var componentId = _.checkComponent(el, options, hasAttrs)\r\n                if (componentId) {\r\n                    var componentLinkFn = function (vm, el, host) {\r\n                        vm._bindDir('component', el, {\r\n                            expression: componentId\r\n                        }, componentDef, host)\r\n                    }\r\n                    componentLinkFn.terminal = true\r\n                    return componentLinkFn\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check an element for terminal directives in fixed order.\r\n             * If it finds one, return a terminal link function.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Function} terminalLinkFn\r\n             */\r\n\r\n            function checkTerminalDirectives (el, options) {\r\n                if (_.attr(el, 'pre') !== null) {\r\n                    return skip\r\n                }\r\n                var value, dirName\r\n                for (var i = 0, l = terminalDirectives.length; i < l; i++) {\r\n                    dirName = terminalDirectives[i]\r\n                    if ((value = _.attr(el, dirName)) !== null) {\r\n                        return makeTerminalNodeLinkFn(el, dirName, value, options)\r\n                    }\r\n                }\r\n            }\r\n\r\n            function skip () {}\r\n            skip.terminal = true\r\n\r\n            /**\r\n             * Build a node link function for a terminal directive.\r\n             * A terminal link function terminates the current\r\n             * compilation recursion and handles compilation of the\r\n             * subtree in the directive.\r\n             *\r\n             * @param {Element} el\r\n             * @param {String} dirName\r\n             * @param {String} value\r\n             * @param {Object} options\r\n             * @param {Object} [def]\r\n             * @return {Function} terminalLinkFn\r\n             */\r\n\r\n            function makeTerminalNodeLinkFn (el, dirName, value, options, def) {\r\n                var descriptor = dirParser.parse(value)[0]\r\n                // no need to call resolveAsset since terminal directives\r\n                // are always internal\r\n                def = def || options.directives[dirName]\r\n                var fn = function terminalNodeLinkFn (vm, el, host) {\r\n                    vm._bindDir(dirName, el, descriptor, def, host)\r\n                }\r\n                fn.terminal = true\r\n                return fn\r\n            }\r\n\r\n            /**\r\n             * Compile the directives on an element and return a linker.\r\n             *\r\n             * @param {Array|NamedNodeMap} attrs\r\n             * @param {Object} options\r\n             * @return {Function}\r\n             */\r\n\r\n            function compileDirectives (attrs, options) {\r\n                var i = attrs.length\r\n                var dirs = []\r\n                var attr, name, value, dir, dirName, dirDef\r\n                while (i--) {\r\n                    attr = attrs[i]\r\n                    name = attr.name\r\n                    value = attr.value\r\n                    if (name.indexOf(config.prefix) === 0) {\r\n                        dirName = name.slice(config.prefix.length)\r\n                        dirDef = resolveAsset(options, 'directives', dirName)\r\n                        if (true) {\r\n                            _.assertAsset(dirDef, 'directive', dirName)\r\n                        }\r\n                        if (dirDef) {\r\n                            dirs.push({\r\n                                name: dirName,\r\n                                descriptors: dirParser.parse(value),\r\n                                def: dirDef\r\n                            })\r\n                        }\r\n                    } else if (config.interpolate) {\r\n                        dir = collectAttrDirective(name, value, options)\r\n                        if (dir) {\r\n                            dirs.push(dir)\r\n                        }\r\n                    }\r\n                }\r\n                // sort by priority, LOW to HIGH\r\n                if (dirs.length) {\r\n                    dirs.sort(directiveComparator)\r\n                    return makeNodeLinkFn(dirs)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Build a link function for all directives on a single node.\r\n             *\r\n             * @param {Array} directives\r\n             * @return {Function} directivesLinkFn\r\n             */\r\n\r\n            function makeNodeLinkFn (directives) {\r\n                return function nodeLinkFn (vm, el, host) {\r\n                    // reverse apply because it's sorted low to high\r\n                    var i = directives.length\r\n                    var dir, j, k\r\n                    while (i--) {\r\n                        dir = directives[i]\r\n                        if (dir._link) {\r\n                            // custom link fn\r\n                            dir._link(vm, el)\r\n                        } else {\r\n                            k = dir.descriptors.length\r\n                            for (j = 0; j < k; j++) {\r\n                                vm._bindDir(dir.name, el,\r\n                                    dir.descriptors[j], dir.def, host)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check an attribute for potential dynamic bindings,\r\n             * and return a directive object.\r\n             *\r\n             * Special case: class interpolations are translated into\r\n             * v-class instead v-attr, so that it can work with user\r\n             * provided v-class bindings.\r\n             *\r\n             * @param {String} name\r\n             * @param {String} value\r\n             * @param {Object} options\r\n             * @return {Object}\r\n             */\r\n\r\n            function collectAttrDirective (name, value, options) {\r\n                var tokens = textParser.parse(value)\r\n                var isClass = name === 'class'\r\n                if (tokens) {\r\n                    var dirName = isClass ? 'class' : 'attr'\r\n                    var def = options.directives[dirName]\r\n                    var i = tokens.length\r\n                    var allOneTime = true\r\n                    while (i--) {\r\n                        var token = tokens[i]\r\n                        if (token.tag && !token.oneTime) {\r\n                            allOneTime = false\r\n                        }\r\n                    }\r\n                    var linker\r\n                    if (allOneTime) {\r\n                        linker = function (vm, el) {\r\n                            el.setAttribute(name, vm.$interpolate(value))\r\n                        }\r\n                    } else {\r\n                        linker = function (vm, el) {\r\n                            var exp = textParser.tokensToExp(tokens, vm)\r\n                            var desc = isClass\r\n                                ? dirParser.parse(exp)[0]\r\n                                : dirParser.parse(name + ':' + exp)[0]\r\n                            if (isClass) {\r\n                                desc._rawClass = value\r\n                            }\r\n                            vm._bindDir(dirName, el, desc, def)\r\n                        }\r\n                    }\r\n                    return {\r\n                        def: def,\r\n                        _link: linker\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Directive priority sort comparator\r\n             *\r\n             * @param {Object} a\r\n             * @param {Object} b\r\n             */\r\n\r\n            function directiveComparator (a, b) {\r\n                a = a.def.priority || 0\r\n                b = b.def.priority || 0\r\n                return a > b ? 1 : -1\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 12 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var textParser = __webpack_require__(13)\r\n            var propDef = __webpack_require__(16)\r\n            var propBindingModes = __webpack_require__(5)._propBindingModes\r\n\r\n            // regexes\r\n            var identRE = __webpack_require__(20).identRE\r\n            var dataAttrRE = /^data-/\r\n            var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/\r\n            var literalValueRE = /^(true|false)$|^\\d.*/\r\n\r\n            /**\r\n             * Compile param attributes on a root element and return\r\n             * a props link function.\r\n             *\r\n             * @param {Element|DocumentFragment} el\r\n             * @param {Array} propOptions\r\n             * @return {Function} propsLinkFn\r\n             */\r\n\r\n            module.exports = function compileProps (el, propOptions) {\r\n                var props = []\r\n                var i = propOptions.length\r\n                var options, name, attr, value, path, prop, literal, single\r\n                while (i--) {\r\n                    options = propOptions[i]\r\n                    name = options.name\r\n                    // props could contain dashes, which will be\r\n                    // interpreted as minus calculations by the parser\r\n                    // so we need to camelize the path here\r\n                    path = _.camelize(name.replace(dataAttrRE, ''))\r\n                    if (!identRE.test(path)) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Invalid prop key: \"' + name + '\". Prop keys ' +\r\n                            'must be valid identifiers.'\r\n                        )\r\n                        continue\r\n                    }\r\n                    attr = _.hyphenate(name)\r\n                    value = el.getAttribute(attr)\r\n                    if (value === null) {\r\n                        attr = 'data-' + attr\r\n                        value = el.getAttribute(attr)\r\n                    }\r\n                    // create a prop descriptor\r\n                    prop = {\r\n                        name: name,\r\n                        raw: value,\r\n                        path: path,\r\n                        options: options,\r\n                        mode: propBindingModes.ONE_WAY\r\n                    }\r\n                    if (value !== null) {\r\n                        // important so that this doesn't get compiled\r\n                        // again as a normal attribute binding\r\n                        el.removeAttribute(attr)\r\n                        var tokens = textParser.parse(value)\r\n                        if (tokens) {\r\n                            prop.dynamic = true\r\n                            prop.parentPath = textParser.tokensToExp(tokens)\r\n                            // check prop binding type.\r\n                            single = tokens.length === 1\r\n                            literal = literalValueRE.test(prop.parentPath)\r\n                            // one time: {{* prop}}\r\n                            if (literal || (single && tokens[0].oneTime)) {\r\n                                prop.mode = propBindingModes.ONE_TIME\r\n                            } else if (\r\n                                !literal &&\r\n                                (single && tokens[0].twoWay)\r\n                            ) {\r\n                                if (settablePathRE.test(prop.parentPath)) {\r\n                                    prop.mode = propBindingModes.TWO_WAY\r\n                                } else {\r\n                                    (\"development\") !== 'production' && _.warn(\r\n                                        'Cannot bind two-way prop with non-settable ' +\r\n                                        'parent path: ' + prop.parentPath\r\n                                    )\r\n                                }\r\n                            }\r\n                            if (\r\n                                (\"development\") !== 'production' &&\r\n                                options.twoWay &&\r\n                                prop.mode !== propBindingModes.TWO_WAY\r\n                            ) {\r\n                                _.warn(\r\n                                    'Prop \"' + name + '\" expects a two-way binding type.'\r\n                                )\r\n                            }\r\n                        }\r\n                    } else if (options && options.required) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Missing required prop: ' + name\r\n                        )\r\n                    }\r\n                    props.push(prop)\r\n                }\r\n                return makePropsLinkFn(props)\r\n            }\r\n\r\n            /**\r\n             * Build a function that applies props to a vm.\r\n             *\r\n             * @param {Array} props\r\n             * @return {Function} propsLinkFn\r\n             */\r\n\r\n            function makePropsLinkFn (props) {\r\n                return function propsLinkFn (vm, el) {\r\n                    // store resolved props info\r\n                    vm._props = {}\r\n                    var i = props.length\r\n                    var prop, path, options, value\r\n                    while (i--) {\r\n                        prop = props[i]\r\n                        path = prop.path\r\n                        vm._props[path] = prop\r\n                        options = prop.options\r\n                        if (prop.raw === null) {\r\n                            // initialize absent prop\r\n                            _.initProp(vm, prop, getDefault(options))\r\n                        } else if (prop.dynamic) {\r\n                            // dynamic prop\r\n                            if (vm._context) {\r\n                                if (prop.mode === propBindingModes.ONE_TIME) {\r\n                                    // one time binding\r\n                                    value = vm._context.$get(prop.parentPath)\r\n                                    _.initProp(vm, prop, value)\r\n                                } else {\r\n                                    // dynamic binding\r\n                                    vm._bindDir('prop', el, prop, propDef)\r\n                                }\r\n                            } else {\r\n                                (\"development\") !== 'production' && _.warn(\r\n                                    'Cannot bind dynamic prop on a root instance' +\r\n                                    ' with no parent: ' + prop.name + '=\"' +\r\n                                    prop.raw + '\"'\r\n                                )\r\n                            }\r\n                        } else {\r\n                            // literal, cast it and just set once\r\n                            var raw = prop.raw\r\n                            value = options.type === Boolean && raw === ''\r\n                                ? true\r\n                                // do not cast emptry string.\r\n                                // _.toNumber casts empty string to 0.\r\n                                : raw.trim()\r\n                                ? _.toBoolean(_.toNumber(raw))\r\n                                : raw\r\n                            _.initProp(vm, prop, value)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Get the default value of a prop.\r\n             *\r\n             * @param {Object} options\r\n             * @return {*}\r\n             */\r\n\r\n            function getDefault (options) {\r\n                // no default, return undefined\r\n                if (!options.hasOwnProperty('default')) {\r\n                    // absent boolean value defaults to false\r\n                    return options.type === Boolean\r\n                        ? false\r\n                        : undefined\r\n                }\r\n                var def = options.default\r\n                // warn against non-factory defaults for Object & Array\r\n                if (_.isObject(def)) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Object/Array as default prop values will be shared ' +\r\n                        'across multiple instances. Use a factory function ' +\r\n                        'to return the default value instead.'\r\n                    )\r\n                }\r\n                // call factory function for non-Function types\r\n                return typeof def === 'function' && options.type !== Function\r\n                    ? def()\r\n                    : def\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 13 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var Cache = __webpack_require__(14)\r\n            var config = __webpack_require__(5)\r\n            var dirParser = __webpack_require__(15)\r\n            var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\n            var cache, tagRE, htmlRE, firstChar, lastChar\r\n\r\n            /**\r\n             * Escape a string so it can be used in a RegExp\r\n             * constructor.\r\n             *\r\n             * @param {String} str\r\n             */\r\n\r\n            function escapeRegex (str) {\r\n                return str.replace(regexEscapeRE, '\\\\$&')\r\n            }\r\n\r\n            /**\r\n             * Compile the interpolation tag regex.\r\n             *\r\n             * @return {RegExp}\r\n             */\r\n\r\n            function compileRegex () {\r\n                config._delimitersChanged = false\r\n                var open = config.delimiters[0]\r\n                var close = config.delimiters[1]\r\n                firstChar = open.charAt(0)\r\n                lastChar = close.charAt(close.length - 1)\r\n                var firstCharRE = escapeRegex(firstChar)\r\n                var lastCharRE = escapeRegex(lastChar)\r\n                var openRE = escapeRegex(open)\r\n                var closeRE = escapeRegex(close)\r\n                tagRE = new RegExp(\r\n                    firstCharRE + '?' + openRE +\r\n                    '(.+?)' +\r\n                    closeRE + lastCharRE + '?',\r\n                    'g'\r\n                )\r\n                htmlRE = new RegExp(\r\n                    '^' + firstCharRE + openRE +\r\n                    '.*' +\r\n                    closeRE + lastCharRE + '$'\r\n                )\r\n                // reset cache\r\n                cache = new Cache(1000)\r\n            }\r\n\r\n            /**\r\n             * Parse a template text string into an array of tokens.\r\n             *\r\n             * @param {String} text\r\n             * @return {Array<Object> | null}\r\n             *               - {String} type\r\n             *               - {String} value\r\n             *               - {Boolean} [html]\r\n             *               - {Boolean} [oneTime]\r\n             */\r\n\r\n            exports.parse = function (text) {\r\n                if (config._delimitersChanged) {\r\n                    compileRegex()\r\n                }\r\n                var hit = cache.get(text)\r\n                if (hit) {\r\n                    return hit\r\n                }\r\n                text = text.replace(/\\n/g, '')\r\n                if (!tagRE.test(text)) {\r\n                    return null\r\n                }\r\n                var tokens = []\r\n                var lastIndex = tagRE.lastIndex = 0\r\n                var match, index, value, first, oneTime, twoWay\r\n                /* eslint-disable no-cond-assign */\r\n                while (match = tagRE.exec(text)) {\r\n                    /* eslint-enable no-cond-assign */\r\n                    index = match.index\r\n                    // push text token\r\n                    if (index > lastIndex) {\r\n                        tokens.push({\r\n                            value: text.slice(lastIndex, index)\r\n                        })\r\n                    }\r\n                    // tag token\r\n                    first = match[1].charCodeAt(0)\r\n                    oneTime = first === 42 // *\r\n                    twoWay = first === 64  // @\r\n                    value = oneTime || twoWay\r\n                        ? match[1].slice(1)\r\n                        : match[1]\r\n                    tokens.push({\r\n                        tag: true,\r\n                        value: value.trim(),\r\n                        html: htmlRE.test(match[0]),\r\n                        oneTime: oneTime,\r\n                        twoWay: twoWay\r\n                    })\r\n                    lastIndex = index + match[0].length\r\n                }\r\n                if (lastIndex < text.length) {\r\n                    tokens.push({\r\n                        value: text.slice(lastIndex)\r\n                    })\r\n                }\r\n                cache.put(text, tokens)\r\n                return tokens\r\n            }\r\n\r\n            /**\r\n             * Format a list of tokens into an expression.\r\n             * e.g. tokens parsed from 'a {{b}} c' can be serialized\r\n             * into one single expression as '\"a \" + b + \" c\"'.\r\n             *\r\n             * @param {Array} tokens\r\n             * @param {Vue} [vm]\r\n             * @return {String}\r\n             */\r\n\r\n            exports.tokensToExp = function (tokens, vm) {\r\n                if (tokens.length > 1) {\r\n                    return tokens.map(function (token) {\r\n                        return formatToken(token, vm)\r\n                    }).join('+')\r\n                } else {\r\n                    return formatToken(tokens[0], vm, true)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Format a single token.\r\n             *\r\n             * @param {Object} token\r\n             * @param {Vue} [vm]\r\n             * @param {Boolean} single\r\n             * @return {String}\r\n             */\r\n\r\n            function formatToken (token, vm, single) {\r\n                return token.tag\r\n                    ? vm && token.oneTime\r\n                    ? '\"' + vm.$eval(token.value) + '\"'\r\n                    : inlineFilters(token.value, single)\r\n                    : '\"' + token.value + '\"'\r\n            }\r\n\r\n            /**\r\n             * For an attribute with multiple interpolation tags,\r\n             * e.g. attr=\"some-{{thing | filter}}\", in order to combine\r\n             * the whole thing into a single watchable expression, we\r\n             * have to inline those filters. This function does exactly\r\n             * that. This is a bit hacky but it avoids heavy changes\r\n             * to directive parser and watcher mechanism.\r\n             *\r\n             * @param {String} exp\r\n             * @param {Boolean} single\r\n             * @return {String}\r\n             */\r\n\r\n            var filterRE = /[^|]\\|[^|]/\r\n            function inlineFilters (exp, single) {\r\n                if (!filterRE.test(exp)) {\r\n                    return single\r\n                        ? exp\r\n                        : '(' + exp + ')'\r\n                } else {\r\n                    var dir = dirParser.parse(exp)[0]\r\n                    if (!dir.filters) {\r\n                        return '(' + exp + ')'\r\n                    } else {\r\n                        return 'this._applyFilters(' +\r\n                            dir.expression + // value\r\n                            ',null,' +       // oldValue (null for read)\r\n                            JSON.stringify(dir.filters) + // filter descriptors\r\n                            ',false)'        // write?\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 14 */\r\n        /***/ function(module, exports) {\r\n\r\n            /**\r\n             * A doubly linked list-based Least Recently Used (LRU)\r\n             * cache. Will keep most recently used items while\r\n             * discarding least recently used items when its limit is\r\n             * reached. This is a bare-bone version of\r\n             * Rasmus Andersson's js-lru:\r\n             *\r\n             *   https://github.com/rsms/js-lru\r\n             *\r\n             * @param {Number} limit\r\n             * @constructor\r\n             */\r\n\r\n            function Cache (limit) {\r\n                this.size = 0\r\n                this.limit = limit\r\n                this.head = this.tail = undefined\r\n                this._keymap = Object.create(null)\r\n            }\r\n\r\n            var p = Cache.prototype\r\n\r\n            /**\r\n             * Put <value> into the cache associated with <key>.\r\n             * Returns the entry which was removed to make room for\r\n             * the new entry. Otherwise undefined is returned.\r\n             * (i.e. if there was enough room already).\r\n             *\r\n             * @param {String} key\r\n             * @param {*} value\r\n             * @return {Entry|undefined}\r\n             */\r\n\r\n            p.put = function (key, value) {\r\n                var entry = {\r\n                    key: key,\r\n                    value: value\r\n                }\r\n                this._keymap[key] = entry\r\n                if (this.tail) {\r\n                    this.tail.newer = entry\r\n                    entry.older = this.tail\r\n                } else {\r\n                    this.head = entry\r\n                }\r\n                this.tail = entry\r\n                if (this.size === this.limit) {\r\n                    return this.shift()\r\n                } else {\r\n                    this.size++\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Purge the least recently used (oldest) entry from the\r\n             * cache. Returns the removed entry or undefined if the\r\n             * cache was empty.\r\n             */\r\n\r\n            p.shift = function () {\r\n                var entry = this.head\r\n                if (entry) {\r\n                    this.head = this.head.newer\r\n                    this.head.older = undefined\r\n                    entry.newer = entry.older = undefined\r\n                    this._keymap[entry.key] = undefined\r\n                }\r\n                return entry\r\n            }\r\n\r\n            /**\r\n             * Get and register recent use of <key>. Returns the value\r\n             * associated with <key> or undefined if not in cache.\r\n             *\r\n             * @param {String} key\r\n             * @param {Boolean} returnEntry\r\n             * @return {Entry|*}\r\n             */\r\n\r\n            p.get = function (key, returnEntry) {\r\n                var entry = this._keymap[key]\r\n                if (entry === undefined) return\r\n                if (entry === this.tail) {\r\n                    return returnEntry\r\n                        ? entry\r\n                        : entry.value\r\n                }\r\n                // HEAD--------------TAIL\r\n                //   <.older   .newer>\r\n                //  <--- add direction --\r\n                //   A  B  C  <D>  E\r\n                if (entry.newer) {\r\n                    if (entry === this.head) {\r\n                        this.head = entry.newer\r\n                    }\r\n                    entry.newer.older = entry.older // C <-- E.\r\n                }\r\n                if (entry.older) {\r\n                    entry.older.newer = entry.newer // C. --> E\r\n                }\r\n                entry.newer = undefined // D --x\r\n                entry.older = this.tail // D. --> E\r\n                if (this.tail) {\r\n                    this.tail.newer = entry // E. <-- D\r\n                }\r\n                this.tail = entry\r\n                return returnEntry\r\n                    ? entry\r\n                    : entry.value\r\n            }\r\n\r\n            module.exports = Cache\r\n\r\n\r\n            /***/ },\r\n        /* 15 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Cache = __webpack_require__(14)\r\n            var cache = new Cache(1000)\r\n            var argRE = /^[^\\{\\?]+$|^'[^']*'$|^\"[^\"]*\"$/\r\n            var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g\r\n            var reservedArgRE = /^in$|^-?\\d+/\r\n\r\n            /**\r\n             * Parser state\r\n             */\r\n\r\n            var str\r\n            var c, i, l\r\n            var inSingle\r\n            var inDouble\r\n            var curly\r\n            var square\r\n            var paren\r\n            var begin\r\n            var argIndex\r\n            var dirs\r\n            var dir\r\n            var lastFilterIndex\r\n            var arg\r\n\r\n            /**\r\n             * Push a directive object into the result Array\r\n             */\r\n\r\n            function pushDir () {\r\n                dir.raw = str.slice(begin, i).trim()\r\n                if (dir.expression === undefined) {\r\n                    dir.expression = str.slice(argIndex, i).trim()\r\n                } else if (lastFilterIndex !== begin) {\r\n                    pushFilter()\r\n                }\r\n                if (i === 0 || dir.expression) {\r\n                    dirs.push(dir)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Push a filter to the current directive object\r\n             */\r\n\r\n            function pushFilter () {\r\n                var exp = str.slice(lastFilterIndex, i).trim()\r\n                var filter\r\n                if (exp) {\r\n                    filter = {}\r\n                    var tokens = exp.match(filterTokenRE)\r\n                    filter.name = tokens[0]\r\n                    if (tokens.length > 1) {\r\n                        filter.args = tokens.slice(1).map(processFilterArg)\r\n                    }\r\n                }\r\n                if (filter) {\r\n                    (dir.filters = dir.filters || []).push(filter)\r\n                }\r\n                lastFilterIndex = i + 1\r\n            }\r\n\r\n            /**\r\n             * Check if an argument is dynamic and strip quotes.\r\n             *\r\n             * @param {String} arg\r\n             * @return {Object}\r\n             */\r\n\r\n            function processFilterArg (arg) {\r\n                var stripped = reservedArgRE.test(arg)\r\n                    ? arg\r\n                    : _.stripQuotes(arg)\r\n                var dynamic = stripped === false\r\n                return {\r\n                    value: dynamic ? arg : stripped,\r\n                    dynamic: dynamic\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Parse a directive string into an Array of AST-like\r\n             * objects representing directives.\r\n             *\r\n             * Example:\r\n             *\r\n             * \"click: a = a + 1 | uppercase\" will yield:\r\n             * {\r\n\t *   arg: 'click',\r\n\t *   expression: 'a = a + 1',\r\n\t *   filters: [\r\n\t *     { name: 'uppercase', args: null }\r\n\t *   ]\r\n\t * }\r\n             *\r\n             * @param {String} str\r\n             * @return {Array<Object>}\r\n             */\r\n\r\n            exports.parse = function (s) {\r\n\r\n                var hit = cache.get(s)\r\n                if (hit) {\r\n                    return hit\r\n                }\r\n\r\n                // reset parser state\r\n                str = s\r\n                inSingle = inDouble = false\r\n                curly = square = paren = begin = argIndex = 0\r\n                lastFilterIndex = 0\r\n                dirs = []\r\n                dir = {}\r\n                arg = null\r\n\r\n                for (i = 0, l = str.length; i < l; i++) {\r\n                    c = str.charCodeAt(i)\r\n                    if (inSingle) {\r\n                        // check single quote\r\n                        if (c === 0x27) inSingle = !inSingle\r\n                    } else if (inDouble) {\r\n                        // check double quote\r\n                        if (c === 0x22) inDouble = !inDouble\r\n                    } else if (\r\n                        c === 0x2C && // comma\r\n                        !paren && !curly && !square\r\n                    ) {\r\n                        // reached the end of a directive\r\n                        pushDir()\r\n                        // reset & skip the comma\r\n                        dir = {}\r\n                        begin = argIndex = lastFilterIndex = i + 1\r\n                    } else if (\r\n                        c === 0x3A && // colon\r\n                        !dir.expression &&\r\n                        !dir.arg\r\n                    ) {\r\n                        // argument\r\n                        arg = str.slice(begin, i).trim()\r\n                        // test for valid argument here\r\n                        // since we may have caught stuff like first half of\r\n                        // an object literal or a ternary expression.\r\n                        if (argRE.test(arg)) {\r\n                            argIndex = i + 1\r\n                            dir.arg = _.stripQuotes(arg) || arg\r\n                        }\r\n                    } else if (\r\n                        c === 0x7C && // pipe\r\n                        str.charCodeAt(i + 1) !== 0x7C &&\r\n                        str.charCodeAt(i - 1) !== 0x7C\r\n                    ) {\r\n                        if (dir.expression === undefined) {\r\n                            // first filter, end of expression\r\n                            lastFilterIndex = i + 1\r\n                            dir.expression = str.slice(argIndex, i).trim()\r\n                        } else {\r\n                            // already has filter\r\n                            pushFilter()\r\n                        }\r\n                    } else {\r\n                        switch (c) {\r\n                            case 0x22: inDouble = true; break // \"\r\n                            case 0x27: inSingle = true; break // '\r\n                            case 0x28: paren++; break         // (\r\n                            case 0x29: paren--; break         // )\r\n                            case 0x5B: square++; break        // [\r\n                            case 0x5D: square--; break        // ]\r\n                            case 0x7B: curly++; break         // {\r\n                            case 0x7D: curly--; break         // }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i === 0 || begin !== i) {\r\n                    pushDir()\r\n                }\r\n\r\n                cache.put(s, dirs)\r\n                return dirs\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 16 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            // NOTE: the prop internal directive is compiled and linked\r\n            // during _initScope(), before the created hook is called.\r\n            // The purpose is to make the initial prop values available\r\n            // inside `created` hooks and `data` functions.\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Watcher = __webpack_require__(17)\r\n            var bindingModes = __webpack_require__(5)._propBindingModes\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n\r\n                    var child = this.vm\r\n                    var parent = child._context\r\n                    // passed in from compiler directly\r\n                    var prop = this._descriptor\r\n                    var childKey = prop.path\r\n                    var parentKey = prop.parentPath\r\n\r\n                    this.parentWatcher = new Watcher(\r\n                        parent,\r\n                        parentKey,\r\n                        function (val) {\r\n                            if (_.assertProp(prop, val)) {\r\n                                child[childKey] = val\r\n                            }\r\n                        }, { sync: true }\r\n                    )\r\n\r\n                    // set the child initial value.\r\n                    var value = this.parentWatcher.value\r\n                    if (childKey === '$data') {\r\n                        child._data = value\r\n                    } else {\r\n                        _.initProp(child, prop, value)\r\n                    }\r\n\r\n                    // setup two-way binding\r\n                    if (prop.mode === bindingModes.TWO_WAY) {\r\n                        // important: defer the child watcher creation until\r\n                        // the created hook (after data observation)\r\n                        var self = this\r\n                        child.$once('hook:created', function () {\r\n                            self.childWatcher = new Watcher(\r\n                                child,\r\n                                childKey,\r\n                                function (val) {\r\n                                    parent.$set(parentKey, val)\r\n                                }, { sync: true }\r\n                            )\r\n                        })\r\n                    }\r\n                },\r\n\r\n                unbind: function () {\r\n                    this.parentWatcher.teardown()\r\n                    if (this.childWatcher) {\r\n                        this.childWatcher.teardown()\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 17 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var Dep = __webpack_require__(18)\r\n            var expParser = __webpack_require__(19)\r\n            var batcher = __webpack_require__(21)\r\n            var uid = 0\r\n\r\n            /**\r\n             * A watcher parses an expression, collects dependencies,\r\n             * and fires callback when the expression value changes.\r\n             * This is used for both the $watch() api and directives.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {String} expression\r\n             * @param {Function} cb\r\n             * @param {Object} options\r\n             *                 - {Array} filters\r\n             *                 - {Boolean} twoWay\r\n             *                 - {Boolean} deep\r\n             *                 - {Boolean} user\r\n             *                 - {Boolean} sync\r\n             *                 - {Boolean} lazy\r\n             *                 - {Function} [preProcess]\r\n             * @constructor\r\n             */\r\n\r\n            function Watcher (vm, expOrFn, cb, options) {\r\n                // mix in options\r\n                if (options) {\r\n                    _.extend(this, options)\r\n                }\r\n                var isFn = typeof expOrFn === 'function'\r\n                this.vm = vm\r\n                vm._watchers.push(this)\r\n                this.expression = isFn ? expOrFn.toString() : expOrFn\r\n                this.cb = cb\r\n                this.id = ++uid // uid for batching\r\n                this.active = true\r\n                this.dirty = this.lazy // for lazy watchers\r\n                this.deps = Object.create(null)\r\n                this.newDeps = null\r\n                this.prevError = null // for async error stacks\r\n                // parse expression for getter/setter\r\n                if (isFn) {\r\n                    this.getter = expOrFn\r\n                    this.setter = undefined\r\n                } else {\r\n                    var res = expParser.parse(expOrFn, this.twoWay)\r\n                    this.getter = res.get\r\n                    this.setter = res.set\r\n                }\r\n                this.value = this.lazy\r\n                    ? undefined\r\n                    : this.get()\r\n                // state for avoiding false triggers for deep and Array\r\n                // watchers during vm._digest()\r\n                this.queued = this.shallow = false\r\n            }\r\n\r\n            /**\r\n             * Add a dependency to this directive.\r\n             *\r\n             * @param {Dep} dep\r\n             */\r\n\r\n            Watcher.prototype.addDep = function (dep) {\r\n                var id = dep.id\r\n                if (!this.newDeps[id]) {\r\n                    this.newDeps[id] = dep\r\n                    if (!this.deps[id]) {\r\n                        this.deps[id] = dep\r\n                        dep.addSub(this)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Evaluate the getter, and re-collect dependencies.\r\n             */\r\n\r\n            Watcher.prototype.get = function () {\r\n                this.beforeGet()\r\n                var vm = this.vm\r\n                var value\r\n                try {\r\n                    value = this.getter.call(vm, vm)\r\n                } catch (e) {\r\n                    if (\r\n                        (\"development\") !== 'production' &&\r\n                        config.warnExpressionErrors\r\n                    ) {\r\n                        _.warn(\r\n                            'Error when evaluating expression \"' +\r\n                            this.expression + '\". ' +\r\n                            (config.debug\r\n                                    ? ''\r\n                                    : 'Turn on debug mode to see stack trace.'\r\n                            ), e\r\n                        )\r\n                    }\r\n                }\r\n                // \"touch\" every property so they are all tracked as\r\n                // dependencies for deep watching\r\n                if (this.deep) {\r\n                    traverse(value)\r\n                }\r\n                if (this.preProcess) {\r\n                    value = this.preProcess(value)\r\n                }\r\n                if (this.filters) {\r\n                    value = vm._applyFilters(value, null, this.filters, false)\r\n                }\r\n                this.afterGet()\r\n                return value\r\n            }\r\n\r\n            /**\r\n             * Set the corresponding value with the setter.\r\n             *\r\n             * @param {*} value\r\n             */\r\n\r\n            Watcher.prototype.set = function (value) {\r\n                var vm = this.vm\r\n                if (this.filters) {\r\n                    value = vm._applyFilters(\r\n                        value, this.value, this.filters, true)\r\n                }\r\n                try {\r\n                    this.setter.call(vm, vm, value)\r\n                } catch (e) {\r\n                    if (\r\n                        (\"development\") !== 'production' &&\r\n                        config.warnExpressionErrors\r\n                    ) {\r\n                        _.warn(\r\n                            'Error when evaluating setter \"' +\r\n                            this.expression + '\"', e\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Prepare for dependency collection.\r\n             */\r\n\r\n            Watcher.prototype.beforeGet = function () {\r\n                Dep.target = this\r\n                this.newDeps = Object.create(null)\r\n            }\r\n\r\n            /**\r\n             * Clean up for dependency collection.\r\n             */\r\n\r\n            Watcher.prototype.afterGet = function () {\r\n                Dep.target = null\r\n                var ids = Object.keys(this.deps)\r\n                var i = ids.length\r\n                while (i--) {\r\n                    var id = ids[i]\r\n                    if (!this.newDeps[id]) {\r\n                        this.deps[id].removeSub(this)\r\n                    }\r\n                }\r\n                this.deps = this.newDeps\r\n            }\r\n\r\n            /**\r\n             * Subscriber interface.\r\n             * Will be called when a dependency changes.\r\n             *\r\n             * @param {Boolean} shallow\r\n             */\r\n\r\n            Watcher.prototype.update = function (shallow) {\r\n                if (this.lazy) {\r\n                    this.dirty = true\r\n                } else if (this.sync || !config.async) {\r\n                    this.run()\r\n                } else {\r\n                    // if queued, only overwrite shallow with non-shallow,\r\n                    // but not the other way around.\r\n                    this.shallow = this.queued\r\n                        ? shallow\r\n                        ? this.shallow\r\n                        : false\r\n                        : !!shallow\r\n                    this.queued = true\r\n                    // record before-push error stack in debug mode\r\n                    /* istanbul ignore if */\r\n                    if ((\"development\") !== 'production' && config.debug) {\r\n                        this.prevError = new Error('[vue] async stack trace')\r\n                    }\r\n                    batcher.push(this)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Batcher job interface.\r\n             * Will be called by the batcher.\r\n             */\r\n\r\n            Watcher.prototype.run = function () {\r\n                if (this.active) {\r\n                    var value = this.get()\r\n                    if (\r\n                        value !== this.value ||\r\n                            // Deep watchers and Array watchers should fire even\r\n                            // when the value is the same, because the value may\r\n                            // have mutated; but only do so if this is a\r\n                            // non-shallow update (caused by a vm digest).\r\n                        ((_.isArray(value) || this.deep) && !this.shallow)\r\n                    ) {\r\n                        // set new value\r\n                        var oldValue = this.value\r\n                        this.value = value\r\n                        // in debug + async mode, when a watcher callbacks\r\n                        // throws, we also throw the saved before-push error\r\n                        // so the full cross-tick stack trace is available.\r\n                        var prevError = this.prevError\r\n                        /* istanbul ignore if */\r\n                        if ((\"development\") !== 'production' &&\r\n                            config.debug && prevError) {\r\n                            this.prevError = null\r\n                            try {\r\n                                this.cb.call(this.vm, value, oldValue)\r\n                            } catch (e) {\r\n                                _.nextTick(function () {\r\n                                    throw prevError\r\n                                }, 0)\r\n                                throw e\r\n                            }\r\n                        } else {\r\n                            this.cb.call(this.vm, value, oldValue)\r\n                        }\r\n                    }\r\n                    this.queued = this.shallow = false\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Evaluate the value of the watcher.\r\n             * This only gets called for lazy watchers.\r\n             */\r\n\r\n            Watcher.prototype.evaluate = function () {\r\n                // avoid overwriting another watcher that is being\r\n                // collected.\r\n                var current = Dep.target\r\n                this.value = this.get()\r\n                this.dirty = false\r\n                Dep.target = current\r\n            }\r\n\r\n            /**\r\n             * Depend on all deps collected by this watcher.\r\n             */\r\n\r\n            Watcher.prototype.depend = function () {\r\n                var depIds = Object.keys(this.deps)\r\n                var i = depIds.length\r\n                while (i--) {\r\n                    this.deps[depIds[i]].depend()\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Remove self from all dependencies' subcriber list.\r\n             */\r\n\r\n            Watcher.prototype.teardown = function () {\r\n                if (this.active) {\r\n                    // remove self from vm's watcher list\r\n                    // we can skip this if the vm if being destroyed\r\n                    // which can improve teardown performance.\r\n                    if (!this.vm._isBeingDestroyed) {\r\n                        this.vm._watchers.$remove(this)\r\n                    }\r\n                    var depIds = Object.keys(this.deps)\r\n                    var i = depIds.length\r\n                    while (i--) {\r\n                        this.deps[depIds[i]].removeSub(this)\r\n                    }\r\n                    this.active = false\r\n                    this.vm = this.cb = this.value = null\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Recrusively traverse an object to evoke all converted\r\n             * getters, so that every nested property inside the object\r\n             * is collected as a \"deep\" dependency.\r\n             *\r\n             * @param {Object} obj\r\n             */\r\n\r\n            function traverse (obj) {\r\n                var key, val, i\r\n                for (key in obj) {\r\n                    val = obj[key]\r\n                    if (_.isArray(val)) {\r\n                        i = val.length\r\n                        while (i--) traverse(val[i])\r\n                    } else if (_.isObject(val)) {\r\n                        traverse(val)\r\n                    }\r\n                }\r\n            }\r\n\r\n            module.exports = Watcher\r\n\r\n\r\n            /***/ },\r\n        /* 18 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var uid = 0\r\n\r\n            /**\r\n             * A dep is an observable that can have multiple\r\n             * directives subscribing to it.\r\n             *\r\n             * @constructor\r\n             */\r\n\r\n            function Dep () {\r\n                this.id = uid++\r\n                this.subs = []\r\n            }\r\n\r\n            // the current target watcher being evaluated.\r\n            // this is globally unique because there could be only one\r\n            // watcher being evaluated at any time.\r\n            Dep.target = null\r\n\r\n            /**\r\n             * Add a directive subscriber.\r\n             *\r\n             * @param {Directive} sub\r\n             */\r\n\r\n            Dep.prototype.addSub = function (sub) {\r\n                this.subs.push(sub)\r\n            }\r\n\r\n            /**\r\n             * Remove a directive subscriber.\r\n             *\r\n             * @param {Directive} sub\r\n             */\r\n\r\n            Dep.prototype.removeSub = function (sub) {\r\n                this.subs.$remove(sub)\r\n            }\r\n\r\n            /**\r\n             * Add self as a dependency to the target watcher.\r\n             */\r\n\r\n            Dep.prototype.depend = function () {\r\n                Dep.target.addDep(this)\r\n            }\r\n\r\n            /**\r\n             * Notify all subscribers of a new value.\r\n             */\r\n\r\n            Dep.prototype.notify = function () {\r\n                // stablize the subscriber list first\r\n                var subs = _.toArray(this.subs)\r\n                for (var i = 0, l = subs.length; i < l; i++) {\r\n                    subs[i].update()\r\n                }\r\n            }\r\n\r\n            module.exports = Dep\r\n\r\n\r\n            /***/ },\r\n        /* 19 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Path = __webpack_require__(20)\r\n            var Cache = __webpack_require__(14)\r\n            var expressionCache = new Cache(1000)\r\n\r\n            var allowedKeywords =\r\n                'Math,Date,this,true,false,null,undefined,Infinity,NaN,' +\r\n                'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' +\r\n                'encodeURIComponent,parseInt,parseFloat'\r\n            var allowedKeywordsRE =\r\n                new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)')\r\n\r\n            // keywords that don't make sense inside expressions\r\n            var improperKeywords =\r\n                'break,case,class,catch,const,continue,debugger,default,' +\r\n                'delete,do,else,export,extends,finally,for,function,if,' +\r\n                'import,in,instanceof,let,return,super,switch,throw,try,' +\r\n                'var,while,with,yield,enum,await,implements,package,' +\r\n                'proctected,static,interface,private,public'\r\n            var improperKeywordsRE =\r\n                new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)')\r\n\r\n            var wsRE = /\\s/g\r\n            var newlineRE = /\\n/g\r\n            var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('[^']*'|\"[^\"]*\")|new |typeof |void /g\r\n            var restoreRE = /\"(\\d+)\"/g\r\n            var pathTestRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/\r\n            var pathReplaceRE = /[^\\w$\\.]([A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\])*)/g\r\n            var booleanLiteralRE = /^(true|false)$/\r\n\r\n            /**\r\n             * Save / Rewrite / Restore\r\n             *\r\n             * When rewriting paths found in an expression, it is\r\n             * possible for the same letter sequences to be found in\r\n             * strings and Object literal property keys. Therefore we\r\n             * remove and store these parts in a temporary array, and\r\n             * restore them after the path rewrite.\r\n             */\r\n\r\n            var saved = []\r\n\r\n            /**\r\n             * Save replacer\r\n             *\r\n             * The save regex can match two possible cases:\r\n             * 1. An opening object literal\r\n             * 2. A string\r\n             * If matched as a plain string, we need to escape its\r\n             * newlines, since the string needs to be preserved when\r\n             * generating the function body.\r\n             *\r\n             * @param {String} str\r\n             * @param {String} isString - str if matched as a string\r\n             * @return {String} - placeholder with index\r\n             */\r\n\r\n            function save (str, isString) {\r\n                var i = saved.length\r\n                saved[i] = isString\r\n                    ? str.replace(newlineRE, '\\\\n')\r\n                    : str\r\n                return '\"' + i + '\"'\r\n            }\r\n\r\n            /**\r\n             * Path rewrite replacer\r\n             *\r\n             * @param {String} raw\r\n             * @return {String}\r\n             */\r\n\r\n            function rewrite (raw) {\r\n                var c = raw.charAt(0)\r\n                var path = raw.slice(1)\r\n                if (allowedKeywordsRE.test(path)) {\r\n                    return raw\r\n                } else {\r\n                    path = path.indexOf('\"') > -1\r\n                        ? path.replace(restoreRE, restore)\r\n                        : path\r\n                    return c + 'scope.' + path\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Restore replacer\r\n             *\r\n             * @param {String} str\r\n             * @param {String} i - matched save index\r\n             * @return {String}\r\n             */\r\n\r\n            function restore (str, i) {\r\n                return saved[i]\r\n            }\r\n\r\n            /**\r\n             * Rewrite an expression, prefixing all path accessors with\r\n             * `scope.` and generate getter/setter functions.\r\n             *\r\n             * @param {String} exp\r\n             * @param {Boolean} needSet\r\n             * @return {Function}\r\n             */\r\n\r\n            function compileExpFns (exp, needSet) {\r\n                if (improperKeywordsRE.test(exp)) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Avoid using reserved keywords in expression: ' + exp\r\n                    )\r\n                }\r\n                // reset state\r\n                saved.length = 0\r\n                // save strings and object literal keys\r\n                var body = exp\r\n                    .replace(saveRE, save)\r\n                    .replace(wsRE, '')\r\n                // rewrite all paths\r\n                // pad 1 space here becaue the regex matches 1 extra char\r\n                body = (' ' + body)\r\n                    .replace(pathReplaceRE, rewrite)\r\n                    .replace(restoreRE, restore)\r\n                var getter = makeGetter(body)\r\n                if (getter) {\r\n                    return {\r\n                        get: getter,\r\n                        body: body,\r\n                        set: needSet\r\n                            ? makeSetter(body)\r\n                            : null\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compile getter setters for a simple path.\r\n             *\r\n             * @param {String} exp\r\n             * @return {Function}\r\n             */\r\n\r\n            function compilePathFns (exp) {\r\n                var getter, path\r\n                if (exp.indexOf('[') < 0) {\r\n                    // really simple path\r\n                    path = exp.split('.')\r\n                    path.raw = exp\r\n                    getter = Path.compileGetter(path)\r\n                } else {\r\n                    // do the real parsing\r\n                    path = Path.parse(exp)\r\n                    getter = path.get\r\n                }\r\n                return {\r\n                    get: getter,\r\n                    // always generate setter for simple paths\r\n                    set: function (obj, val) {\r\n                        Path.set(obj, path, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Build a getter function. Requires eval.\r\n             *\r\n             * We isolate the try/catch so it doesn't affect the\r\n             * optimization of the parse function when it is not called.\r\n             *\r\n             * @param {String} body\r\n             * @return {Function|undefined}\r\n             */\r\n\r\n            function makeGetter (body) {\r\n                try {\r\n                    return new Function('scope', 'return ' + body + ';')\r\n                } catch (e) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Invalid expression. ' +\r\n                        'Generated function body: ' + body\r\n                    )\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Build a setter function.\r\n             *\r\n             * This is only needed in rare situations like \"a[b]\" where\r\n             * a settable path requires dynamic evaluation.\r\n             *\r\n             * This setter function may throw error when called if the\r\n             * expression body is not a valid left-hand expression in\r\n             * assignment.\r\n             *\r\n             * @param {String} body\r\n             * @return {Function|undefined}\r\n             */\r\n\r\n            function makeSetter (body) {\r\n                try {\r\n                    return new Function('scope', 'value', body + '=value;')\r\n                } catch (e) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Invalid setter function body: ' + body\r\n                    )\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check for setter existence on a cache hit.\r\n             *\r\n             * @param {Function} hit\r\n             */\r\n\r\n            function checkSetter (hit) {\r\n                if (!hit.set) {\r\n                    hit.set = makeSetter(hit.body)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Parse an expression into re-written getter/setters.\r\n             *\r\n             * @param {String} exp\r\n             * @param {Boolean} needSet\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.parse = function (exp, needSet) {\r\n                exp = exp.trim()\r\n                // try cache\r\n                var hit = expressionCache.get(exp)\r\n                if (hit) {\r\n                    if (needSet) {\r\n                        checkSetter(hit)\r\n                    }\r\n                    return hit\r\n                }\r\n                // we do a simple path check to optimize for them.\r\n                // the check fails valid paths with unusal whitespaces,\r\n                // but that's too rare and we don't care.\r\n                // also skip boolean literals and paths that start with\r\n                // global \"Math\"\r\n                var res = exports.isSimplePath(exp)\r\n                    ? compilePathFns(exp)\r\n                    : compileExpFns(exp, needSet)\r\n                expressionCache.put(exp, res)\r\n                return res\r\n            }\r\n\r\n            /**\r\n             * Check if an expression is a simple path.\r\n             *\r\n             * @param {String} exp\r\n             * @return {Boolean}\r\n             */\r\n\r\n            exports.isSimplePath = function (exp) {\r\n                return pathTestRE.test(exp) &&\r\n                        // don't treat true/false as paths\r\n                    !booleanLiteralRE.test(exp) &&\r\n                        // Math constants e.g. Math.PI, Math.E etc.\r\n                    exp.slice(0, 5) !== 'Math.'\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 20 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Cache = __webpack_require__(14)\r\n            var pathCache = new Cache(1000)\r\n            var identRE = exports.identRE = /^[$_a-zA-Z]+[\\w$]*$/\r\n\r\n            // actions\r\n            var APPEND = 0\r\n            var PUSH = 1\r\n\r\n            // states\r\n            var BEFORE_PATH = 0\r\n            var IN_PATH = 1\r\n            var BEFORE_IDENT = 2\r\n            var IN_IDENT = 3\r\n            var BEFORE_ELEMENT = 4\r\n            var AFTER_ZERO = 5\r\n            var IN_INDEX = 6\r\n            var IN_SINGLE_QUOTE = 7\r\n            var IN_DOUBLE_QUOTE = 8\r\n            var IN_SUB_PATH = 9\r\n            var AFTER_ELEMENT = 10\r\n            var AFTER_PATH = 11\r\n            var ERROR = 12\r\n\r\n            var pathStateMachine = []\r\n\r\n            pathStateMachine[BEFORE_PATH] = {\r\n                'ws': [BEFORE_PATH],\r\n                'ident': [IN_IDENT, APPEND],\r\n                '[': [BEFORE_ELEMENT],\r\n                'eof': [AFTER_PATH]\r\n            }\r\n\r\n            pathStateMachine[IN_PATH] = {\r\n                'ws': [IN_PATH],\r\n                '.': [BEFORE_IDENT],\r\n                '[': [BEFORE_ELEMENT],\r\n                'eof': [AFTER_PATH]\r\n            }\r\n\r\n            pathStateMachine[BEFORE_IDENT] = {\r\n                'ws': [BEFORE_IDENT],\r\n                'ident': [IN_IDENT, APPEND]\r\n            }\r\n\r\n            pathStateMachine[IN_IDENT] = {\r\n                'ident': [IN_IDENT, APPEND],\r\n                '0': [IN_IDENT, APPEND],\r\n                'number': [IN_IDENT, APPEND],\r\n                'ws': [IN_PATH, PUSH],\r\n                '.': [BEFORE_IDENT, PUSH],\r\n                '[': [BEFORE_ELEMENT, PUSH],\r\n                'eof': [AFTER_PATH, PUSH]\r\n            }\r\n\r\n            pathStateMachine[BEFORE_ELEMENT] = {\r\n                'ws': [BEFORE_ELEMENT],\r\n                '0': [AFTER_ZERO, APPEND],\r\n                'number': [IN_INDEX, APPEND],\r\n                \"'\": [IN_SINGLE_QUOTE, APPEND, ''],\r\n                '\"': [IN_DOUBLE_QUOTE, APPEND, ''],\r\n                'ident': [IN_SUB_PATH, APPEND, '*']\r\n            }\r\n\r\n            pathStateMachine[AFTER_ZERO] = {\r\n                'ws': [AFTER_ELEMENT, PUSH],\r\n                ']': [IN_PATH, PUSH]\r\n            }\r\n\r\n            pathStateMachine[IN_INDEX] = {\r\n                '0': [IN_INDEX, APPEND],\r\n                'number': [IN_INDEX, APPEND],\r\n                'ws': [AFTER_ELEMENT],\r\n                ']': [IN_PATH, PUSH]\r\n            }\r\n\r\n            pathStateMachine[IN_SINGLE_QUOTE] = {\r\n                \"'\": [AFTER_ELEMENT],\r\n                'eof': ERROR,\r\n                'else': [IN_SINGLE_QUOTE, APPEND]\r\n            }\r\n\r\n            pathStateMachine[IN_DOUBLE_QUOTE] = {\r\n                '\"': [AFTER_ELEMENT],\r\n                'eof': ERROR,\r\n                'else': [IN_DOUBLE_QUOTE, APPEND]\r\n            }\r\n\r\n            pathStateMachine[IN_SUB_PATH] = {\r\n                'ident': [IN_SUB_PATH, APPEND],\r\n                '0': [IN_SUB_PATH, APPEND],\r\n                'number': [IN_SUB_PATH, APPEND],\r\n                'ws': [AFTER_ELEMENT],\r\n                ']': [IN_PATH, PUSH]\r\n            }\r\n\r\n            pathStateMachine[AFTER_ELEMENT] = {\r\n                'ws': [AFTER_ELEMENT],\r\n                ']': [IN_PATH, PUSH]\r\n            }\r\n\r\n            /**\r\n             * Determine the type of a character in a keypath.\r\n             *\r\n             * @param {Char} ch\r\n             * @return {String} type\r\n             */\r\n\r\n            function getPathCharType (ch) {\r\n                if (ch === undefined) {\r\n                    return 'eof'\r\n                }\r\n\r\n                var code = ch.charCodeAt(0)\r\n\r\n                switch (code) {\r\n                    case 0x5B: // [\r\n                    case 0x5D: // ]\r\n                    case 0x2E: // .\r\n                    case 0x22: // \"\r\n                    case 0x27: // '\r\n                    case 0x30: // 0\r\n                        return ch\r\n\r\n                    case 0x5F: // _\r\n                    case 0x24: // $\r\n                        return 'ident'\r\n\r\n                    case 0x20: // Space\r\n                    case 0x09: // Tab\r\n                    case 0x0A: // Newline\r\n                    case 0x0D: // Return\r\n                    case 0xA0:  // No-break space\r\n                    case 0xFEFF:  // Byte Order Mark\r\n                    case 0x2028:  // Line Separator\r\n                    case 0x2029:  // Paragraph Separator\r\n                        return 'ws'\r\n                }\r\n\r\n                // a-z, A-Z\r\n                if (\r\n                    (code >= 0x61 && code <= 0x7A) ||\r\n                    (code >= 0x41 && code <= 0x5A)\r\n                ) {\r\n                    return 'ident'\r\n                }\r\n\r\n                // 1-9\r\n                if (code >= 0x31 && code <= 0x39) {\r\n                    return 'number'\r\n                }\r\n\r\n                return 'else'\r\n            }\r\n\r\n            /**\r\n             * Parse a string path into an array of segments\r\n             * Todo implement cache\r\n             *\r\n             * @param {String} path\r\n             * @return {Array|undefined}\r\n             */\r\n\r\n            function parsePath (path) {\r\n                var keys = []\r\n                var index = -1\r\n                var mode = BEFORE_PATH\r\n                var c, newChar, key, type, transition, action, typeMap\r\n\r\n                var actions = []\r\n                actions[PUSH] = function () {\r\n                    if (key === undefined) {\r\n                        return\r\n                    }\r\n                    keys.push(key)\r\n                    key = undefined\r\n                }\r\n                actions[APPEND] = function () {\r\n                    if (key === undefined) {\r\n                        key = newChar\r\n                    } else {\r\n                        key += newChar\r\n                    }\r\n                }\r\n\r\n                function maybeUnescapeQuote () {\r\n                    var nextChar = path[index + 1]\r\n                    if ((mode === IN_SINGLE_QUOTE && nextChar === \"'\") ||\r\n                        (mode === IN_DOUBLE_QUOTE && nextChar === '\"')) {\r\n                        index++\r\n                        newChar = nextChar\r\n                        actions[APPEND]()\r\n                        return true\r\n                    }\r\n                }\r\n\r\n                while (mode != null) {\r\n                    index++\r\n                    c = path[index]\r\n\r\n                    if (c === '\\\\' && maybeUnescapeQuote()) {\r\n                        continue\r\n                    }\r\n\r\n                    type = getPathCharType(c)\r\n                    typeMap = pathStateMachine[mode]\r\n                    transition = typeMap[type] || typeMap['else'] || ERROR\r\n\r\n                    if (transition === ERROR) {\r\n                        return // parse error\r\n                    }\r\n\r\n                    mode = transition[0]\r\n                    action = actions[transition[1]]\r\n                    if (action) {\r\n                        newChar = transition[2]\r\n                        newChar = newChar === undefined\r\n                            ? c\r\n                            : newChar === '*'\r\n                            ? newChar + c\r\n                            : newChar\r\n                        action()\r\n                    }\r\n\r\n                    if (mode === AFTER_PATH) {\r\n                        keys.raw = path\r\n                        return keys\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Format a accessor segment based on its type.\r\n             *\r\n             * @param {String} key\r\n             * @return {Boolean}\r\n             */\r\n\r\n            function formatAccessor (key) {\r\n                if (identRE.test(key)) { // identifier\r\n                    return '.' + key\r\n                } else if (+key === key >>> 0) { // bracket index\r\n                    return '[' + key + ']'\r\n                } else if (key.charAt(0) === '*') {\r\n                    return '[o' + formatAccessor(key.slice(1)) + ']'\r\n                } else { // bracket string\r\n                    return '[\"' + key.replace(/\"/g, '\\\\\"') + '\"]'\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Compiles a getter function with a fixed path.\r\n             * The fixed path getter supresses errors.\r\n             *\r\n             * @param {Array} path\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.compileGetter = function (path) {\r\n                var body = 'return o' + path.map(formatAccessor).join('')\r\n                return new Function('o', body)\r\n            }\r\n\r\n            /**\r\n             * External parse that check for a cache hit first\r\n             *\r\n             * @param {String} path\r\n             * @return {Array|undefined}\r\n             */\r\n\r\n            exports.parse = function (path) {\r\n                var hit = pathCache.get(path)\r\n                if (!hit) {\r\n                    hit = parsePath(path)\r\n                    if (hit) {\r\n                        hit.get = exports.compileGetter(hit)\r\n                        pathCache.put(path, hit)\r\n                    }\r\n                }\r\n                return hit\r\n            }\r\n\r\n            /**\r\n             * Get from an object from a path string\r\n             *\r\n             * @param {Object} obj\r\n             * @param {String} path\r\n             */\r\n\r\n            exports.get = function (obj, path) {\r\n                path = exports.parse(path)\r\n                if (path) {\r\n                    return path.get(obj)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Set on an object from a path\r\n             *\r\n             * @param {Object} obj\r\n             * @param {String | Array} path\r\n             * @param {*} val\r\n             */\r\n\r\n            exports.set = function (obj, path, val) {\r\n                var original = obj\r\n                if (typeof path === 'string') {\r\n                    path = exports.parse(path)\r\n                }\r\n                if (!path || !_.isObject(obj)) {\r\n                    return false\r\n                }\r\n                var last, key\r\n                for (var i = 0, l = path.length; i < l; i++) {\r\n                    last = obj\r\n                    key = path[i]\r\n                    if (key.charAt(0) === '*') {\r\n                        key = original[key.slice(1)]\r\n                    }\r\n                    if (i < l - 1) {\r\n                        obj = obj[key]\r\n                        if (!_.isObject(obj)) {\r\n                            warnNonExistent(path)\r\n                            obj = {}\r\n                            last.$add(key, obj)\r\n                        }\r\n                    } else {\r\n                        if (_.isArray(obj)) {\r\n                            obj.$set(key, val)\r\n                        } else if (key in obj) {\r\n                            obj[key] = val\r\n                        } else {\r\n                            warnNonExistent(path)\r\n                            obj.$add(key, val)\r\n                        }\r\n                    }\r\n                }\r\n                return true\r\n            }\r\n\r\n            function warnNonExistent (path) {\r\n                (\"development\") !== 'production' && _.warn(\r\n                    'You are setting a non-existent path \"' + path.raw + '\" ' +\r\n                    'on a vm instance. Consider pre-initializing the property ' +\r\n                    'with the \"data\" option for more reliable reactivity ' +\r\n                    'and better performance.'\r\n                )\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 21 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n\r\n            // we have two separate queues: one for directive updates\r\n            // and one for user watcher registered via $watch().\r\n            // we want to guarantee directive updates to be called\r\n            // before user watchers so that when user watchers are\r\n            // triggered, the DOM would have already been in updated\r\n            // state.\r\n            var queue = []\r\n            var userQueue = []\r\n            var has = {}\r\n            var circular = {}\r\n            var waiting = false\r\n            var internalQueueDepleted = false\r\n\r\n            /**\r\n             * Reset the batcher's state.\r\n             */\r\n\r\n            function resetBatcherState () {\r\n                queue = []\r\n                userQueue = []\r\n                has = {}\r\n                circular = {}\r\n                waiting = internalQueueDepleted = false\r\n            }\r\n\r\n            /**\r\n             * Flush both queues and run the watchers.\r\n             */\r\n\r\n            function flushBatcherQueue () {\r\n                runBatcherQueue(queue)\r\n                internalQueueDepleted = true\r\n                runBatcherQueue(userQueue)\r\n                resetBatcherState()\r\n            }\r\n\r\n            /**\r\n             * Run the watchers in a single queue.\r\n             *\r\n             * @param {Array} queue\r\n             */\r\n\r\n            function runBatcherQueue (queue) {\r\n                // do not cache length because more watchers might be pushed\r\n                // as we run existing watchers\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    var watcher = queue[i]\r\n                    var id = watcher.id\r\n                    has[id] = null\r\n                    watcher.run()\r\n                    // in dev build, check and stop circular updates.\r\n                    if ((\"development\") !== 'production' && has[id] != null) {\r\n                        circular[id] = (circular[id] || 0) + 1\r\n                        if (circular[id] > config._maxUpdateCount) {\r\n                            queue.splice(has[id], 1)\r\n                            _.warn(\r\n                                'You may have an infinite update loop for watcher ' +\r\n                                'with expression: ' + watcher.expression\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Push a watcher into the watcher queue.\r\n             * Jobs with duplicate IDs will be skipped unless it's\r\n             * pushed when the queue is being flushed.\r\n             *\r\n             * @param {Watcher} watcher\r\n             *   properties:\r\n             *   - {Number} id\r\n             *   - {Function} run\r\n             */\r\n\r\n            exports.push = function (watcher) {\r\n                var id = watcher.id\r\n                if (has[id] == null) {\r\n                    // if an internal watcher is pushed, but the internal\r\n                    // queue is already depleted, we run it immediately.\r\n                    if (internalQueueDepleted && !watcher.user) {\r\n                        watcher.run()\r\n                        return\r\n                    }\r\n                    // push watcher into appropriate queue\r\n                    var q = watcher.user ? userQueue : queue\r\n                    has[id] = q.length\r\n                    q.push(watcher)\r\n                    // queue the flush\r\n                    if (!waiting) {\r\n                        waiting = true\r\n                        _.nextTick(flushBatcherQueue)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 22 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Cache = __webpack_require__(14)\r\n            var templateCache = new Cache(1000)\r\n            var idSelectorCache = new Cache(1000)\r\n\r\n            var map = {\r\n                _default: [0, '', ''],\r\n                legend: [1, '<fieldset>', '</fieldset>'],\r\n                tr: [2, '<table><tbody>', '</tbody></table>'],\r\n                col: [\r\n                    2,\r\n                    '<table><tbody></tbody><colgroup>',\r\n                    '</colgroup></table>'\r\n                ]\r\n            }\r\n\r\n            map.td =\r\n                map.th = [\r\n                    3,\r\n                    '<table><tbody><tr>',\r\n                    '</tr></tbody></table>'\r\n                ]\r\n\r\n            map.option =\r\n                map.optgroup = [\r\n                    1,\r\n                    '<select multiple=\"multiple\">',\r\n                    '</select>'\r\n                ]\r\n\r\n            map.thead =\r\n                map.tbody =\r\n                    map.colgroup =\r\n                        map.caption =\r\n                            map.tfoot = [1, '<table>', '</table>']\r\n\r\n            map.g =\r\n                map.defs =\r\n                    map.symbol =\r\n                        map.use =\r\n                            map.image =\r\n                                map.text =\r\n                                    map.circle =\r\n                                        map.ellipse =\r\n                                            map.line =\r\n                                                map.path =\r\n                                                    map.polygon =\r\n                                                        map.polyline =\r\n                                                            map.rect = [\r\n                                                                1,\r\n                                                                '<svg ' +\r\n                                                                'xmlns=\"http://www.w3.org/2000/svg\" ' +\r\n                                                                'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\r\n                                                                'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' +\r\n                                                                'version=\"1.1\">',\r\n                                                                '</svg>'\r\n                                                            ]\r\n\r\n            /**\r\n             * Check if a node is a supported template node with a\r\n             * DocumentFragment content.\r\n             *\r\n             * @param {Node} node\r\n             * @return {Boolean}\r\n             */\r\n\r\n            function isRealTemplate (node) {\r\n                return _.isTemplate(node) &&\r\n                    node.content instanceof DocumentFragment\r\n            }\r\n\r\n            var tagRE = /<([\\w:]+)/\r\n            var entityRE = /&\\w+;|&#\\d+;|&#x[\\dA-F]+;/\r\n\r\n            /**\r\n             * Convert a string template to a DocumentFragment.\r\n             * Determines correct wrapping by tag types. Wrapping\r\n             * strategy found in jQuery & component/domify.\r\n             *\r\n             * @param {String} templateString\r\n             * @return {DocumentFragment}\r\n             */\r\n\r\n            function stringToFragment (templateString) {\r\n                // try a cache hit first\r\n                var hit = templateCache.get(templateString)\r\n                if (hit) {\r\n                    return hit\r\n                }\r\n\r\n                var frag = document.createDocumentFragment()\r\n                var tagMatch = templateString.match(tagRE)\r\n                var entityMatch = entityRE.test(templateString)\r\n\r\n                if (!tagMatch && !entityMatch) {\r\n                    // text only, return a single text node.\r\n                    frag.appendChild(\r\n                        document.createTextNode(templateString)\r\n                    )\r\n                } else {\r\n\r\n                    var tag = tagMatch && tagMatch[1]\r\n                    var wrap = map[tag] || map._default\r\n                    var depth = wrap[0]\r\n                    var prefix = wrap[1]\r\n                    var suffix = wrap[2]\r\n                    var node = document.createElement('div')\r\n\r\n                    node.innerHTML = prefix + templateString.trim() + suffix\r\n                    while (depth--) {\r\n                        node = node.lastChild\r\n                    }\r\n\r\n                    var child\r\n                    /* eslint-disable no-cond-assign */\r\n                    while (child = node.firstChild) {\r\n                        /* eslint-enable no-cond-assign */\r\n                        frag.appendChild(child)\r\n                    }\r\n                }\r\n\r\n                templateCache.put(templateString, frag)\r\n                return frag\r\n            }\r\n\r\n            /**\r\n             * Convert a template node to a DocumentFragment.\r\n             *\r\n             * @param {Node} node\r\n             * @return {DocumentFragment}\r\n             */\r\n\r\n            function nodeToFragment (node) {\r\n                // if its a template tag and the browser supports it,\r\n                // its content is already a document fragment.\r\n                if (isRealTemplate(node)) {\r\n                    _.trimNode(node.content)\r\n                    return node.content\r\n                }\r\n                // script template\r\n                if (node.tagName === 'SCRIPT') {\r\n                    return stringToFragment(node.textContent)\r\n                }\r\n                // normal node, clone it to avoid mutating the original\r\n                var clone = exports.clone(node)\r\n                var frag = document.createDocumentFragment()\r\n                var child\r\n                /* eslint-disable no-cond-assign */\r\n                while (child = clone.firstChild) {\r\n                    /* eslint-enable no-cond-assign */\r\n                    frag.appendChild(child)\r\n                }\r\n                _.trimNode(frag)\r\n                return frag\r\n            }\r\n\r\n            // Test for the presence of the Safari template cloning bug\r\n            // https://bugs.webkit.org/show_bug.cgi?id=137755\r\n            var hasBrokenTemplate = (function () {\r\n                /* istanbul ignore else */\r\n                if (_.inBrowser) {\r\n                    var a = document.createElement('div')\r\n                    a.innerHTML = '<template>1</template>'\r\n                    return !a.cloneNode(true).firstChild.innerHTML\r\n                } else {\r\n                    return false\r\n                }\r\n            })()\r\n\r\n            // Test for IE10/11 textarea placeholder clone bug\r\n            var hasTextareaCloneBug = (function () {\r\n                /* istanbul ignore else */\r\n                if (_.inBrowser) {\r\n                    var t = document.createElement('textarea')\r\n                    t.placeholder = 't'\r\n                    return t.cloneNode(true).value === 't'\r\n                } else {\r\n                    return false\r\n                }\r\n            })()\r\n\r\n            /**\r\n             * 1. Deal with Safari cloning nested <template> bug by\r\n             *    manually cloning all template instances.\r\n             * 2. Deal with IE10/11 textarea placeholder bug by setting\r\n             *    the correct value after cloning.\r\n             *\r\n             * @param {Element|DocumentFragment} node\r\n             * @return {Element|DocumentFragment}\r\n             */\r\n\r\n            exports.clone = function (node) {\r\n                if (!node.querySelectorAll) {\r\n                    return node.cloneNode()\r\n                }\r\n                var res = node.cloneNode(true)\r\n                var i, original, cloned\r\n                /* istanbul ignore if */\r\n                if (hasBrokenTemplate) {\r\n                    var clone = res\r\n                    if (isRealTemplate(node)) {\r\n                        node = node.content\r\n                        clone = res.content\r\n                    }\r\n                    original = node.querySelectorAll('template')\r\n                    if (original.length) {\r\n                        cloned = clone.querySelectorAll('template')\r\n                        i = cloned.length\r\n                        while (i--) {\r\n                            cloned[i].parentNode.replaceChild(\r\n                                exports.clone(original[i]),\r\n                                cloned[i]\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n                /* istanbul ignore if */\r\n                if (hasTextareaCloneBug) {\r\n                    if (node.tagName === 'TEXTAREA') {\r\n                        res.value = node.value\r\n                    } else {\r\n                        original = node.querySelectorAll('textarea')\r\n                        if (original.length) {\r\n                            cloned = res.querySelectorAll('textarea')\r\n                            i = cloned.length\r\n                            while (i--) {\r\n                                cloned[i].value = original[i].value\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return res\r\n            }\r\n\r\n            /**\r\n             * Process the template option and normalizes it into a\r\n             * a DocumentFragment that can be used as a partial or a\r\n             * instance template.\r\n             *\r\n             * @param {*} template\r\n             *    Possible values include:\r\n             *    - DocumentFragment object\r\n             *    - Node object of type Template\r\n             *    - id selector: '#some-template-id'\r\n             *    - template string: '<div><span>{{msg}}</span></div>'\r\n             * @param {Boolean} clone\r\n             * @param {Boolean} noSelector\r\n             * @return {DocumentFragment|undefined}\r\n             */\r\n\r\n            exports.parse = function (template, clone, noSelector) {\r\n                var node, frag\r\n\r\n                // if the template is already a document fragment,\r\n                // do nothing\r\n                if (template instanceof DocumentFragment) {\r\n                    _.trimNode(template)\r\n                    return clone\r\n                        ? exports.clone(template)\r\n                        : template\r\n                }\r\n\r\n                if (typeof template === 'string') {\r\n                    // id selector\r\n                    if (!noSelector && template.charAt(0) === '#') {\r\n                        // id selector can be cached too\r\n                        frag = idSelectorCache.get(template)\r\n                        if (!frag) {\r\n                            node = document.getElementById(template.slice(1))\r\n                            if (node) {\r\n                                frag = nodeToFragment(node)\r\n                                // save selector to cache\r\n                                idSelectorCache.put(template, frag)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // normal string template\r\n                        frag = stringToFragment(template)\r\n                    }\r\n                } else if (template.nodeType) {\r\n                    // a direct node\r\n                    frag = nodeToFragment(template)\r\n                }\r\n\r\n                return frag && clone\r\n                    ? exports.clone(frag)\r\n                    : frag\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 23 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var templateParser = __webpack_require__(22)\r\n\r\n            module.exports = {\r\n\r\n                isLiteral: true,\r\n\r\n                /**\r\n                 * Setup. Two possible usages:\r\n                 *\r\n                 * - static:\r\n                 *   v-component=\"comp\"\r\n                 *\r\n                 * - dynamic:\r\n                 *   v-component=\"{{currentView}}\"\r\n                 */\r\n\r\n                bind: function () {\r\n                    if (!this.el.__vue__) {\r\n                        // create a ref anchor\r\n                        this.anchor = _.createAnchor('v-component')\r\n                        _.replace(this.el, this.anchor)\r\n                        // check keep-alive options.\r\n                        // If yes, instead of destroying the active vm when\r\n                        // hiding (v-if) or switching (dynamic literal) it,\r\n                        // we simply remove it from the DOM and save it in a\r\n                        // cache object, with its constructor id as the key.\r\n                        this.keepAlive = this._checkParam('keep-alive') != null\r\n                        // wait for event before insertion\r\n                        this.waitForEvent = this._checkParam('wait-for')\r\n                        // check ref\r\n                        this.refID = this._checkParam(config.prefix + 'ref')\r\n                        if (this.keepAlive) {\r\n                            this.cache = {}\r\n                        }\r\n                        // check inline-template\r\n                        if (this._checkParam('inline-template') !== null) {\r\n                            // extract inline template as a DocumentFragment\r\n                            this.template = _.extractContent(this.el, true)\r\n                        }\r\n                        // component resolution related state\r\n                        this.pendingComponentCb =\r\n                            this.Component = null\r\n                        // transition related state\r\n                        this.pendingRemovals = 0\r\n                        this.pendingRemovalCb = null\r\n                        // if static, build right now.\r\n                        if (!this._isDynamicLiteral) {\r\n                            this.resolveComponent(this.expression, _.bind(this.initStatic, this))\r\n                        } else {\r\n                            // check dynamic component params\r\n                            this.transMode = this._checkParam('transition-mode')\r\n                        }\r\n                    } else {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'cannot mount component \"' + this.expression + '\" ' +\r\n                            'on already mounted element: ' + this.el\r\n                        )\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Initialize a static component.\r\n                 */\r\n\r\n                initStatic: function () {\r\n                    // wait-for\r\n                    var anchor = this.anchor\r\n                    var options\r\n                    var waitFor = this.waitForEvent\r\n                    if (waitFor) {\r\n                        options = {\r\n                            created: function () {\r\n                                this.$once(waitFor, function () {\r\n                                    this.$before(anchor)\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    var child = this.build(options)\r\n                    this.setCurrent(child)\r\n                    if (!this.waitForEvent) {\r\n                        child.$before(anchor)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Public update, called by the watcher in the dynamic\r\n                 * literal scenario, e.g. v-component=\"{{view}}\"\r\n                 */\r\n\r\n                update: function (value) {\r\n                    this.setComponent(value)\r\n                },\r\n\r\n                /**\r\n                 * Switch dynamic components. May resolve the component\r\n                 * asynchronously, and perform transition based on\r\n                 * specified transition mode. Accepts a few additional\r\n                 * arguments specifically for vue-router.\r\n                 *\r\n                 * The callback is called when the full transition is\r\n                 * finished.\r\n                 *\r\n                 * @param {String} value\r\n                 * @param {Function} [cb]\r\n                 */\r\n\r\n                setComponent: function (value, cb) {\r\n                    this.invalidatePending()\r\n                    if (!value) {\r\n                        // just remove current\r\n                        this.unbuild(true)\r\n                        this.remove(this.childVM, cb)\r\n                        this.unsetCurrent()\r\n                    } else {\r\n                        this.resolveComponent(value, _.bind(function () {\r\n                            this.unbuild(true)\r\n                            var options\r\n                            var self = this\r\n                            var waitFor = this.waitForEvent\r\n                            if (waitFor) {\r\n                                options = {\r\n                                    created: function () {\r\n                                        this.$once(waitFor, function () {\r\n                                            self.waitingFor = null\r\n                                            self.transition(this, cb)\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            var cached = this.getCached()\r\n                            var newComponent = this.build(options)\r\n                            if (!waitFor || cached) {\r\n                                this.transition(newComponent, cb)\r\n                            } else {\r\n                                this.waitingFor = newComponent\r\n                            }\r\n                        }, this))\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Resolve the component constructor to use when creating\r\n                 * the child vm.\r\n                 */\r\n\r\n                resolveComponent: function (id, cb) {\r\n                    var self = this\r\n                    this.pendingComponentCb = _.cancellable(function (Component) {\r\n                        self.Component = Component\r\n                        cb()\r\n                    })\r\n                    this.vm._resolveComponent(id, this.pendingComponentCb)\r\n                },\r\n\r\n                /**\r\n                 * When the component changes or unbinds before an async\r\n                 * constructor is resolved, we need to invalidate its\r\n                 * pending callback.\r\n                 */\r\n\r\n                invalidatePending: function () {\r\n                    if (this.pendingComponentCb) {\r\n                        this.pendingComponentCb.cancel()\r\n                        this.pendingComponentCb = null\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Instantiate/insert a new child vm.\r\n                 * If keep alive and has cached instance, insert that\r\n                 * instance; otherwise build a new one and cache it.\r\n                 *\r\n                 * @param {Object} [extraOptions]\r\n                 * @return {Vue} - the created instance\r\n                 */\r\n\r\n                build: function (extraOptions) {\r\n                    var cached = this.getCached()\r\n                    if (cached) {\r\n                        return cached\r\n                    }\r\n                    if (this.Component) {\r\n                        // default options\r\n                        var options = {\r\n                            el: templateParser.clone(this.el),\r\n                            template: this.template,\r\n                            // if no inline-template, then the compiled\r\n                            // linker can be cached for better performance.\r\n                            _linkerCachable: !this.template,\r\n                            _asComponent: true,\r\n                            _isRouterView: this._isRouterView,\r\n                            _context: this.vm\r\n                        }\r\n                        // extra options\r\n                        if (extraOptions) {\r\n                            _.extend(options, extraOptions)\r\n                        }\r\n                        var parent = this._host || this.vm\r\n                        var child = parent.$addChild(options, this.Component)\r\n                        if (this.keepAlive) {\r\n                            this.cache[this.Component.cid] = child\r\n                        }\r\n                        return child\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Try to get a cached instance of the current component.\r\n                 *\r\n                 * @return {Vue|undefined}\r\n                 */\r\n\r\n                getCached: function () {\r\n                    return this.keepAlive && this.cache[this.Component.cid]\r\n                },\r\n\r\n                /**\r\n                 * Teardown the current child, but defers cleanup so\r\n                 * that we can separate the destroy and removal steps.\r\n                 *\r\n                 * @param {Boolean} defer\r\n                 */\r\n\r\n                unbuild: function (defer) {\r\n                    if (this.waitingFor) {\r\n                        this.waitingFor.$destroy()\r\n                        this.waitingFor = null\r\n                    }\r\n                    var child = this.childVM\r\n                    if (!child || this.keepAlive) {\r\n                        return\r\n                    }\r\n                    // the sole purpose of `deferCleanup` is so that we can\r\n                    // \"deactivate\" the vm right now and perform DOM removal\r\n                    // later.\r\n                    child.$destroy(false, defer)\r\n                },\r\n\r\n                /**\r\n                 * Remove current destroyed child and manually do\r\n                 * the cleanup after removal.\r\n                 *\r\n                 * @param {Function} cb\r\n                 */\r\n\r\n                remove: function (child, cb) {\r\n                    var keepAlive = this.keepAlive\r\n                    if (child) {\r\n                        // we may have a component switch when a previous\r\n                        // component is still being transitioned out.\r\n                        // we want to trigger only one lastest insertion cb\r\n                        // when the existing transition finishes. (#1119)\r\n                        this.pendingRemovals++\r\n                        this.pendingRemovalCb = cb\r\n                        var self = this\r\n                        child.$remove(function () {\r\n                            self.pendingRemovals--\r\n                            if (!keepAlive) child._cleanup()\r\n                            if (!self.pendingRemovals && self.pendingRemovalCb) {\r\n                                self.pendingRemovalCb()\r\n                                self.pendingRemovalCb = null\r\n                            }\r\n                        })\r\n                    } else if (cb) {\r\n                        cb()\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Actually swap the components, depending on the\r\n                 * transition mode. Defaults to simultaneous.\r\n                 *\r\n                 * @param {Vue} target\r\n                 * @param {Function} [cb]\r\n                 */\r\n\r\n                transition: function (target, cb) {\r\n                    var self = this\r\n                    var current = this.childVM\r\n                    this.setCurrent(target)\r\n                    switch (self.transMode) {\r\n                        case 'in-out':\r\n                            target.$before(self.anchor, function () {\r\n                                self.remove(current, cb)\r\n                            })\r\n                            break\r\n                        case 'out-in':\r\n                            self.remove(current, function () {\r\n                                target.$before(self.anchor, cb)\r\n                            })\r\n                            break\r\n                        default:\r\n                            self.remove(current)\r\n                            target.$before(self.anchor, cb)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Set childVM and parent ref\r\n                 */\r\n\r\n                setCurrent: function (child) {\r\n                    this.unsetCurrent()\r\n                    this.childVM = child\r\n                    var refID = child._refID || this.refID\r\n                    if (refID) {\r\n                        this.vm.$[refID] = child\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Unset childVM and parent ref\r\n                 */\r\n\r\n                unsetCurrent: function () {\r\n                    var child = this.childVM\r\n                    this.childVM = null\r\n                    var refID = (child && child._refID) || this.refID\r\n                    if (refID) {\r\n                        this.vm.$[refID] = null\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Unbind.\r\n                 */\r\n\r\n                unbind: function () {\r\n                    this.invalidatePending()\r\n                    // Do not defer cleanup when unbinding\r\n                    this.unbuild()\r\n                    this.unsetCurrent()\r\n                    // destroy all keep-alive cached instances\r\n                    if (this.cache) {\r\n                        for (var key in this.cache) {\r\n                            this.cache[key].$destroy()\r\n                        }\r\n                        this.cache = null\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 24 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var templateParser = __webpack_require__(22)\r\n\r\n            /**\r\n             * Process an element or a DocumentFragment based on a\r\n             * instance option object. This allows us to transclude\r\n             * a template node/fragment before the instance is created,\r\n             * so the processed fragment can then be cloned and reused\r\n             * in v-repeat.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Element|DocumentFragment}\r\n             */\r\n\r\n            exports.transclude = function (el, options) {\r\n                // extract container attributes to pass them down\r\n                // to compiler, because they need to be compiled in\r\n                // parent scope. we are mutating the options object here\r\n                // assuming the same object will be used for compile\r\n                // right after this.\r\n                if (options) {\r\n                    options._containerAttrs = extractAttrs(el)\r\n                }\r\n                // for template tags, what we want is its content as\r\n                // a documentFragment (for fragment instances)\r\n                if (_.isTemplate(el)) {\r\n                    el = templateParser.parse(el)\r\n                }\r\n                if (options) {\r\n                    if (options._asComponent && !options.template) {\r\n                        options.template = '<content></content>'\r\n                    }\r\n                    if (options.template) {\r\n                        options._content = _.extractContent(el)\r\n                        el = transcludeTemplate(el, options)\r\n                    }\r\n                }\r\n                if (el instanceof DocumentFragment) {\r\n                    // anchors for fragment instance\r\n                    // passing in `persist: true` to avoid them being\r\n                    // discarded by IE during template cloning\r\n                    _.prepend(_.createAnchor('v-start', true), el)\r\n                    el.appendChild(_.createAnchor('v-end', true))\r\n                }\r\n                return el\r\n            }\r\n\r\n            /**\r\n             * Process the template option.\r\n             * If the replace option is true this will swap the $el.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Object} options\r\n             * @return {Element|DocumentFragment}\r\n             */\r\n\r\n            function transcludeTemplate (el, options) {\r\n                var template = options.template\r\n                var frag = templateParser.parse(template, true)\r\n                if (frag) {\r\n                    var replacer = frag.firstChild\r\n                    var tag = replacer.tagName && replacer.tagName.toLowerCase()\r\n                    if (options.replace) {\r\n                        /* istanbul ignore if */\r\n                        if (el === document.body) {\r\n                            (\"development\") !== 'production' && _.warn(\r\n                                'You are mounting an instance with a template to ' +\r\n                                '<body>. This will replace <body> entirely. You ' +\r\n                                'should probably use `replace: false` here.'\r\n                            )\r\n                        }\r\n                        // there are many cases where the instance must\r\n                        // become a fragment instance: basically anything that\r\n                        // can create more than 1 root nodes.\r\n                        if (\r\n                            // multi-children template\r\n                        frag.childNodes.length > 1 ||\r\n                            // non-element template\r\n                        replacer.nodeType !== 1 ||\r\n                            // single nested component\r\n                        tag === 'component' ||\r\n                        _.resolveAsset(options, 'components', tag) ||\r\n                        replacer.hasAttribute(config.prefix + 'component') ||\r\n                            // element directive\r\n                        _.resolveAsset(options, 'elementDirectives', tag) ||\r\n                            // repeat block\r\n                        replacer.hasAttribute(config.prefix + 'repeat')\r\n                        ) {\r\n                            return frag\r\n                        } else {\r\n                            options._replacerAttrs = extractAttrs(replacer)\r\n                            mergeAttrs(el, replacer)\r\n                            return replacer\r\n                        }\r\n                    } else {\r\n                        el.appendChild(frag)\r\n                        return el\r\n                    }\r\n                } else {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Invalid template option: ' + template\r\n                    )\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper to extract a component container's attributes\r\n             * into a plain object array.\r\n             *\r\n             * @param {Element} el\r\n             * @return {Array}\r\n             */\r\n\r\n            function extractAttrs (el) {\r\n                if (el.nodeType === 1 && el.hasAttributes()) {\r\n                    return _.toArray(el.attributes)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Merge the attributes of two elements, and make sure\r\n             * the class names are merged properly.\r\n             *\r\n             * @param {Element} from\r\n             * @param {Element} to\r\n             */\r\n\r\n            function mergeAttrs (from, to) {\r\n                var attrs = from.attributes\r\n                var i = attrs.length\r\n                var name, value\r\n                while (i--) {\r\n                    name = attrs[i].name\r\n                    value = attrs[i].value\r\n                    if (!to.hasAttribute(name)) {\r\n                        to.setAttribute(name, value)\r\n                    } else if (name === 'class') {\r\n                        value = to.getAttribute(name) + ' ' + value\r\n                        to.setAttribute(name, value)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 25 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            // manipulation directives\r\n            exports.text = __webpack_require__(26)\r\n            exports.html = __webpack_require__(27)\r\n            exports.attr = __webpack_require__(28)\r\n            exports.show = __webpack_require__(29)\r\n            exports['class'] = __webpack_require__(31)\r\n            exports.el = __webpack_require__(32)\r\n            exports.ref = __webpack_require__(33)\r\n            exports.cloak = __webpack_require__(34)\r\n            exports.style = __webpack_require__(35)\r\n            exports.transition = __webpack_require__(36)\r\n\r\n            // event listener directives\r\n            exports.on = __webpack_require__(39)\r\n            exports.model = __webpack_require__(40)\r\n\r\n            // logic control directives\r\n            exports.repeat = __webpack_require__(45)\r\n            exports['if'] = __webpack_require__(46)\r\n\r\n            // internal directives that should not be used directly\r\n            // but we still want to expose them for advanced usage.\r\n            exports._component = __webpack_require__(23)\r\n            exports._prop = __webpack_require__(16)\r\n\r\n\r\n            /***/ },\r\n        /* 26 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    this.attr = this.el.nodeType === 3\r\n                        ? 'data'\r\n                        : 'textContent'\r\n                },\r\n\r\n                update: function (value) {\r\n                    this.el[this.attr] = _.toString(value)\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 27 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var templateParser = __webpack_require__(22)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    // a comment node means this is a binding for\r\n                    // {{{ inline unescaped html }}}\r\n                    if (this.el.nodeType === 8) {\r\n                        // hold nodes\r\n                        this.nodes = []\r\n                        // replace the placeholder with proper anchor\r\n                        this.anchor = _.createAnchor('v-html')\r\n                        _.replace(this.el, this.anchor)\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    value = _.toString(value)\r\n                    if (this.nodes) {\r\n                        this.swap(value)\r\n                    } else {\r\n                        this.el.innerHTML = value\r\n                    }\r\n                },\r\n\r\n                swap: function (value) {\r\n                    // remove old nodes\r\n                    var i = this.nodes.length\r\n                    while (i--) {\r\n                        _.remove(this.nodes[i])\r\n                    }\r\n                    // convert new value to a fragment\r\n                    // do not attempt to retrieve from id selector\r\n                    var frag = templateParser.parse(value, true, true)\r\n                    // save a reference to these nodes so we can remove later\r\n                    this.nodes = _.toArray(frag.childNodes)\r\n                    _.before(frag, this.anchor)\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 28 */\r\n        /***/ function(module, exports) {\r\n\r\n            // xlink\r\n            var xlinkNS = 'http://www.w3.org/1999/xlink'\r\n            var xlinkRE = /^xlink:/\r\n            var inputProps = {\r\n                value: 1,\r\n                checked: 1,\r\n                selected: 1\r\n            }\r\n\r\n            module.exports = {\r\n\r\n                priority: 850,\r\n\r\n                update: function (value) {\r\n                    if (this.arg) {\r\n                        this.setAttr(this.arg, value)\r\n                    } else if (typeof value === 'object') {\r\n                        this.objectHandler(value)\r\n                    }\r\n                },\r\n\r\n                objectHandler: function (value) {\r\n                    // cache object attrs so that only changed attrs\r\n                    // are actually updated.\r\n                    var cache = this.cache || (this.cache = {})\r\n                    var attr, val\r\n                    for (attr in cache) {\r\n                        if (!(attr in value)) {\r\n                            this.setAttr(attr, null)\r\n                            delete cache[attr]\r\n                        }\r\n                    }\r\n                    for (attr in value) {\r\n                        val = value[attr]\r\n                        if (val !== cache[attr]) {\r\n                            cache[attr] = val\r\n                            this.setAttr(attr, val)\r\n                        }\r\n                    }\r\n                },\r\n\r\n                setAttr: function (attr, value) {\r\n                    if (inputProps[attr] && attr in this.el) {\r\n                        if (!this.valueRemoved) {\r\n                            this.el.removeAttribute(attr)\r\n                            this.valueRemoved = true\r\n                        }\r\n                        this.el[attr] = value\r\n                    } else if (value != null && value !== false) {\r\n                        if (xlinkRE.test(attr)) {\r\n                            this.el.setAttributeNS(xlinkNS, attr, value)\r\n                        } else {\r\n                            this.el.setAttribute(attr, value)\r\n                        }\r\n                    } else {\r\n                        this.el.removeAttribute(attr)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 29 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var transition = __webpack_require__(30)\r\n\r\n            module.exports = function (value) {\r\n                var el = this.el\r\n                transition.apply(el, value ? 1 : -1, function () {\r\n                    el.style.display = value ? '' : 'none'\r\n                }, this.vm)\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 30 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Append with transition.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             * @param {Vue} vm\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            exports.append = function (el, target, vm, cb) {\r\n                apply(el, 1, function () {\r\n                    target.appendChild(el)\r\n                }, vm, cb)\r\n            }\r\n\r\n            /**\r\n             * InsertBefore with transition.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             * @param {Vue} vm\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            exports.before = function (el, target, vm, cb) {\r\n                apply(el, 1, function () {\r\n                    _.before(el, target)\r\n                }, vm, cb)\r\n            }\r\n\r\n            /**\r\n             * Remove with transition.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Vue} vm\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            exports.remove = function (el, vm, cb) {\r\n                apply(el, -1, function () {\r\n                    _.remove(el)\r\n                }, vm, cb)\r\n            }\r\n\r\n            /**\r\n             * Remove by appending to another parent with transition.\r\n             * This is only used in block operations.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Element} target\r\n             * @param {Vue} vm\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            exports.removeThenAppend = function (el, target, vm, cb) {\r\n                apply(el, -1, function () {\r\n                    target.appendChild(el)\r\n                }, vm, cb)\r\n            }\r\n\r\n            /**\r\n             * Append the childNodes of a fragment to target.\r\n             *\r\n             * @param {DocumentFragment} block\r\n             * @param {Node} target\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            exports.blockAppend = function (block, target, vm) {\r\n                var nodes = _.toArray(block.childNodes)\r\n                for (var i = 0, l = nodes.length; i < l; i++) {\r\n                    exports.before(nodes[i], target, vm)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Remove a block of nodes between two edge nodes.\r\n             *\r\n             * @param {Node} start\r\n             * @param {Node} end\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            exports.blockRemove = function (start, end, vm) {\r\n                var node = start.nextSibling\r\n                var next\r\n                while (node !== end) {\r\n                    next = node.nextSibling\r\n                    exports.remove(node, vm)\r\n                    node = next\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Apply transitions with an operation callback.\r\n             *\r\n             * @param {Element} el\r\n             * @param {Number} direction\r\n             *                  1: enter\r\n             *                 -1: leave\r\n             * @param {Function} op - the actual DOM operation\r\n             * @param {Vue} vm\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            var apply = exports.apply = function (el, direction, op, vm, cb) {\r\n                var transition = el.__v_trans\r\n                if (\r\n                    !transition ||\r\n                        // skip if there are no js hooks and CSS transition is\r\n                        // not supported\r\n                    (!transition.hooks && !_.transitionEndEvent) ||\r\n                        // skip transitions for initial compile\r\n                    !vm._isCompiled ||\r\n                        // if the vm is being manipulated by a parent directive\r\n                        // during the parent's compilation phase, skip the\r\n                        // animation.\r\n                    (vm.$parent && !vm.$parent._isCompiled)\r\n                ) {\r\n                    op()\r\n                    if (cb) cb()\r\n                    return\r\n                }\r\n                var action = direction > 0 ? 'enter' : 'leave'\r\n                transition[action](op, cb)\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 31 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var addClass = _.addClass\r\n            var removeClass = _.removeClass\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    // interpolations like class=\"{{abc}}\" are converted\r\n                    // to v-class, and we need to remove the raw,\r\n                    // uninterpolated className at binding time.\r\n                    var raw = this._descriptor._rawClass\r\n                    if (raw) {\r\n                        this.prevKeys = raw.trim().split(/\\s+/)\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    if (this.arg) {\r\n                        // single toggle\r\n                        if (value) {\r\n                            addClass(this.el, this.arg)\r\n                        } else {\r\n                            removeClass(this.el, this.arg)\r\n                        }\r\n                    } else {\r\n                        if (value && typeof value === 'string') {\r\n                            this.handleObject(stringToObject(value))\r\n                        } else if (_.isPlainObject(value)) {\r\n                            this.handleObject(value)\r\n                        } else {\r\n                            this.cleanup()\r\n                        }\r\n                    }\r\n                },\r\n\r\n                handleObject: function (value) {\r\n                    this.cleanup(value)\r\n                    var keys = this.prevKeys = Object.keys(value)\r\n                    for (var i = 0, l = keys.length; i < l; i++) {\r\n                        var key = keys[i]\r\n                        if (value[key]) {\r\n                            addClass(this.el, key)\r\n                        } else {\r\n                            removeClass(this.el, key)\r\n                        }\r\n                    }\r\n                },\r\n\r\n                cleanup: function (value) {\r\n                    if (this.prevKeys) {\r\n                        var i = this.prevKeys.length\r\n                        while (i--) {\r\n                            var key = this.prevKeys[i]\r\n                            if (!value || !value.hasOwnProperty(key)) {\r\n                                removeClass(this.el, key)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function stringToObject (value) {\r\n                var res = {}\r\n                var keys = value.trim().split(/\\s+/)\r\n                var i = keys.length\r\n                while (i--) {\r\n                    res[keys[i]] = true\r\n                }\r\n                return res\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 32 */\r\n        /***/ function(module, exports) {\r\n\r\n            module.exports = {\r\n\r\n                isLiteral: true,\r\n\r\n                bind: function () {\r\n                    this.vm.$$[this.expression] = this.el\r\n                },\r\n\r\n                unbind: function () {\r\n                    delete this.vm.$$[this.expression]\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 33 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                isLiteral: true,\r\n\r\n                bind: function () {\r\n                    var vm = this.el.__vue__\r\n                    if (!vm) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'v-ref should only be used on a component root element.'\r\n                        )\r\n                        return\r\n                    }\r\n                    // If we get here, it means this is a `v-ref` on a\r\n                    // child, because parent scope `v-ref` is stripped in\r\n                    // `v-component` already. So we just record our own ref\r\n                    // here - it will overwrite parent ref in `v-component`,\r\n                    // if any.\r\n                    vm._refID = this.expression\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 34 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var config = __webpack_require__(5)\r\n\r\n            module.exports = {\r\n                bind: function () {\r\n                    var el = this.el\r\n                    this.vm.$once('hook:compiled', function () {\r\n                        el.removeAttribute(config.prefix + 'cloak')\r\n                    })\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 35 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var prefixes = ['-webkit-', '-moz-', '-ms-']\r\n            var camelPrefixes = ['Webkit', 'Moz', 'ms']\r\n            var importantRE = /!important;?$/\r\n            var camelRE = /([a-z])([A-Z])/g\r\n            var testEl = null\r\n            var propCache = {}\r\n\r\n            module.exports = {\r\n\r\n                deep: true,\r\n\r\n                update: function (value) {\r\n                    if (this.arg) {\r\n                        this.setProp(this.arg, value)\r\n                    } else {\r\n                        if (typeof value === 'object') {\r\n                            this.objectHandler(value)\r\n                        } else {\r\n                            this.el.style.cssText = value\r\n                        }\r\n                    }\r\n                },\r\n\r\n                objectHandler: function (value) {\r\n                    // cache object styles so that only changed props\r\n                    // are actually updated.\r\n                    var cache = this.cache || (this.cache = {})\r\n                    var prop, val\r\n                    for (prop in cache) {\r\n                        if (!(prop in value)) {\r\n                            this.setProp(prop, null)\r\n                            delete cache[prop]\r\n                        }\r\n                    }\r\n                    for (prop in value) {\r\n                        val = value[prop]\r\n                        if (val !== cache[prop]) {\r\n                            cache[prop] = val\r\n                            this.setProp(prop, val)\r\n                        }\r\n                    }\r\n                },\r\n\r\n                setProp: function (prop, value) {\r\n                    prop = normalize(prop)\r\n                    if (!prop) return // unsupported prop\r\n                    // cast possible numbers/booleans into strings\r\n                    if (value != null) value += ''\r\n                    if (value) {\r\n                        var isImportant = importantRE.test(value)\r\n                            ? 'important'\r\n                            : ''\r\n                        if (isImportant) {\r\n                            value = value.replace(importantRE, '').trim()\r\n                        }\r\n                        this.el.style.setProperty(prop, value, isImportant)\r\n                    } else {\r\n                        this.el.style.removeProperty(prop)\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            /**\r\n             * Normalize a CSS property name.\r\n             * - cache result\r\n             * - auto prefix\r\n             * - camelCase -> dash-case\r\n             *\r\n             * @param {String} prop\r\n             * @return {String}\r\n             */\r\n\r\n            function normalize (prop) {\r\n                if (propCache[prop]) {\r\n                    return propCache[prop]\r\n                }\r\n                var res = prefix(prop)\r\n                propCache[prop] = propCache[res] = res\r\n                return res\r\n            }\r\n\r\n            /**\r\n             * Auto detect the appropriate prefix for a CSS property.\r\n             * https://gist.github.com/paulirish/523692\r\n             *\r\n             * @param {String} prop\r\n             * @return {String}\r\n             */\r\n\r\n            function prefix (prop) {\r\n                prop = prop.replace(camelRE, '$1-$2').toLowerCase()\r\n                var camel = _.camelize(prop)\r\n                var upper = camel.charAt(0).toUpperCase() + camel.slice(1)\r\n                if (!testEl) {\r\n                    testEl = document.createElement('div')\r\n                }\r\n                if (camel in testEl.style) {\r\n                    return prop\r\n                }\r\n                var i = prefixes.length\r\n                var prefixed\r\n                while (i--) {\r\n                    prefixed = camelPrefixes[i] + upper\r\n                    if (prefixed in testEl.style) {\r\n                        return prefixes[i] + prop\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 36 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Transition = __webpack_require__(37)\r\n\r\n            module.exports = {\r\n\r\n                priority: 1000,\r\n                isLiteral: true,\r\n\r\n                bind: function () {\r\n                    if (!this._isDynamicLiteral) {\r\n                        this.update(this.expression)\r\n                    }\r\n                },\r\n\r\n                update: function (id, oldId) {\r\n                    var el = this.el\r\n                    var vm = this.el.__vue__ || this.vm\r\n                    var hooks = _.resolveAsset(vm.$options, 'transitions', id)\r\n                    id = id || 'v'\r\n                    el.__v_trans = new Transition(el, id, hooks, vm)\r\n                    if (oldId) {\r\n                        _.removeClass(el, oldId + '-transition')\r\n                    }\r\n                    _.addClass(el, id + '-transition')\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 37 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var queue = __webpack_require__(38)\r\n            var addClass = _.addClass\r\n            var removeClass = _.removeClass\r\n            var transitionEndEvent = _.transitionEndEvent\r\n            var animationEndEvent = _.animationEndEvent\r\n            var transDurationProp = _.transitionProp + 'Duration'\r\n            var animDurationProp = _.animationProp + 'Duration'\r\n\r\n            var TYPE_TRANSITION = 1\r\n            var TYPE_ANIMATION = 2\r\n\r\n            var uid = 0\r\n\r\n            /**\r\n             * A Transition object that encapsulates the state and logic\r\n             * of the transition.\r\n             *\r\n             * @param {Element} el\r\n             * @param {String} id\r\n             * @param {Object} hooks\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            function Transition (el, id, hooks, vm) {\r\n                this.id = uid++\r\n                this.el = el\r\n                this.enterClass = id + '-enter'\r\n                this.leaveClass = id + '-leave'\r\n                this.hooks = hooks\r\n                this.vm = vm\r\n                // async state\r\n                this.pendingCssEvent =\r\n                    this.pendingCssCb =\r\n                        this.cancel =\r\n                            this.pendingJsCb =\r\n                                this.op =\r\n                                    this.cb = null\r\n                this.justEntered = false\r\n                this.entered = this.left = false\r\n                this.typeCache = {}\r\n                // bind\r\n                var self = this\r\n                    ;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone']\r\n                    .forEach(function (m) {\r\n                        self[m] = _.bind(self[m], self)\r\n                    })\r\n            }\r\n\r\n            var p = Transition.prototype\r\n\r\n            /**\r\n             * Start an entering transition.\r\n             *\r\n             * 1. enter transition triggered\r\n             * 2. call beforeEnter hook\r\n             * 3. add enter class\r\n             * 4. insert/show element\r\n             * 5. call enter hook (with possible explicit js callback)\r\n             * 6. reflow\r\n             * 7. based on transition type:\r\n             *    - transition:\r\n             *        remove class now, wait for transitionend,\r\n             *        then done if there's no explicit js callback.\r\n             *    - animation:\r\n             *        wait for animationend, remove class,\r\n             *        then done if there's no explicit js callback.\r\n             *    - no css transition:\r\n             *        done now if there's no explicit js callback.\r\n             * 8. wait for either done or js callback, then call\r\n             *    afterEnter hook.\r\n             *\r\n             * @param {Function} op - insert/show the element\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            p.enter = function (op, cb) {\r\n                this.cancelPending()\r\n                this.callHook('beforeEnter')\r\n                this.cb = cb\r\n                addClass(this.el, this.enterClass)\r\n                op()\r\n                this.entered = false\r\n                this.callHookWithCb('enter')\r\n                if (this.entered) {\r\n                    return // user called done synchronously.\r\n                }\r\n                this.cancel = this.hooks && this.hooks.enterCancelled\r\n                queue.push(this.enterNextTick)\r\n            }\r\n\r\n            /**\r\n             * The \"nextTick\" phase of an entering transition, which is\r\n             * to be pushed into a queue and executed after a reflow so\r\n             * that removing the class can trigger a CSS transition.\r\n             */\r\n\r\n            p.enterNextTick = function () {\r\n                this.justEntered = true\r\n                _.nextTick(function () {\r\n                    this.justEntered = false\r\n                }, this)\r\n                var enterDone = this.enterDone\r\n                var type = this.getCssTransitionType(this.enterClass)\r\n                if (!this.pendingJsCb) {\r\n                    if (type === TYPE_TRANSITION) {\r\n                        // trigger transition by removing enter class now\r\n                        removeClass(this.el, this.enterClass)\r\n                        this.setupCssCb(transitionEndEvent, enterDone)\r\n                    } else if (type === TYPE_ANIMATION) {\r\n                        this.setupCssCb(animationEndEvent, enterDone)\r\n                    } else {\r\n                        enterDone()\r\n                    }\r\n                } else if (type === TYPE_TRANSITION) {\r\n                    removeClass(this.el, this.enterClass)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The \"cleanup\" phase of an entering transition.\r\n             */\r\n\r\n            p.enterDone = function () {\r\n                this.entered = true\r\n                this.cancel = this.pendingJsCb = null\r\n                removeClass(this.el, this.enterClass)\r\n                this.callHook('afterEnter')\r\n                if (this.cb) this.cb()\r\n            }\r\n\r\n            /**\r\n             * Start a leaving transition.\r\n             *\r\n             * 1. leave transition triggered.\r\n             * 2. call beforeLeave hook\r\n             * 3. add leave class (trigger css transition)\r\n             * 4. call leave hook (with possible explicit js callback)\r\n             * 5. reflow if no explicit js callback is provided\r\n             * 6. based on transition type:\r\n             *    - transition or animation:\r\n             *        wait for end event, remove class, then done if\r\n             *        there's no explicit js callback.\r\n             *    - no css transition:\r\n             *        done if there's no explicit js callback.\r\n             * 7. wait for either done or js callback, then call\r\n             *    afterLeave hook.\r\n             *\r\n             * @param {Function} op - remove/hide the element\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            p.leave = function (op, cb) {\r\n                this.cancelPending()\r\n                this.callHook('beforeLeave')\r\n                this.op = op\r\n                this.cb = cb\r\n                addClass(this.el, this.leaveClass)\r\n                this.left = false\r\n                this.callHookWithCb('leave')\r\n                if (this.left) {\r\n                    return // user called done synchronously.\r\n                }\r\n                this.cancel = this.hooks && this.hooks.leaveCancelled\r\n                // only need to handle leaveDone if\r\n                // 1. the transition is already done (synchronously called\r\n                //    by the user, which causes this.op set to null)\r\n                // 2. there's no explicit js callback\r\n                if (this.op && !this.pendingJsCb) {\r\n                    // if a CSS transition leaves immediately after enter,\r\n                    // the transitionend event never fires. therefore we\r\n                    // detect such cases and end the leave immediately.\r\n                    if (this.justEntered) {\r\n                        this.leaveDone()\r\n                    } else {\r\n                        queue.push(this.leaveNextTick)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The \"nextTick\" phase of a leaving transition.\r\n             */\r\n\r\n            p.leaveNextTick = function () {\r\n                var type = this.getCssTransitionType(this.leaveClass)\r\n                if (type) {\r\n                    var event = type === TYPE_TRANSITION\r\n                        ? transitionEndEvent\r\n                        : animationEndEvent\r\n                    this.setupCssCb(event, this.leaveDone)\r\n                } else {\r\n                    this.leaveDone()\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The \"cleanup\" phase of a leaving transition.\r\n             */\r\n\r\n            p.leaveDone = function () {\r\n                this.left = true\r\n                this.cancel = this.pendingJsCb = null\r\n                this.op()\r\n                removeClass(this.el, this.leaveClass)\r\n                this.callHook('afterLeave')\r\n                if (this.cb) this.cb()\r\n                this.op = null\r\n            }\r\n\r\n            /**\r\n             * Cancel any pending callbacks from a previously running\r\n             * but not finished transition.\r\n             */\r\n\r\n            p.cancelPending = function () {\r\n                this.op = this.cb = null\r\n                var hasPending = false\r\n                if (this.pendingCssCb) {\r\n                    hasPending = true\r\n                    _.off(this.el, this.pendingCssEvent, this.pendingCssCb)\r\n                    this.pendingCssEvent = this.pendingCssCb = null\r\n                }\r\n                if (this.pendingJsCb) {\r\n                    hasPending = true\r\n                    this.pendingJsCb.cancel()\r\n                    this.pendingJsCb = null\r\n                }\r\n                if (hasPending) {\r\n                    removeClass(this.el, this.enterClass)\r\n                    removeClass(this.el, this.leaveClass)\r\n                }\r\n                if (this.cancel) {\r\n                    this.cancel.call(this.vm, this.el)\r\n                    this.cancel = null\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Call a user-provided synchronous hook function.\r\n             *\r\n             * @param {String} type\r\n             */\r\n\r\n            p.callHook = function (type) {\r\n                if (this.hooks && this.hooks[type]) {\r\n                    this.hooks[type].call(this.vm, this.el)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Call a user-provided, potentially-async hook function.\r\n             * We check for the length of arguments to see if the hook\r\n             * expects a `done` callback. If true, the transition's end\r\n             * will be determined by when the user calls that callback;\r\n             * otherwise, the end is determined by the CSS transition or\r\n             * animation.\r\n             *\r\n             * @param {String} type\r\n             */\r\n\r\n            p.callHookWithCb = function (type) {\r\n                var hook = this.hooks && this.hooks[type]\r\n                if (hook) {\r\n                    if (hook.length > 1) {\r\n                        this.pendingJsCb = _.cancellable(this[type + 'Done'])\r\n                    }\r\n                    hook.call(this.vm, this.el, this.pendingJsCb)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Get an element's transition type based on the\r\n             * calculated styles.\r\n             *\r\n             * @param {String} className\r\n             * @return {Number}\r\n             */\r\n\r\n            p.getCssTransitionType = function (className) {\r\n                /* istanbul ignore if */\r\n                if (\r\n                    !transitionEndEvent ||\r\n                        // skip CSS transitions if page is not visible -\r\n                        // this solves the issue of transitionend events not\r\n                        // firing until the page is visible again.\r\n                        // pageVisibility API is supported in IE10+, same as\r\n                        // CSS transitions.\r\n                    document.hidden ||\r\n                        // explicit js-only transition\r\n                    (this.hooks && this.hooks.css === false) ||\r\n                        // element is hidden\r\n                    isHidden(this.el)\r\n                ) {\r\n                    return\r\n                }\r\n                var type = this.typeCache[className]\r\n                if (type) return type\r\n                var inlineStyles = this.el.style\r\n                var computedStyles = window.getComputedStyle(this.el)\r\n                var transDuration =\r\n                    inlineStyles[transDurationProp] ||\r\n                    computedStyles[transDurationProp]\r\n                if (transDuration && transDuration !== '0s') {\r\n                    type = TYPE_TRANSITION\r\n                } else {\r\n                    var animDuration =\r\n                        inlineStyles[animDurationProp] ||\r\n                        computedStyles[animDurationProp]\r\n                    if (animDuration && animDuration !== '0s') {\r\n                        type = TYPE_ANIMATION\r\n                    }\r\n                }\r\n                if (type) {\r\n                    this.typeCache[className] = type\r\n                }\r\n                return type\r\n            }\r\n\r\n            /**\r\n             * Setup a CSS transitionend/animationend callback.\r\n             *\r\n             * @param {String} event\r\n             * @param {Function} cb\r\n             */\r\n\r\n            p.setupCssCb = function (event, cb) {\r\n                this.pendingCssEvent = event\r\n                var self = this\r\n                var el = this.el\r\n                var onEnd = this.pendingCssCb = function (e) {\r\n                    if (e.target === el) {\r\n                        _.off(el, event, onEnd)\r\n                        self.pendingCssEvent = self.pendingCssCb = null\r\n                        if (!self.pendingJsCb && cb) {\r\n                            cb()\r\n                        }\r\n                    }\r\n                }\r\n                _.on(el, event, onEnd)\r\n            }\r\n\r\n            /**\r\n             * Check if an element is hidden - in that case we can just\r\n             * skip the transition alltogether.\r\n             *\r\n             * @param {Element} el\r\n             * @return {Boolean}\r\n             */\r\n\r\n            function isHidden (el) {\r\n                return el.style.display === 'none' ||\r\n                    el.style.visibility === 'hidden' ||\r\n                    el.hidden\r\n            }\r\n\r\n            module.exports = Transition\r\n\r\n\r\n            /***/ },\r\n        /* 38 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var queue = []\r\n            var queued = false\r\n\r\n            /**\r\n             * Push a job into the queue.\r\n             *\r\n             * @param {Function} job\r\n             */\r\n\r\n            exports.push = function (job) {\r\n                queue.push(job)\r\n                if (!queued) {\r\n                    queued = true\r\n                    _.nextTick(flush)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Flush the queue, and do one forced reflow before\r\n             * triggering transitions.\r\n             */\r\n\r\n            function flush () {\r\n                // Force layout\r\n                var f = document.documentElement.offsetHeight\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i]()\r\n                }\r\n                queue = []\r\n                queued = false\r\n                // dummy return, so js linters don't complain about\r\n                // unused variable f\r\n                return f\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 39 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                acceptStatement: true,\r\n                priority: 700,\r\n\r\n                bind: function () {\r\n                    // deal with iframes\r\n                    if (\r\n                        this.el.tagName === 'IFRAME' &&\r\n                        this.arg !== 'load'\r\n                    ) {\r\n                        var self = this\r\n                        this.iframeBind = function () {\r\n                            _.on(self.el.contentWindow, self.arg, self.handler)\r\n                        }\r\n                        this.on('load', this.iframeBind)\r\n                    }\r\n                },\r\n\r\n                update: function (handler) {\r\n                    if (typeof handler !== 'function') {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Directive v-on=\"' + this.arg + ': ' +\r\n                            this.expression + '\" expects a function value, ' +\r\n                            'got ' + handler\r\n                        )\r\n                        return\r\n                    }\r\n                    this.reset()\r\n                    var vm = this.vm\r\n                    this.handler = function (e) {\r\n                        e.targetVM = vm\r\n                        vm.$event = e\r\n                        var res = handler(e)\r\n                        vm.$event = null\r\n                        return res\r\n                    }\r\n                    if (this.iframeBind) {\r\n                        this.iframeBind()\r\n                    } else {\r\n                        _.on(this.el, this.arg, this.handler)\r\n                    }\r\n                },\r\n\r\n                reset: function () {\r\n                    var el = this.iframeBind\r\n                        ? this.el.contentWindow\r\n                        : this.el\r\n                    if (this.handler) {\r\n                        _.off(el, this.arg, this.handler)\r\n                    }\r\n                },\r\n\r\n                unbind: function () {\r\n                    this.reset()\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 40 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            var handlers = {\r\n                text: __webpack_require__(41),\r\n                radio: __webpack_require__(42),\r\n                select: __webpack_require__(43),\r\n                checkbox: __webpack_require__(44)\r\n            }\r\n\r\n            module.exports = {\r\n\r\n                priority: 800,\r\n                twoWay: true,\r\n                handlers: handlers,\r\n\r\n                /**\r\n                 * Possible elements:\r\n                 *   <select>\r\n                 *   <textarea>\r\n                 *   <input type=\"*\">\r\n                 *     - text\r\n                 *     - checkbox\r\n                 *     - radio\r\n                 *     - number\r\n                 *     - TODO: more types may be supplied as a plugin\r\n                 */\r\n\r\n                bind: function () {\r\n                    // friendly warning...\r\n                    this.checkFilters()\r\n                    if (this.hasRead && !this.hasWrite) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'It seems you are using a read-only filter with ' +\r\n                            'v-model. You might want to use a two-way filter ' +\r\n                            'to ensure correct behavior.'\r\n                        )\r\n                    }\r\n                    var el = this.el\r\n                    var tag = el.tagName\r\n                    var handler\r\n                    if (tag === 'INPUT') {\r\n                        handler = handlers[el.type] || handlers.text\r\n                    } else if (tag === 'SELECT') {\r\n                        handler = handlers.select\r\n                    } else if (tag === 'TEXTAREA') {\r\n                        handler = handlers.text\r\n                    } else {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'v-model does not support element type: ' + tag\r\n                        )\r\n                        return\r\n                    }\r\n                    el.__v_model = this\r\n                    handler.bind.call(this)\r\n                    this.update = handler.update\r\n                    this._unbind = handler.unbind\r\n                },\r\n\r\n                /**\r\n                 * Check read/write filter stats.\r\n                 */\r\n\r\n                checkFilters: function () {\r\n                    var filters = this.filters\r\n                    if (!filters) return\r\n                    var i = filters.length\r\n                    while (i--) {\r\n                        var filter = _.resolveAsset(this.vm.$options, 'filters', filters[i].name)\r\n                        if (typeof filter === 'function' || filter.read) {\r\n                            this.hasRead = true\r\n                        }\r\n                        if (filter.write) {\r\n                            this.hasWrite = true\r\n                        }\r\n                    }\r\n                },\r\n\r\n                unbind: function () {\r\n                    this.el.__v_model = null\r\n                    this._unbind && this._unbind()\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 41 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var self = this\r\n                    var el = this.el\r\n                    var isRange = el.type === 'range'\r\n\r\n                    // check params\r\n                    // - lazy: update model on \"change\" instead of \"input\"\r\n                    var lazy = this._checkParam('lazy') != null\r\n                    // - number: cast value into number when updating model.\r\n                    var number = this._checkParam('number') != null\r\n                    // - debounce: debounce the input listener\r\n                    var debounce = parseInt(this._checkParam('debounce'), 10)\r\n\r\n                    // handle composition events.\r\n                    //   http://blog.evanyou.me/2014/01/03/composition-event/\r\n                    // skip this for Android because it handles composition\r\n                    // events quite differently. Android doesn't trigger\r\n                    // composition events for language input methods e.g.\r\n                    // Chinese, but instead triggers them for spelling\r\n                    // suggestions... (see Discussion/#162)\r\n                    var composing = false\r\n                    if (!_.isAndroid && !isRange) {\r\n                        this.on('compositionstart', function () {\r\n                            composing = true\r\n                        })\r\n                        this.on('compositionend', function () {\r\n                            composing = false\r\n                            // in IE11 the \"compositionend\" event fires AFTER\r\n                            // the \"input\" event, so the input handler is blocked\r\n                            // at the end... have to call it here.\r\n                            //\r\n                            // #1327: in lazy mode this is unecessary.\r\n                            if (!lazy) {\r\n                                self.listener()\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    // prevent messing with the input when user is typing,\r\n                    // and force update on blur.\r\n                    this.focused = false\r\n                    if (!isRange) {\r\n                        this.on('focus', function () {\r\n                            self.focused = true\r\n                        })\r\n                        this.on('blur', function () {\r\n                            self.focused = false\r\n                            self.listener()\r\n                        })\r\n                    }\r\n\r\n                    // Now attach the main listener\r\n                    this.listener = function () {\r\n                        if (composing) return\r\n                        var val = number || isRange\r\n                            ? _.toNumber(el.value)\r\n                            : el.value\r\n                        self.set(val)\r\n                        // force update on next tick to avoid lock & same value\r\n                        // also only update when user is not typing\r\n                        _.nextTick(function () {\r\n                            if (self._bound && !self.focused) {\r\n                                self.update(self._watcher.value)\r\n                            }\r\n                        })\r\n                    }\r\n                    if (debounce) {\r\n                        this.listener = _.debounce(this.listener, debounce)\r\n                    }\r\n\r\n                    // Support jQuery events, since jQuery.trigger() doesn't\r\n                    // trigger native events in some cases and some plugins\r\n                    // rely on $.trigger()\r\n                    //\r\n                    // We want to make sure if a listener is attached using\r\n                    // jQuery, it is also removed with jQuery, that's why\r\n                    // we do the check for each directive instance and\r\n                    // store that check result on itself. This also allows\r\n                    // easier test coverage control by unsetting the global\r\n                    // jQuery variable in tests.\r\n                    this.hasjQuery = typeof jQuery === 'function'\r\n                    if (this.hasjQuery) {\r\n                        jQuery(el).on('change', this.listener)\r\n                        if (!lazy) {\r\n                            jQuery(el).on('input', this.listener)\r\n                        }\r\n                    } else {\r\n                        this.on('change', this.listener)\r\n                        if (!lazy) {\r\n                            this.on('input', this.listener)\r\n                        }\r\n                    }\r\n\r\n                    // IE9 doesn't fire input event on backspace/del/cut\r\n                    if (!lazy && _.isIE9) {\r\n                        this.on('cut', function () {\r\n                            _.nextTick(self.listener)\r\n                        })\r\n                        this.on('keyup', function (e) {\r\n                            if (e.keyCode === 46 || e.keyCode === 8) {\r\n                                self.listener()\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    // set initial value if present\r\n                    if (\r\n                        el.hasAttribute('value') ||\r\n                        (el.tagName === 'TEXTAREA' && el.value.trim())\r\n                    ) {\r\n                        this._initValue = number\r\n                            ? _.toNumber(el.value)\r\n                            : el.value\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    this.el.value = _.toString(value)\r\n                },\r\n\r\n                unbind: function () {\r\n                    var el = this.el\r\n                    if (this.hasjQuery) {\r\n                        jQuery(el).off('change', this.listener)\r\n                        jQuery(el).off('input', this.listener)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 42 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var self = this\r\n                    var el = this.el\r\n                    var number = this._checkParam('number') != null\r\n                    var expression = this._checkParam('exp')\r\n\r\n                    this.getValue = function () {\r\n                        var val = el.value\r\n                        if (number) {\r\n                            val = _.toNumber(val)\r\n                        } else if (expression !== null) {\r\n                            val = self.vm.$eval(expression)\r\n                        }\r\n                        return val\r\n                    }\r\n\r\n                    this.on('change', function () {\r\n                        self.set(self.getValue())\r\n                    })\r\n\r\n                    if (el.checked) {\r\n                        this._initValue = this.getValue()\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    this.el.checked = _.looseEqual(value, this.getValue())\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 43 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Watcher = __webpack_require__(17)\r\n            var dirParser = __webpack_require__(15)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var self = this\r\n                    var el = this.el\r\n\r\n                    // method to force update DOM using latest value.\r\n                    this.forceUpdate = function () {\r\n                        if (self._watcher) {\r\n                            self.update(self._watcher.get())\r\n                        }\r\n                    }\r\n\r\n                    // check options param\r\n                    var optionsParam = this._checkParam('options')\r\n                    if (optionsParam) {\r\n                        initOptions.call(this, optionsParam)\r\n                    }\r\n                    this.number = this._checkParam('number') != null\r\n                    this.multiple = el.hasAttribute('multiple')\r\n\r\n                    // attach listener\r\n                    this.on('change', function () {\r\n                        var value = getValue(el, self.multiple)\r\n                        value = self.number\r\n                            ? _.isArray(value)\r\n                            ? value.map(_.toNumber)\r\n                            : _.toNumber(value)\r\n                            : value\r\n                        self.set(value)\r\n                    })\r\n\r\n                    // check initial value (inline selected attribute)\r\n                    checkInitialValue.call(this)\r\n\r\n                    // All major browsers except Firefox resets\r\n                    // selectedIndex with value -1 to 0 when the element\r\n                    // is appended to a new parent, therefore we have to\r\n                    // force a DOM update whenever that happens...\r\n                    this.vm.$on('hook:attached', this.forceUpdate)\r\n                },\r\n\r\n                update: function (value) {\r\n                    var el = this.el\r\n                    el.selectedIndex = -1\r\n                    if (value == null) {\r\n                        if (this.defaultOption) {\r\n                            this.defaultOption.selected = true\r\n                        }\r\n                        return\r\n                    }\r\n                    var multi = this.multiple && _.isArray(value)\r\n                    var options = el.options\r\n                    var i = options.length\r\n                    var op, val\r\n                    while (i--) {\r\n                        op = options[i]\r\n                        val = op.hasOwnProperty('_value')\r\n                            ? op._value\r\n                            : op.value\r\n                        /* eslint-disable eqeqeq */\r\n                        op.selected = multi\r\n                            ? indexOf(value, val) > -1\r\n                            : _.looseEqual(value, val)\r\n                        /* eslint-enable eqeqeq */\r\n                    }\r\n                },\r\n\r\n                unbind: function () {\r\n                    this.vm.$off('hook:attached', this.forceUpdate)\r\n                    if (this.optionWatcher) {\r\n                        this.optionWatcher.teardown()\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Initialize the option list from the param.\r\n             *\r\n             * @param {String} expression\r\n             */\r\n\r\n            function initOptions (expression) {\r\n                var self = this\r\n                var el = self.el\r\n                var defaultOption = self.defaultOption = self.el.options[0]\r\n                var descriptor = dirParser.parse(expression)[0]\r\n                function optionUpdateWatcher (value) {\r\n                    if (_.isArray(value)) {\r\n                        // clear old options.\r\n                        // cannot reset innerHTML here because IE family get\r\n                        // confused during compilation.\r\n                        var i = el.options.length\r\n                        while (i--) {\r\n                            var option = el.options[i]\r\n                            if (option !== defaultOption) {\r\n                                var parentNode = option.parentNode\r\n                                if (parentNode === el) {\r\n                                    parentNode.removeChild(option)\r\n                                } else {\r\n                                    el.removeChild(parentNode)\r\n                                    i = el.options.length\r\n                                }\r\n                            }\r\n                        }\r\n                        buildOptions(el, value)\r\n                        self.forceUpdate()\r\n                    } else {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Invalid options value for v-model: ' + value\r\n                        )\r\n                    }\r\n                }\r\n                this.optionWatcher = new Watcher(\r\n                    this.vm,\r\n                    descriptor.expression,\r\n                    optionUpdateWatcher,\r\n                    {\r\n                        deep: true,\r\n                        filters: descriptor.filters\r\n                    }\r\n                )\r\n                // update with initial value\r\n                optionUpdateWatcher(this.optionWatcher.value)\r\n            }\r\n\r\n            /**\r\n             * Build up option elements. IE9 doesn't create options\r\n             * when setting innerHTML on <select> elements, so we have\r\n             * to use DOM API here.\r\n             *\r\n             * @param {Element} parent - a <select> or an <optgroup>\r\n             * @param {Array} options\r\n             */\r\n\r\n            function buildOptions (parent, options) {\r\n                var op, el\r\n                for (var i = 0, l = options.length; i < l; i++) {\r\n                    op = options[i]\r\n                    if (!op.options) {\r\n                        el = document.createElement('option')\r\n                        if (typeof op === 'string' || typeof op === 'number') {\r\n                            el.text = el.value = op\r\n                        } else {\r\n                            if (op.value != null && !_.isObject(op.value)) {\r\n                                el.value = op.value\r\n                            }\r\n                            // object values gets serialized when set as value,\r\n                            // so we store the raw value as a different property\r\n                            el._value = op.value\r\n                            el.text = op.text || ''\r\n                            if (op.disabled) {\r\n                                el.disabled = true\r\n                            }\r\n                        }\r\n                    } else {\r\n                        el = document.createElement('optgroup')\r\n                        el.label = op.label\r\n                        buildOptions(el, op.options)\r\n                    }\r\n                    parent.appendChild(el)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check the initial value for selected options.\r\n             */\r\n\r\n            function checkInitialValue () {\r\n                var initValue\r\n                var options = this.el.options\r\n                for (var i = 0, l = options.length; i < l; i++) {\r\n                    if (options[i].hasAttribute('selected')) {\r\n                        if (this.multiple) {\r\n                            (initValue || (initValue = []))\r\n                                .push(options[i].value)\r\n                        } else {\r\n                            initValue = options[i].value\r\n                        }\r\n                    }\r\n                }\r\n                if (typeof initValue !== 'undefined') {\r\n                    this._initValue = this.number\r\n                        ? _.toNumber(initValue)\r\n                        : initValue\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Get select value\r\n             *\r\n             * @param {SelectElement} el\r\n             * @param {Boolean} multi\r\n             * @return {Array|*}\r\n             */\r\n\r\n            function getValue (el, multi) {\r\n                var res = multi ? [] : null\r\n                var op, val\r\n                for (var i = 0, l = el.options.length; i < l; i++) {\r\n                    op = el.options[i]\r\n                    if (op.selected) {\r\n                        val = op.hasOwnProperty('_value')\r\n                            ? op._value\r\n                            : op.value\r\n                        if (multi) {\r\n                            res.push(val)\r\n                        } else {\r\n                            return val\r\n                        }\r\n                    }\r\n                }\r\n                return res\r\n            }\r\n\r\n            /**\r\n             * Native Array.indexOf uses strict equal, but in this\r\n             * case we need to match string/numbers with custom equal.\r\n             *\r\n             * @param {Array} arr\r\n             * @param {*} val\r\n             */\r\n\r\n            function indexOf (arr, val) {\r\n                var i = arr.length\r\n                while (i--) {\r\n                    if (_.looseEqual(arr[i], val)) {\r\n                        return i\r\n                    }\r\n                }\r\n                return -1\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 44 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var self = this\r\n                    var el = this.el\r\n                    var trueExp = this._checkParam('true-exp')\r\n                    var falseExp = this._checkParam('false-exp')\r\n\r\n                    this._matchValue = function (value) {\r\n                        if (trueExp !== null) {\r\n                            return _.looseEqual(value, self.vm.$eval(trueExp))\r\n                        } else {\r\n                            return !!value\r\n                        }\r\n                    }\r\n\r\n                    function getValue () {\r\n                        var val = el.checked\r\n                        if (val && trueExp !== null) {\r\n                            val = self.vm.$eval(trueExp)\r\n                        }\r\n                        if (!val && falseExp !== null) {\r\n                            val = self.vm.$eval(falseExp)\r\n                        }\r\n                        return val\r\n                    }\r\n\r\n                    this.on('change', function () {\r\n                        self.set(getValue())\r\n                    })\r\n\r\n                    if (el.checked) {\r\n                        this._initValue = getValue()\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    this.el.checked = this._matchValue(value)\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 45 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var isObject = _.isObject\r\n            var isPlainObject = _.isPlainObject\r\n            var textParser = __webpack_require__(13)\r\n            var expParser = __webpack_require__(19)\r\n            var templateParser = __webpack_require__(22)\r\n            var compiler = __webpack_require__(10)\r\n            var uid = 0\r\n\r\n            // async component resolution states\r\n            var UNRESOLVED = 0\r\n            var PENDING = 1\r\n            var RESOLVED = 2\r\n            var ABORTED = 3\r\n\r\n            module.exports = {\r\n\r\n                /**\r\n                 * Setup.\r\n                 */\r\n\r\n                bind: function () {\r\n\r\n                    // some helpful tips...\r\n                    /* istanbul ignore if */\r\n                    if (\r\n                        (\"development\") !== 'production' &&\r\n                        this.el.tagName === 'OPTION' &&\r\n                        this.el.parentNode && this.el.parentNode.__v_model\r\n                    ) {\r\n                        _.warn(\r\n                            'Don\\'t use v-repeat for v-model options; ' +\r\n                            'use the `options` param instead: ' +\r\n                            'http://vuejs.org/guide/forms.html#Dynamic_Select_Options'\r\n                        )\r\n                    }\r\n\r\n                    // support for item in array syntax\r\n                    var inMatch = this.expression.match(/(.*) in (.*)/)\r\n                    if (inMatch) {\r\n                        this.arg = inMatch[1]\r\n                        this._watcherExp = inMatch[2]\r\n                    }\r\n                    // uid as a cache identifier\r\n                    this.id = '__v_repeat_' + (++uid)\r\n\r\n                    // setup anchor nodes\r\n                    this.start = _.createAnchor('v-repeat-start')\r\n                    this.end = _.createAnchor('v-repeat-end')\r\n                    _.replace(this.el, this.end)\r\n                    _.before(this.start, this.end)\r\n\r\n                    // check if this is a block repeat\r\n                    this.template = _.isTemplate(this.el)\r\n                        ? templateParser.parse(this.el, true)\r\n                        : this.el\r\n\r\n                    // check for trackby param\r\n                    this.idKey = this._checkParam('track-by')\r\n                    // check for transition stagger\r\n                    var stagger = +this._checkParam('stagger')\r\n                    this.enterStagger = +this._checkParam('enter-stagger') || stagger\r\n                    this.leaveStagger = +this._checkParam('leave-stagger') || stagger\r\n\r\n                    // check for v-ref/v-el\r\n                    this.refID = this._checkParam(config.prefix + 'ref')\r\n                    this.elID = this._checkParam(config.prefix + 'el')\r\n\r\n                    // check other directives that need to be handled\r\n                    // at v-repeat level\r\n                    this.checkIf()\r\n                    this.checkComponent()\r\n\r\n                    // create cache object\r\n                    this.cache = Object.create(null)\r\n                },\r\n\r\n                /**\r\n                 * Warn against v-if usage.\r\n                 */\r\n\r\n                checkIf: function () {\r\n                    if (_.attr(this.el, 'if') !== null) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Don\\'t use v-if with v-repeat. ' +\r\n                            'Use v-show or the \"filterBy\" filter instead.'\r\n                        )\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Check the component constructor to use for repeated\r\n                 * instances. If static we resolve it now, otherwise it\r\n                 * needs to be resolved at build time with actual data.\r\n                 */\r\n\r\n                checkComponent: function () {\r\n                    this.componentState = UNRESOLVED\r\n                    var options = this.vm.$options\r\n                    var id = _.checkComponent(this.el, options)\r\n                    if (!id) {\r\n                        // default constructor\r\n                        this.Component = _.Vue\r\n                        // inline repeats should inherit\r\n                        this.inline = true\r\n                        // important: transclude with no options, just\r\n                        // to ensure block start and block end\r\n                        this.template = compiler.transclude(this.template)\r\n                        var copy = _.extend({}, options)\r\n                        copy._asComponent = false\r\n                        this._linkFn = compiler.compile(this.template, copy)\r\n                    } else {\r\n                        this.Component = null\r\n                        this.asComponent = true\r\n                        // check inline-template\r\n                        if (this._checkParam('inline-template') !== null) {\r\n                            // extract inline template as a DocumentFragment\r\n                            this.inlineTemplate = _.extractContent(this.el, true)\r\n                        }\r\n                        var tokens = textParser.parse(id)\r\n                        if (tokens) {\r\n                            // dynamic component to be resolved later\r\n                            var componentExp = textParser.tokensToExp(tokens)\r\n                            this.componentGetter = expParser.parse(componentExp).get\r\n                        } else {\r\n                            // static\r\n                            this.componentId = id\r\n                            this.pendingData = null\r\n                        }\r\n                    }\r\n                },\r\n\r\n                resolveComponent: function () {\r\n                    this.componentState = PENDING\r\n                    this.vm._resolveComponent(this.componentId, _.bind(function (Component) {\r\n                        if (this.componentState === ABORTED) {\r\n                            return\r\n                        }\r\n                        this.Component = Component\r\n                        this.componentState = RESOLVED\r\n                        this.realUpdate(this.pendingData)\r\n                        this.pendingData = null\r\n                    }, this))\r\n                },\r\n\r\n                /**\r\n                 * Resolve a dynamic component to use for an instance.\r\n                 * The tricky part here is that there could be dynamic\r\n                 * components depending on instance data.\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Object} meta\r\n                 * @return {Function}\r\n                 */\r\n\r\n                resolveDynamicComponent: function (data, meta) {\r\n                    // create a temporary context object and copy data\r\n                    // and meta properties onto it.\r\n                    // use _.define to avoid accidentally overwriting scope\r\n                    // properties.\r\n                    var context = Object.create(this.vm)\r\n                    var key\r\n                    for (key in data) {\r\n                        _.define(context, key, data[key])\r\n                    }\r\n                    for (key in meta) {\r\n                        _.define(context, key, meta[key])\r\n                    }\r\n                    var id = this.componentGetter.call(context, context)\r\n                    var Component = _.resolveAsset(this.vm.$options, 'components', id)\r\n                    if (true) {\r\n                        _.assertAsset(Component, 'component', id)\r\n                    }\r\n                    if (!Component.options) {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Async resolution is not supported for v-repeat ' +\r\n                            '+ dynamic component. (component: ' + id + ')'\r\n                        )\r\n                        return _.Vue\r\n                    }\r\n                    return Component\r\n                },\r\n\r\n                /**\r\n                 * Update.\r\n                 * This is called whenever the Array mutates. If we have\r\n                 * a component, we might need to wait for it to resolve\r\n                 * asynchronously.\r\n                 *\r\n                 * @param {Array|Number|String} data\r\n                 */\r\n\r\n                update: function (data) {\r\n                    if ((\"development\") !== 'production' && !_.isArray(data)) {\r\n                        _.warn(\r\n                            'v-repeat pre-converts Objects into Arrays, and ' +\r\n                            'v-repeat filters should always return Arrays.'\r\n                        )\r\n                    }\r\n                    if (this.componentId) {\r\n                        var state = this.componentState\r\n                        if (state === UNRESOLVED) {\r\n                            this.pendingData = data\r\n                            // once resolved, it will call realUpdate\r\n                            this.resolveComponent()\r\n                        } else if (state === PENDING) {\r\n                            this.pendingData = data\r\n                        } else if (state === RESOLVED) {\r\n                            this.realUpdate(data)\r\n                        }\r\n                    } else {\r\n                        this.realUpdate(data)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * The real update that actually modifies the DOM.\r\n                 *\r\n                 * @param {Array|Number|String} data\r\n                 */\r\n\r\n                realUpdate: function (data) {\r\n                    this.vms = this.diff(data, this.vms)\r\n                    // update v-ref\r\n                    if (this.refID) {\r\n                        this.vm.$[this.refID] = this.converted\r\n                            ? toRefObject(this.vms)\r\n                            : this.vms\r\n                    }\r\n                    if (this.elID) {\r\n                        this.vm.$$[this.elID] = this.vms.map(function (vm) {\r\n                            return vm.$el\r\n                        })\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Diff, based on new data and old data, determine the\r\n                 * minimum amount of DOM manipulations needed to make the\r\n                 * DOM reflect the new data Array.\r\n                 *\r\n                 * The algorithm diffs the new data Array by storing a\r\n                 * hidden reference to an owner vm instance on previously\r\n                 * seen data. This allows us to achieve O(n) which is\r\n                 * better than a levenshtein distance based algorithm,\r\n                 * which is O(m * n).\r\n                 *\r\n                 * @param {Array} data\r\n                 * @param {Array} oldVms\r\n                 * @return {Array}\r\n                 */\r\n\r\n                diff: function (data, oldVms) {\r\n                    var idKey = this.idKey\r\n                    var converted = this.converted\r\n                    var start = this.start\r\n                    var end = this.end\r\n                    var inDoc = _.inDoc(start)\r\n                    var alias = this.arg\r\n                    var init = !oldVms\r\n                    var vms = new Array(data.length)\r\n                    var obj, raw, vm, i, l, primitive\r\n                    // First pass, go through the new Array and fill up\r\n                    // the new vms array. If a piece of data has a cached\r\n                    // instance for it, we reuse it. Otherwise build a new\r\n                    // instance.\r\n                    for (i = 0, l = data.length; i < l; i++) {\r\n                        obj = data[i]\r\n                        raw = converted ? obj.$value : obj\r\n                        primitive = !isObject(raw)\r\n                        vm = !init && this.getVm(raw, i, converted ? obj.$key : null)\r\n                        if (vm) { // reusable instance\r\n\r\n                            if ((\"development\") !== 'production' && vm._reused) {\r\n                                _.warn(\r\n                                    'Duplicate objects found in v-repeat=\"' + this.expression + '\": ' +\r\n                                    JSON.stringify(raw)\r\n                                )\r\n                            }\r\n\r\n                            vm._reused = true\r\n                            vm.$index = i // update $index\r\n                            // update data for track-by or object repeat,\r\n                            // since in these two cases the data is replaced\r\n                            // rather than mutated.\r\n                            if (idKey || converted || primitive) {\r\n                                if (alias) {\r\n                                    vm[alias] = raw\r\n                                } else if (_.isPlainObject(raw)) {\r\n                                    vm.$data = raw\r\n                                } else {\r\n                                    vm.$value = raw\r\n                                }\r\n                            }\r\n                        } else { // new instance\r\n                            vm = this.build(obj, i, true)\r\n                            vm._reused = false\r\n                        }\r\n                        vms[i] = vm\r\n                        // insert if this is first run\r\n                        if (init) {\r\n                            vm.$before(end)\r\n                        }\r\n                    }\r\n                    // if this is the first run, we're done.\r\n                    if (init) {\r\n                        return vms\r\n                    }\r\n                    // Second pass, go through the old vm instances and\r\n                    // destroy those who are not reused (and remove them\r\n                    // from cache)\r\n                    var removalIndex = 0\r\n                    var totalRemoved = oldVms.length - vms.length\r\n                    for (i = 0, l = oldVms.length; i < l; i++) {\r\n                        vm = oldVms[i]\r\n                        if (!vm._reused) {\r\n                            this.uncacheVm(vm)\r\n                            vm.$destroy(false, true) // defer cleanup until removal\r\n                            this.remove(vm, removalIndex++, totalRemoved, inDoc)\r\n                        }\r\n                    }\r\n                    // final pass, move/insert new instances into the\r\n                    // right place.\r\n                    var targetPrev, prevEl, currentPrev\r\n                    var insertionIndex = 0\r\n                    for (i = 0, l = vms.length; i < l; i++) {\r\n                        vm = vms[i]\r\n                        // this is the vm that we should be after\r\n                        targetPrev = vms[i - 1]\r\n                        prevEl = targetPrev\r\n                            ? targetPrev._staggerCb\r\n                            ? targetPrev._staggerAnchor\r\n                            : targetPrev._fragmentEnd || targetPrev.$el\r\n                            : start\r\n                        if (vm._reused && !vm._staggerCb) {\r\n                            currentPrev = findPrevVm(vm, start, this.id)\r\n                            if (currentPrev !== targetPrev) {\r\n                                this.move(vm, prevEl)\r\n                            }\r\n                        } else {\r\n                            // new instance, or still in stagger.\r\n                            // insert with updated stagger index.\r\n                            this.insert(vm, insertionIndex++, prevEl, inDoc)\r\n                        }\r\n                        vm._reused = false\r\n                    }\r\n                    return vms\r\n                },\r\n\r\n                /**\r\n                 * Build a new instance and cache it.\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Number} index\r\n                 * @param {Boolean} needCache\r\n                 */\r\n\r\n                build: function (data, index, needCache) {\r\n                    var meta = { $index: index }\r\n                    if (this.converted) {\r\n                        meta.$key = data.$key\r\n                    }\r\n                    var raw = this.converted ? data.$value : data\r\n                    var alias = this.arg\r\n                    if (alias) {\r\n                        data = {}\r\n                        data[alias] = raw\r\n                    } else if (!isPlainObject(raw)) {\r\n                        // non-object values\r\n                        data = {}\r\n                        meta.$value = raw\r\n                    } else {\r\n                        // default\r\n                        data = raw\r\n                    }\r\n                    // resolve constructor\r\n                    var Component = this.Component || this.resolveDynamicComponent(data, meta)\r\n                    var parent = this._host || this.vm\r\n                    var vm = parent.$addChild({\r\n                        el: templateParser.clone(this.template),\r\n                        data: data,\r\n                        inherit: this.inline,\r\n                        template: this.inlineTemplate,\r\n                        // repeater meta, e.g. $index, $key\r\n                        _meta: meta,\r\n                        // mark this as an inline-repeat instance\r\n                        _repeat: this.inline,\r\n                        // is this a component?\r\n                        _asComponent: this.asComponent,\r\n                        // linker cachable if no inline-template\r\n                        _linkerCachable: !this.inlineTemplate && Component !== _.Vue,\r\n                        // pre-compiled linker for simple repeats\r\n                        _linkFn: this._linkFn,\r\n                        // identifier, shows that this vm belongs to this collection\r\n                        _repeatId: this.id,\r\n                        // transclusion content owner\r\n                        _context: this.vm\r\n                    }, Component)\r\n                    // cache instance\r\n                    if (needCache) {\r\n                        this.cacheVm(raw, vm, index, this.converted ? meta.$key : null)\r\n                    }\r\n                    // sync back changes for two-way bindings of primitive values\r\n                    var dir = this\r\n                    if (this.rawType === 'object' && isPrimitive(raw)) {\r\n                        vm.$watch(alias || '$value', function (val) {\r\n                            if (dir.filters) {\r\n                                (\"development\") !== 'production' && _.warn(\r\n                                    'You seem to be mutating the $value reference of ' +\r\n                                    'a v-repeat instance (likely through v-model) ' +\r\n                                    'and filtering the v-repeat at the same time. ' +\r\n                                    'This will not work properly with an Array of ' +\r\n                                    'primitive values. Please use an Array of ' +\r\n                                    'Objects instead.'\r\n                                )\r\n                            }\r\n                            dir._withLock(function () {\r\n                                if (dir.converted) {\r\n                                    dir.rawValue[vm.$key] = val\r\n                                } else {\r\n                                    dir.rawValue.$set(vm.$index, val)\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                    return vm\r\n                },\r\n\r\n                /**\r\n                 * Unbind, teardown everything\r\n                 */\r\n\r\n                unbind: function () {\r\n                    this.componentState = ABORTED\r\n                    if (this.refID) {\r\n                        this.vm.$[this.refID] = null\r\n                    }\r\n                    if (this.vms) {\r\n                        var i = this.vms.length\r\n                        var vm\r\n                        while (i--) {\r\n                            vm = this.vms[i]\r\n                            this.uncacheVm(vm)\r\n                            vm.$destroy()\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Cache a vm instance based on its data.\r\n                 *\r\n                 * If the data is an object, we save the vm's reference on\r\n                 * the data object as a hidden property. Otherwise we\r\n                 * cache them in an object and for each primitive value\r\n                 * there is an array in case there are duplicates.\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Vue} vm\r\n                 * @param {Number} index\r\n                 * @param {String} [key]\r\n                 */\r\n\r\n                cacheVm: function (data, vm, index, key) {\r\n                    var idKey = this.idKey\r\n                    var cache = this.cache\r\n                    var primitive = !isObject(data)\r\n                    var id\r\n                    if (key || idKey || primitive) {\r\n                        id = idKey\r\n                            ? idKey === '$index'\r\n                            ? index\r\n                            : data[idKey]\r\n                            : (key || index)\r\n                        if (!cache[id]) {\r\n                            cache[id] = vm\r\n                        } else if (!primitive && idKey !== '$index') {\r\n                            (\"development\") !== 'production' && _.warn(\r\n                                'Duplicate objects with the same track-by key in v-repeat: ' + id\r\n                            )\r\n                        }\r\n                    } else {\r\n                        id = this.id\r\n                        if (data.hasOwnProperty(id)) {\r\n                            if (data[id] === null) {\r\n                                data[id] = vm\r\n                            } else {\r\n                                (\"development\") !== 'production' && _.warn(\r\n                                    'Duplicate objects found in v-repeat=\"' + this.expression + '\": ' +\r\n                                    JSON.stringify(data)\r\n                                )\r\n                            }\r\n                        } else {\r\n                            _.define(data, id, vm)\r\n                        }\r\n                    }\r\n                    vm._raw = data\r\n                },\r\n\r\n                /**\r\n                 * Try to get a cached instance from a piece of data.\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Number} index\r\n                 * @param {String} [key]\r\n                 * @return {Vue|undefined}\r\n                 */\r\n\r\n                getVm: function (data, index, key) {\r\n                    var idKey = this.idKey\r\n                    var primitive = !isObject(data)\r\n                    if (key || idKey || primitive) {\r\n                        var id = idKey\r\n                            ? idKey === '$index'\r\n                            ? index\r\n                            : data[idKey]\r\n                            : (key || index)\r\n                        return this.cache[id]\r\n                    } else {\r\n                        return data[this.id]\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Delete a cached vm instance.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 */\r\n\r\n                uncacheVm: function (vm) {\r\n                    var data = vm._raw\r\n                    var idKey = this.idKey\r\n                    var index = vm.$index\r\n                    // fix #948: avoid accidentally fall through to\r\n                    // a parent repeater which happens to have $key.\r\n                    var key = vm.hasOwnProperty('$key') && vm.$key\r\n                    var primitive = !isObject(data)\r\n                    if (idKey || key || primitive) {\r\n                        var id = idKey\r\n                            ? idKey === '$index'\r\n                            ? index\r\n                            : data[idKey]\r\n                            : (key || index)\r\n                        this.cache[id] = null\r\n                    } else {\r\n                        data[this.id] = null\r\n                        vm._raw = null\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Insert an instance.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 * @param {Number} index\r\n                 * @param {Node} prevEl\r\n                 * @param {Boolean} inDoc\r\n                 */\r\n\r\n                insert: function (vm, index, prevEl, inDoc) {\r\n                    if (vm._staggerCb) {\r\n                        vm._staggerCb.cancel()\r\n                        vm._staggerCb = null\r\n                    }\r\n                    var staggerAmount = this.getStagger(vm, index, null, 'enter')\r\n                    if (inDoc && staggerAmount) {\r\n                        // create an anchor and insert it synchronously,\r\n                        // so that we can resolve the correct order without\r\n                        // worrying about some elements not inserted yet\r\n                        var anchor = vm._staggerAnchor\r\n                        if (!anchor) {\r\n                            anchor = vm._staggerAnchor = _.createAnchor('stagger-anchor')\r\n                            anchor.__vue__ = vm\r\n                        }\r\n                        _.after(anchor, prevEl)\r\n                        var op = vm._staggerCb = _.cancellable(function () {\r\n                            vm._staggerCb = null\r\n                            vm.$before(anchor)\r\n                            _.remove(anchor)\r\n                        })\r\n                        setTimeout(op, staggerAmount)\r\n                    } else {\r\n                        vm.$after(prevEl)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Move an already inserted instance.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 * @param {Node} prevEl\r\n                 */\r\n\r\n                move: function (vm, prevEl) {\r\n                    vm.$after(prevEl, null, false)\r\n                },\r\n\r\n                /**\r\n                 * Remove an instance.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 * @param {Number} index\r\n                 * @param {Boolean} inDoc\r\n                 */\r\n\r\n                remove: function (vm, index, total, inDoc) {\r\n                    if (vm._staggerCb) {\r\n                        vm._staggerCb.cancel()\r\n                        vm._staggerCb = null\r\n                        // it's not possible for the same vm to be removed\r\n                        // twice, so if we have a pending stagger callback,\r\n                        // it means this vm is queued for enter but removed\r\n                        // before its transition started. Since it is already\r\n                        // destroyed, we can just leave it in detached state.\r\n                        return\r\n                    }\r\n                    var staggerAmount = this.getStagger(vm, index, total, 'leave')\r\n                    if (inDoc && staggerAmount) {\r\n                        var op = vm._staggerCb = _.cancellable(function () {\r\n                            vm._staggerCb = null\r\n                            remove()\r\n                        })\r\n                        setTimeout(op, staggerAmount)\r\n                    } else {\r\n                        remove()\r\n                    }\r\n                    function remove () {\r\n                        vm.$remove(function () {\r\n                            vm._cleanup()\r\n                        })\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Get the stagger amount for an insertion/removal.\r\n                 *\r\n                 * @param {Vue} vm\r\n                 * @param {Number} index\r\n                 * @param {String} type\r\n                 * @param {Number} total\r\n                 */\r\n\r\n                getStagger: function (vm, index, total, type) {\r\n                    type = type + 'Stagger'\r\n                    var transition = vm.$el.__v_trans\r\n                    var hooks = transition && transition.hooks\r\n                    var hook = hooks && (hooks[type] || hooks.stagger)\r\n                    return hook\r\n                        ? hook.call(vm, index, total)\r\n                        : index * this[type]\r\n                },\r\n\r\n                /**\r\n                 * Pre-process the value before piping it through the\r\n                 * filters, and convert non-Array objects to arrays.\r\n                 *\r\n                 * This function will be bound to this directive instance\r\n                 * and passed into the watcher.\r\n                 *\r\n                 * @param {*} value\r\n                 * @return {Array}\r\n                 * @private\r\n                 */\r\n\r\n                _preProcess: function (value) {\r\n                    // regardless of type, store the un-filtered raw value.\r\n                    this.rawValue = value\r\n                    var type = this.rawType = typeof value\r\n                    if (!isPlainObject(value)) {\r\n                        this.converted = false\r\n                        if (type === 'number') {\r\n                            value = range(value)\r\n                        } else if (type === 'string') {\r\n                            value = _.toArray(value)\r\n                        }\r\n                        return value || []\r\n                    } else {\r\n                        // convert plain object to array.\r\n                        var keys = Object.keys(value)\r\n                        var i = keys.length\r\n                        var res = new Array(i)\r\n                        var key\r\n                        while (i--) {\r\n                            key = keys[i]\r\n                            res[i] = {\r\n                                $key: key,\r\n                                $value: value[key]\r\n                            }\r\n                        }\r\n                        this.converted = true\r\n                        return res\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper to find the previous element that is an instance\r\n             * root node. This is necessary because a destroyed vm's\r\n             * element could still be lingering in the DOM before its\r\n             * leaving transition finishes, but its __vue__ reference\r\n             * should have been removed so we can skip them.\r\n             *\r\n             * If this is a block repeat, we want to make sure we only\r\n             * return vm that is bound to this v-repeat. (see #929)\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Comment|Text} anchor\r\n             * @return {Vue}\r\n             */\r\n\r\n            function findPrevVm (vm, anchor, id) {\r\n                var el = vm.$el.previousSibling\r\n                /* istanbul ignore if */\r\n                if (!el) return\r\n                while (\r\n                (!el.__vue__ || el.__vue__.$options._repeatId !== id) &&\r\n                el !== anchor\r\n                    ) {\r\n                    el = el.previousSibling\r\n                }\r\n                return el.__vue__\r\n            }\r\n\r\n            /**\r\n             * Create a range array from given number.\r\n             *\r\n             * @param {Number} n\r\n             * @return {Array}\r\n             */\r\n\r\n            function range (n) {\r\n                var i = -1\r\n                var ret = new Array(n)\r\n                while (++i < n) {\r\n                    ret[i] = i\r\n                }\r\n                return ret\r\n            }\r\n\r\n            /**\r\n             * Convert a vms array to an object ref for v-ref on an\r\n             * Object value.\r\n             *\r\n             * @param {Array} vms\r\n             * @return {Object}\r\n             */\r\n\r\n            function toRefObject (vms) {\r\n                var ref = {}\r\n                for (var i = 0, l = vms.length; i < l; i++) {\r\n                    ref[vms[i].$key] = vms[i]\r\n                }\r\n                return ref\r\n            }\r\n\r\n            /**\r\n             * Check if a value is a primitive one:\r\n             * String, Number, Boolean, null or undefined.\r\n             *\r\n             * @param {*} value\r\n             * @return {Boolean}\r\n             */\r\n\r\n            function isPrimitive (value) {\r\n                var type = typeof value\r\n                return value == null ||\r\n                    type === 'string' ||\r\n                    type === 'number' ||\r\n                    type === 'boolean'\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 46 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var compiler = __webpack_require__(10)\r\n            var templateParser = __webpack_require__(22)\r\n            var transition = __webpack_require__(30)\r\n            var Cache = __webpack_require__(14)\r\n            var cache = new Cache(1000)\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var el = this.el\r\n                    if (!el.__vue__) {\r\n                        this.start = _.createAnchor('v-if-start')\r\n                        this.end = _.createAnchor('v-if-end')\r\n                        _.replace(el, this.end)\r\n                        _.before(this.start, this.end)\r\n                        if (_.isTemplate(el)) {\r\n                            this.template = templateParser.parse(el, true)\r\n                        } else {\r\n                            this.template = document.createDocumentFragment()\r\n                            this.template.appendChild(templateParser.clone(el))\r\n                        }\r\n                        // compile the nested partial\r\n                        var cacheId = (this.vm.constructor.cid || '') + el.outerHTML\r\n                        this.linker = cache.get(cacheId)\r\n                        if (!this.linker) {\r\n                            this.linker = compiler.compile(\r\n                                this.template,\r\n                                this.vm.$options,\r\n                                true // partial\r\n                            )\r\n                            cache.put(cacheId, this.linker)\r\n                        }\r\n                    } else {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'v-if=\"' + this.expression + '\" cannot be ' +\r\n                            'used on an instance root element.'\r\n                        )\r\n                        this.invalid = true\r\n                    }\r\n                },\r\n\r\n                update: function (value) {\r\n                    if (this.invalid) return\r\n                    if (value) {\r\n                        // avoid duplicate compiles, since update() can be\r\n                        // called with different truthy values\r\n                        if (!this.unlink) {\r\n                            this.link(\r\n                                templateParser.clone(this.template),\r\n                                this.linker\r\n                            )\r\n                        }\r\n                    } else {\r\n                        this.teardown()\r\n                    }\r\n                },\r\n\r\n                link: function (frag, linker) {\r\n                    var vm = this.vm\r\n                    this.unlink = linker(vm, frag, this._host /* important */)\r\n                    transition.blockAppend(frag, this.end, vm)\r\n                    // call attached for all the child components created\r\n                    // during the compilation\r\n                    if (_.inDoc(vm.$el)) {\r\n                        var children = this.getContainedComponents()\r\n                        if (children) children.forEach(callAttach)\r\n                    }\r\n                },\r\n\r\n                teardown: function () {\r\n                    if (!this.unlink) return\r\n                    // collect children beforehand\r\n                    var children\r\n                    if (_.inDoc(this.vm.$el)) {\r\n                        children = this.getContainedComponents()\r\n                    }\r\n                    transition.blockRemove(this.start, this.end, this.vm)\r\n                    if (children) children.forEach(callDetach)\r\n                    this.unlink()\r\n                    this.unlink = null\r\n                },\r\n\r\n                getContainedComponents: function () {\r\n                    var vm = this._host || this.vm\r\n                    var start = this.start.nextSibling\r\n                    var end = this.end\r\n\r\n                    function contains (c) {\r\n                        var cur = start\r\n                        var next\r\n                        while (next !== end) {\r\n                            next = cur.nextSibling\r\n                            if (\r\n                                cur === c.$el ||\r\n                                cur.contains && cur.contains(c.$el)\r\n                            ) {\r\n                                return true\r\n                            }\r\n                            cur = next\r\n                        }\r\n                        return false\r\n                    }\r\n\r\n                    return vm.$children.length &&\r\n                        vm.$children.filter(contains)\r\n                },\r\n\r\n                unbind: function () {\r\n                    if (this.unlink) this.unlink()\r\n                }\r\n\r\n            }\r\n\r\n            function callAttach (child) {\r\n                if (!child._isAttached) {\r\n                    child._callHook('attached')\r\n                }\r\n            }\r\n\r\n            function callDetach (child) {\r\n                if (child._isAttached) {\r\n                    child._callHook('detached')\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 47 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            exports.content = __webpack_require__(48)\r\n            exports.partial = __webpack_require__(49)\r\n\r\n\r\n            /***/ },\r\n        /* 48 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var clone = __webpack_require__(22).clone\r\n\r\n            // This is the elementDirective that handles <content>\r\n            // transclusions. It relies on the raw content of an\r\n            // instance being stored as `$options._content` during\r\n            // the transclude phase.\r\n\r\n            module.exports = {\r\n\r\n                bind: function () {\r\n                    var vm = this.vm\r\n                    var host = vm\r\n                    // we need find the content context, which is the\r\n                    // closest non-inline-repeater instance.\r\n                    while (host.$options._repeat) {\r\n                        host = host.$parent\r\n                    }\r\n                    var raw = host.$options._content\r\n                    var content\r\n                    if (!raw) {\r\n                        this.fallback()\r\n                        return\r\n                    }\r\n                    var context = host._context\r\n                    var selector = this._checkParam('select')\r\n                    if (!selector) {\r\n                        // Default content\r\n                        var self = this\r\n                        var compileDefaultContent = function () {\r\n                            self.compile(\r\n                                extractFragment(raw.childNodes, raw, true),\r\n                                context,\r\n                                vm\r\n                            )\r\n                        }\r\n                        if (!host._isCompiled) {\r\n                            // defer until the end of instance compilation,\r\n                            // because the default outlet must wait until all\r\n                            // other possible outlets with selectors have picked\r\n                            // out their contents.\r\n                            host.$once('hook:compiled', compileDefaultContent)\r\n                        } else {\r\n                            compileDefaultContent()\r\n                        }\r\n                    } else {\r\n                        // select content\r\n                        var nodes = raw.querySelectorAll(selector)\r\n                        if (nodes.length) {\r\n                            content = extractFragment(nodes, raw)\r\n                            if (content.hasChildNodes()) {\r\n                                this.compile(content, context, vm)\r\n                            } else {\r\n                                this.fallback()\r\n                            }\r\n                        } else {\r\n                            this.fallback()\r\n                        }\r\n                    }\r\n                },\r\n\r\n                fallback: function () {\r\n                    this.compile(_.extractContent(this.el, true), this.vm)\r\n                },\r\n\r\n                compile: function (content, context, host) {\r\n                    if (content && context) {\r\n                        this.unlink = context.$compile(content, host)\r\n                    }\r\n                    if (content) {\r\n                        _.replace(this.el, content)\r\n                    } else {\r\n                        _.remove(this.el)\r\n                    }\r\n                },\r\n\r\n                unbind: function () {\r\n                    if (this.unlink) {\r\n                        this.unlink()\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Extract qualified content nodes from a node list.\r\n             *\r\n             * @param {NodeList} nodes\r\n             * @param {Element} parent\r\n             * @param {Boolean} main\r\n             * @return {DocumentFragment}\r\n             */\r\n\r\n            function extractFragment (nodes, parent, main) {\r\n                var frag = document.createDocumentFragment()\r\n                for (var i = 0, l = nodes.length; i < l; i++) {\r\n                    var node = nodes[i]\r\n                    // if this is the main outlet, we want to skip all\r\n                    // previously selected nodes;\r\n                    // otherwise, we want to mark the node as selected.\r\n                    // clone the node so the original raw content remains\r\n                    // intact. this ensures proper re-compilation in cases\r\n                    // where the outlet is inside a conditional block\r\n                    if (main && !node.__v_selected) {\r\n                        frag.appendChild(clone(node))\r\n                    } else if (!main && node.parentNode === parent) {\r\n                        node.__v_selected = true\r\n                        frag.appendChild(clone(node))\r\n                    }\r\n                }\r\n                return frag\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 49 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var templateParser = __webpack_require__(22)\r\n            var textParser = __webpack_require__(13)\r\n            var compiler = __webpack_require__(10)\r\n            var Cache = __webpack_require__(14)\r\n            var cache = new Cache(1000)\r\n\r\n            // v-partial reuses logic from v-if\r\n            var vIf = __webpack_require__(46)\r\n\r\n            module.exports = {\r\n\r\n                link: vIf.link,\r\n                teardown: vIf.teardown,\r\n                getContainedComponents: vIf.getContainedComponents,\r\n\r\n                bind: function () {\r\n                    var el = this.el\r\n                    this.start = _.createAnchor('v-partial-start')\r\n                    this.end = _.createAnchor('v-partial-end')\r\n                    _.replace(el, this.end)\r\n                    _.before(this.start, this.end)\r\n                    var id = el.getAttribute('name')\r\n                    var tokens = textParser.parse(id)\r\n                    if (tokens) {\r\n                        // dynamic partial\r\n                        this.setupDynamic(tokens)\r\n                    } else {\r\n                        // static partial\r\n                        this.insert(id)\r\n                    }\r\n                },\r\n\r\n                setupDynamic: function (tokens) {\r\n                    var self = this\r\n                    var exp = textParser.tokensToExp(tokens)\r\n                    this.unwatch = this.vm.$watch(exp, function (value) {\r\n                        self.teardown()\r\n                        self.insert(value)\r\n                    }, {\r\n                        immediate: true,\r\n                        user: false\r\n                    })\r\n                },\r\n\r\n                insert: function (id) {\r\n                    var partial = _.resolveAsset(this.vm.$options, 'partials', id)\r\n                    if (true) {\r\n                        _.assertAsset(partial, 'partial', id)\r\n                    }\r\n                    if (partial) {\r\n                        var frag = templateParser.parse(partial, true)\r\n                        // cache partials based on constructor id.\r\n                        var cacheId = (this.vm.constructor.cid || '') + partial\r\n                        var linker = this.compile(frag, cacheId)\r\n                        // this is provided by v-if\r\n                        this.link(frag, linker)\r\n                    }\r\n                },\r\n\r\n                compile: function (frag, cacheId) {\r\n                    var hit = cache.get(cacheId)\r\n                    if (hit) return hit\r\n                    var linker = compiler.compile(frag, this.vm.$options, true)\r\n                    cache.put(cacheId, linker)\r\n                    return linker\r\n                },\r\n\r\n                unbind: function () {\r\n                    if (this.unlink) this.unlink()\r\n                    if (this.unwatch) this.unwatch()\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 50 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Stringify value.\r\n             *\r\n             * @param {Number} indent\r\n             */\r\n\r\n            exports.json = {\r\n                read: function (value, indent) {\r\n                    return typeof value === 'string'\r\n                        ? value\r\n                        : JSON.stringify(value, null, Number(indent) || 2)\r\n                },\r\n                write: function (value) {\r\n                    try {\r\n                        return JSON.parse(value)\r\n                    } catch (e) {\r\n                        return value\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 'abc' => 'Abc'\r\n             */\r\n\r\n            exports.capitalize = function (value) {\r\n                if (!value && value !== 0) return ''\r\n                value = value.toString()\r\n                return value.charAt(0).toUpperCase() + value.slice(1)\r\n            }\r\n\r\n            /**\r\n             * 'abc' => 'ABC'\r\n             */\r\n\r\n            exports.uppercase = function (value) {\r\n                return (value || value === 0)\r\n                    ? value.toString().toUpperCase()\r\n                    : ''\r\n            }\r\n\r\n            /**\r\n             * 'AbC' => 'abc'\r\n             */\r\n\r\n            exports.lowercase = function (value) {\r\n                return (value || value === 0)\r\n                    ? value.toString().toLowerCase()\r\n                    : ''\r\n            }\r\n\r\n            /**\r\n             * 12345 => $12,345.00\r\n             *\r\n             * @param {String} sign\r\n             */\r\n\r\n            var digitsRE = /(\\d{3})(?=\\d)/g\r\n            exports.currency = function (value, currency) {\r\n                value = parseFloat(value)\r\n                if (!isFinite(value) || (!value && value !== 0)) return ''\r\n                currency = currency != null ? currency : '$'\r\n                var stringified = Math.abs(value).toFixed(2)\r\n                var _int = stringified.slice(0, -3)\r\n                var i = _int.length % 3\r\n                var head = i > 0\r\n                    ? (_int.slice(0, i) + (_int.length > 3 ? ',' : ''))\r\n                    : ''\r\n                var _float = stringified.slice(-3)\r\n                var sign = value < 0 ? '-' : ''\r\n                return currency + sign + head +\r\n                    _int.slice(i).replace(digitsRE, '$1,') +\r\n                    _float\r\n            }\r\n\r\n            /**\r\n             * 'item' => 'items'\r\n             *\r\n             * @params\r\n             *  an array of strings corresponding to\r\n             *  the single, double, triple ... forms of the word to\r\n             *  be pluralized. When the number to be pluralized\r\n             *  exceeds the length of the args, it will use the last\r\n             *  entry in the array.\r\n             *\r\n             *  e.g. ['single', 'double', 'triple', 'multiple']\r\n             */\r\n\r\n            exports.pluralize = function (value) {\r\n                var args = _.toArray(arguments, 1)\r\n                return args.length > 1\r\n                    ? (args[value % 10 - 1] || args[args.length - 1])\r\n                    : (args[0] + (value === 1 ? '' : 's'))\r\n            }\r\n\r\n            /**\r\n             * A special filter that takes a handler function,\r\n             * wraps it so it only gets triggered on specific\r\n             * keypresses. v-on only.\r\n             *\r\n             * @param {String} key\r\n             */\r\n\r\n            var keyCodes = {\r\n                esc: 27,\r\n                tab: 9,\r\n                enter: 13,\r\n                space: 32,\r\n                'delete': 46,\r\n                up: 38,\r\n                left: 37,\r\n                right: 39,\r\n                down: 40\r\n            }\r\n\r\n            exports.key = function (handler, key) {\r\n                if (!handler) return\r\n                var code = keyCodes[key]\r\n                if (!code) {\r\n                    code = parseInt(key, 10)\r\n                }\r\n                return function (e) {\r\n                    if (e.keyCode === code) {\r\n                        return handler.call(this, e)\r\n                    }\r\n                }\r\n            }\r\n\r\n            // expose keycode hash\r\n            exports.key.keyCodes = keyCodes\r\n\r\n            exports.debounce = function (handler, delay) {\r\n                if (!handler) return\r\n                if (!delay) {\r\n                    delay = 300\r\n                }\r\n                return _.debounce(handler, delay)\r\n            }\r\n\r\n            /**\r\n             * Install special array filters\r\n             */\r\n\r\n            _.extend(exports, __webpack_require__(51))\r\n\r\n\r\n            /***/ },\r\n        /* 51 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Path = __webpack_require__(20)\r\n\r\n            /**\r\n             * Filter filter for v-repeat\r\n             *\r\n             * @param {String} searchKey\r\n             * @param {String} [delimiter]\r\n             * @param {String} dataKey\r\n             */\r\n\r\n            exports.filterBy = function (arr, search, delimiter /* ...dataKeys */) {\r\n                if (search == null) {\r\n                    return arr\r\n                }\r\n                if (typeof search === 'function') {\r\n                    return arr.filter(search)\r\n                }\r\n                // cast to lowercase string\r\n                search = ('' + search).toLowerCase()\r\n                // allow optional `in` delimiter\r\n                // because why not\r\n                var n = delimiter === 'in' ? 3 : 2\r\n                // extract and flatten keys\r\n                var keys = _.toArray(arguments, n).reduce(function (prev, cur) {\r\n                    return prev.concat(cur)\r\n                }, [])\r\n                return arr.filter(function (item) {\r\n                    if (keys.length) {\r\n                        return keys.some(function (key) {\r\n                            return contains(Path.get(item, key), search)\r\n                        })\r\n                    } else {\r\n                        return contains(item, search)\r\n                    }\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Filter filter for v-repeat\r\n             *\r\n             * @param {String} sortKey\r\n             * @param {String} reverse\r\n             */\r\n\r\n            exports.orderBy = function (arr, sortKey, reverse) {\r\n                if (!sortKey) {\r\n                    return arr\r\n                }\r\n                var order = 1\r\n                if (arguments.length > 2) {\r\n                    if (reverse === '-1') {\r\n                        order = -1\r\n                    } else {\r\n                        order = reverse ? -1 : 1\r\n                    }\r\n                }\r\n                // sort on a copy to avoid mutating original array\r\n                return arr.slice().sort(function (a, b) {\r\n                    if (sortKey !== '$key' && sortKey !== '$value') {\r\n                        if (a && '$value' in a) a = a.$value\r\n                        if (b && '$value' in b) b = b.$value\r\n                    }\r\n                    a = _.isObject(a) ? Path.get(a, sortKey) : a\r\n                    b = _.isObject(b) ? Path.get(b, sortKey) : b\r\n                    return a === b ? 0 : a > b ? order : -order\r\n                })\r\n            }\r\n\r\n            /**\r\n             * String contain helper\r\n             *\r\n             * @param {*} val\r\n             * @param {String} search\r\n             */\r\n\r\n            function contains (val, search) {\r\n                var i\r\n                if (_.isPlainObject(val)) {\r\n                    var keys = Object.keys(val)\r\n                    i = keys.length\r\n                    while (i--) {\r\n                        if (contains(val[keys[i]], search)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                } else if (_.isArray(val)) {\r\n                    i = val.length\r\n                    while (i--) {\r\n                        if (contains(val[i], search)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                } else if (val != null) {\r\n                    return val.toString().toLowerCase().indexOf(search) > -1\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 52 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var mergeOptions = __webpack_require__(1).mergeOptions\r\n\r\n            /**\r\n             * The main init sequence. This is called for every\r\n             * instance, including ones that are created from extended\r\n             * constructors.\r\n             *\r\n             * @param {Object} options - this options object should be\r\n             *                           the result of merging class\r\n             *                           options and the options passed\r\n             *                           in to the constructor.\r\n             */\r\n\r\n            exports._init = function (options) {\r\n\r\n                options = options || {}\r\n\r\n                this.$el = null\r\n                this.$parent = options._parent\r\n                this.$root = options._root || this\r\n                this.$children = []\r\n                this.$ = {}           // child vm references\r\n                this.$$ = {}          // element references\r\n                this._watchers = []   // all watchers as an array\r\n                this._directives = [] // all directives\r\n                this._childCtors = {} // inherit:true constructors\r\n\r\n                // a flag to avoid this being observed\r\n                this._isVue = true\r\n\r\n                // events bookkeeping\r\n                this._events = {}            // registered callbacks\r\n                this._eventsCount = {}       // for $broadcast optimization\r\n                this._eventCancelled = false // for event cancellation\r\n\r\n                // fragment instance properties\r\n                this._isFragment = false\r\n                this._fragmentStart =    // @type {CommentNode}\r\n                    this._fragmentEnd = null // @type {CommentNode}\r\n\r\n                // lifecycle state\r\n                this._isCompiled =\r\n                    this._isDestroyed =\r\n                        this._isReady =\r\n                            this._isAttached =\r\n                                this._isBeingDestroyed = false\r\n                this._unlinkFn = null\r\n\r\n                // context: the scope in which the component was used,\r\n                // and the scope in which props and contents of this\r\n                // instance should be compiled in.\r\n                this._context =\r\n                    options._context ||\r\n                    options._parent\r\n\r\n                // push self into parent / transclusion host\r\n                if (this.$parent) {\r\n                    this.$parent.$children.push(this)\r\n                }\r\n\r\n                // props used in v-repeat diffing\r\n                this._reused = false\r\n                this._staggerOp = null\r\n\r\n                // merge options.\r\n                options = this.$options = mergeOptions(\r\n                    this.constructor.options,\r\n                    options,\r\n                    this\r\n                )\r\n\r\n                // initialize data as empty object.\r\n                // it will be filled up in _initScope().\r\n                this._data = {}\r\n\r\n                // initialize data observation and scope inheritance.\r\n                this._initScope()\r\n\r\n                // setup event system and option events.\r\n                this._initEvents()\r\n\r\n                // call created hook\r\n                this._callHook('created')\r\n\r\n                // if `el` option is passed, start compilation.\r\n                if (options.el) {\r\n                    this.$mount(options.el)\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 53 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var inDoc = _.inDoc\r\n\r\n            /**\r\n             * Setup the instance's option events & watchers.\r\n             * If the value is a string, we pull it from the\r\n             * instance's methods by name.\r\n             */\r\n\r\n            exports._initEvents = function () {\r\n                var options = this.$options\r\n                registerCallbacks(this, '$on', options.events)\r\n                registerCallbacks(this, '$watch', options.watch)\r\n            }\r\n\r\n            /**\r\n             * Register callbacks for option events and watchers.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {String} action\r\n             * @param {Object} hash\r\n             */\r\n\r\n            function registerCallbacks (vm, action, hash) {\r\n                if (!hash) return\r\n                var handlers, key, i, j\r\n                for (key in hash) {\r\n                    handlers = hash[key]\r\n                    if (_.isArray(handlers)) {\r\n                        for (i = 0, j = handlers.length; i < j; i++) {\r\n                            register(vm, action, key, handlers[i])\r\n                        }\r\n                    } else {\r\n                        register(vm, action, key, handlers)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper to register an event/watch callback.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {String} action\r\n             * @param {String} key\r\n             * @param {Function|String|Object} handler\r\n             * @param {Object} [options]\r\n             */\r\n\r\n            function register (vm, action, key, handler, options) {\r\n                var type = typeof handler\r\n                if (type === 'function') {\r\n                    vm[action](key, handler, options)\r\n                } else if (type === 'string') {\r\n                    var methods = vm.$options.methods\r\n                    var method = methods && methods[handler]\r\n                    if (method) {\r\n                        vm[action](key, method, options)\r\n                    } else {\r\n                        (\"development\") !== 'production' && _.warn(\r\n                            'Unknown method: \"' + handler + '\" when ' +\r\n                            'registering callback for ' + action +\r\n                            ': \"' + key + '\".'\r\n                        )\r\n                    }\r\n                } else if (handler && type === 'object') {\r\n                    register(vm, action, key, handler.handler, handler)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Setup recursive attached/detached calls\r\n             */\r\n\r\n            exports._initDOMHooks = function () {\r\n                this.$on('hook:attached', onAttached)\r\n                this.$on('hook:detached', onDetached)\r\n            }\r\n\r\n            /**\r\n             * Callback to recursively call attached hook on children\r\n             */\r\n\r\n            function onAttached () {\r\n                if (!this._isAttached) {\r\n                    this._isAttached = true\r\n                    this.$children.forEach(callAttach)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Iterator to call attached hook\r\n             *\r\n             * @param {Vue} child\r\n             */\r\n\r\n            function callAttach (child) {\r\n                if (!child._isAttached && inDoc(child.$el)) {\r\n                    child._callHook('attached')\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Callback to recursively call detached hook on children\r\n             */\r\n\r\n            function onDetached () {\r\n                if (this._isAttached) {\r\n                    this._isAttached = false\r\n                    this.$children.forEach(callDetach)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Iterator to call detached hook\r\n             *\r\n             * @param {Vue} child\r\n             */\r\n\r\n            function callDetach (child) {\r\n                if (child._isAttached && !inDoc(child.$el)) {\r\n                    child._callHook('detached')\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Trigger all handlers for a hook\r\n             *\r\n             * @param {String} hook\r\n             */\r\n\r\n            exports._callHook = function (hook) {\r\n                var handlers = this.$options[hook]\r\n                if (handlers) {\r\n                    for (var i = 0, j = handlers.length; i < j; i++) {\r\n                        handlers[i].call(this)\r\n                    }\r\n                }\r\n                this.$emit('hook:' + hook)\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 54 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var compiler = __webpack_require__(10)\r\n            var Observer = __webpack_require__(55)\r\n            var Dep = __webpack_require__(18)\r\n            var Watcher = __webpack_require__(17)\r\n\r\n            /**\r\n             * Setup the scope of an instance, which contains:\r\n             * - observed data\r\n             * - computed properties\r\n             * - user methods\r\n             * - meta properties\r\n             */\r\n\r\n            exports._initScope = function () {\r\n                this._initProps()\r\n                this._initMeta()\r\n                this._initMethods()\r\n                this._initData()\r\n                this._initComputed()\r\n            }\r\n\r\n            /**\r\n             * Initialize props.\r\n             */\r\n\r\n            exports._initProps = function () {\r\n                var options = this.$options\r\n                var el = options.el\r\n                var props = options.props\r\n                if (props && !el) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        'Props will not be compiled if no `el` option is ' +\r\n                        'provided at instantiation.'\r\n                    )\r\n                }\r\n                // make sure to convert string selectors into element now\r\n                el = options.el = _.query(el)\r\n                this._propsUnlinkFn = el && el.nodeType === 1 && props\r\n                    ? compiler.compileAndLinkProps(\r\n                    this, el, props\r\n                )\r\n                    : null\r\n            }\r\n\r\n            /**\r\n             * Initialize the data.\r\n             */\r\n\r\n            exports._initData = function () {\r\n                var propsData = this._data\r\n                var optionsDataFn = this.$options.data\r\n                var optionsData = optionsDataFn && optionsDataFn()\r\n                if (optionsData) {\r\n                    this._data = optionsData\r\n                    for (var prop in propsData) {\r\n                        if (\r\n                            this._props[prop].raw !== null ||\r\n                            !optionsData.hasOwnProperty(prop)\r\n                        ) {\r\n                            optionsData.$set(prop, propsData[prop])\r\n                        }\r\n                    }\r\n                }\r\n                var data = this._data\r\n                // proxy data on instance\r\n                var keys = Object.keys(data)\r\n                var i, key\r\n                i = keys.length\r\n                while (i--) {\r\n                    key = keys[i]\r\n                    if (!_.isReserved(key)) {\r\n                        this._proxy(key)\r\n                    }\r\n                }\r\n                // observe data\r\n                Observer.create(data, this)\r\n            }\r\n\r\n            /**\r\n             * Swap the isntance's $data. Called in $data's setter.\r\n             *\r\n             * @param {Object} newData\r\n             */\r\n\r\n            exports._setData = function (newData) {\r\n                newData = newData || {}\r\n                var oldData = this._data\r\n                this._data = newData\r\n                var keys, key, i\r\n                // copy props.\r\n                // this should only happen during a v-repeat of component\r\n                // that also happens to have compiled props.\r\n                var props = this.$options.props\r\n                if (props) {\r\n                    i = props.length\r\n                    while (i--) {\r\n                        key = props[i].name\r\n                        if (key !== '$data' && !newData.hasOwnProperty(key)) {\r\n                            newData.$set(key, oldData[key])\r\n                        }\r\n                    }\r\n                }\r\n                // unproxy keys not present in new data\r\n                keys = Object.keys(oldData)\r\n                i = keys.length\r\n                while (i--) {\r\n                    key = keys[i]\r\n                    if (!_.isReserved(key) && !(key in newData)) {\r\n                        this._unproxy(key)\r\n                    }\r\n                }\r\n                // proxy keys not already proxied,\r\n                // and trigger change for changed values\r\n                keys = Object.keys(newData)\r\n                i = keys.length\r\n                while (i--) {\r\n                    key = keys[i]\r\n                    if (!this.hasOwnProperty(key) && !_.isReserved(key)) {\r\n                        // new property\r\n                        this._proxy(key)\r\n                    }\r\n                }\r\n                oldData.__ob__.removeVm(this)\r\n                Observer.create(newData, this)\r\n                this._digest()\r\n            }\r\n\r\n            /**\r\n             * Proxy a property, so that\r\n             * vm.prop === vm._data.prop\r\n             *\r\n             * @param {String} key\r\n             */\r\n\r\n            exports._proxy = function (key) {\r\n                // need to store ref to self here\r\n                // because these getter/setters might\r\n                // be called by child instances!\r\n                var self = this\r\n                Object.defineProperty(self, key, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get: function proxyGetter () {\r\n                        return self._data[key]\r\n                    },\r\n                    set: function proxySetter (val) {\r\n                        self._data[key] = val\r\n                    }\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Unproxy a property.\r\n             *\r\n             * @param {String} key\r\n             */\r\n\r\n            exports._unproxy = function (key) {\r\n                delete this[key]\r\n            }\r\n\r\n            /**\r\n             * Force update on every watcher in scope.\r\n             */\r\n\r\n            exports._digest = function () {\r\n                var i = this._watchers.length\r\n                while (i--) {\r\n                    this._watchers[i].update(true) // shallow updates\r\n                }\r\n                var children = this.$children\r\n                i = children.length\r\n                while (i--) {\r\n                    var child = children[i]\r\n                    if (child.$options.inherit) {\r\n                        child._digest()\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Setup computed properties. They are essentially\r\n             * special getter/setters\r\n             */\r\n\r\n            function noop () {}\r\n            exports._initComputed = function () {\r\n                var computed = this.$options.computed\r\n                if (computed) {\r\n                    for (var key in computed) {\r\n                        var userDef = computed[key]\r\n                        var def = {\r\n                            enumerable: true,\r\n                            configurable: true\r\n                        }\r\n                        if (typeof userDef === 'function') {\r\n                            def.get = makeComputedGetter(userDef, this)\r\n                            def.set = noop\r\n                        } else {\r\n                            def.get = userDef.get\r\n                                ? userDef.cache !== false\r\n                                ? makeComputedGetter(userDef.get, this)\r\n                                : _.bind(userDef.get, this)\r\n                                : noop\r\n                            def.set = userDef.set\r\n                                ? _.bind(userDef.set, this)\r\n                                : noop\r\n                        }\r\n                        Object.defineProperty(this, key, def)\r\n                    }\r\n                }\r\n            }\r\n\r\n            function makeComputedGetter (getter, owner) {\r\n                var watcher = new Watcher(owner, getter, null, {\r\n                    lazy: true\r\n                })\r\n                return function computedGetter () {\r\n                    if (watcher.dirty) {\r\n                        watcher.evaluate()\r\n                    }\r\n                    if (Dep.target) {\r\n                        watcher.depend()\r\n                    }\r\n                    return watcher.value\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Setup instance methods. Methods must be bound to the\r\n             * instance since they might be called by children\r\n             * inheriting them.\r\n             */\r\n\r\n            exports._initMethods = function () {\r\n                var methods = this.$options.methods\r\n                if (methods) {\r\n                    for (var key in methods) {\r\n                        this[key] = _.bind(methods[key], this)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Initialize meta information like $index, $key & $value.\r\n             */\r\n\r\n            exports._initMeta = function () {\r\n                var metas = this.$options._meta\r\n                if (metas) {\r\n                    for (var key in metas) {\r\n                        this._defineMeta(key, metas[key])\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Define a meta property, e.g $index, $key, $value\r\n             * which only exists on the vm instance but not in $data.\r\n             *\r\n             * @param {String} key\r\n             * @param {*} value\r\n             */\r\n\r\n            exports._defineMeta = function (key, value) {\r\n                var dep = new Dep()\r\n                Object.defineProperty(this, key, {\r\n                    get: function metaGetter () {\r\n                        if (Dep.target) {\r\n                            dep.depend()\r\n                        }\r\n                        return value\r\n                    },\r\n                    set: function metaSetter (val) {\r\n                        if (val !== value) {\r\n                            value = val\r\n                            dep.notify()\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 55 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var Dep = __webpack_require__(18)\r\n            var arrayMethods = __webpack_require__(56)\r\n            var arrayKeys = Object.getOwnPropertyNames(arrayMethods)\r\n            __webpack_require__(57)\r\n\r\n            /**\r\n             * Observer class that are attached to each observed\r\n             * object. Once attached, the observer converts target\r\n             * object's property keys into getter/setters that\r\n             * collect dependencies and dispatches updates.\r\n             *\r\n             * @param {Array|Object} value\r\n             * @constructor\r\n             */\r\n\r\n            function Observer (value) {\r\n                this.value = value\r\n                this.dep = new Dep()\r\n                _.define(value, '__ob__', this)\r\n                if (_.isArray(value)) {\r\n                    var augment = config.proto && _.hasProto\r\n                        ? protoAugment\r\n                        : copyAugment\r\n                    augment(value, arrayMethods, arrayKeys)\r\n                    this.observeArray(value)\r\n                } else {\r\n                    this.walk(value)\r\n                }\r\n            }\r\n\r\n            // Static methods\r\n\r\n            /**\r\n             * Attempt to create an observer instance for a value,\r\n             * returns the new observer if successfully observed,\r\n             * or the existing observer if the value already has one.\r\n             *\r\n             * @param {*} value\r\n             * @param {Vue} [vm]\r\n             * @return {Observer|undefined}\r\n             * @static\r\n             */\r\n\r\n            Observer.create = function (value, vm) {\r\n                var ob\r\n                if (\r\n                    value &&\r\n                    value.hasOwnProperty('__ob__') &&\r\n                    value.__ob__ instanceof Observer\r\n                ) {\r\n                    ob = value.__ob__\r\n                } else if (\r\n                    (_.isArray(value) || _.isPlainObject(value)) &&\r\n                    !Object.isFrozen(value) &&\r\n                    !value._isVue\r\n                ) {\r\n                    ob = new Observer(value)\r\n                }\r\n                if (ob && vm) {\r\n                    ob.addVm(vm)\r\n                }\r\n                return ob\r\n            }\r\n\r\n            // Instance methods\r\n\r\n            /**\r\n             * Walk through each property and convert them into\r\n             * getter/setters. This method should only be called when\r\n             * value type is Object. Properties prefixed with `$` or `_`\r\n             * and accessor properties are ignored.\r\n             *\r\n             * @param {Object} obj\r\n             */\r\n\r\n            Observer.prototype.walk = function (obj) {\r\n                var keys = Object.keys(obj)\r\n                var i = keys.length\r\n                while (i--) {\r\n                    this.convert(keys[i], obj[keys[i]])\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Try to carete an observer for a child value,\r\n             * and if value is array, link dep to the array.\r\n             *\r\n             * @param {*} val\r\n             * @return {Dep|undefined}\r\n             */\r\n\r\n            Observer.prototype.observe = function (val) {\r\n                return Observer.create(val)\r\n            }\r\n\r\n            /**\r\n             * Observe a list of Array items.\r\n             *\r\n             * @param {Array} items\r\n             */\r\n\r\n            Observer.prototype.observeArray = function (items) {\r\n                var i = items.length\r\n                while (i--) {\r\n                    var ob = this.observe(items[i])\r\n                    if (ob) {\r\n                        (ob.parents || (ob.parents = [])).push(this)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Remove self from the parent list of removed objects.\r\n             *\r\n             * @param {Array} items\r\n             */\r\n\r\n            Observer.prototype.unobserveArray = function (items) {\r\n                var i = items.length\r\n                while (i--) {\r\n                    var ob = items[i] && items[i].__ob__\r\n                    if (ob) {\r\n                        ob.parents.$remove(this)\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Notify self dependency, and also parent Array dependency\r\n             * if any.\r\n             */\r\n\r\n            Observer.prototype.notify = function () {\r\n                this.dep.notify()\r\n                var parents = this.parents\r\n                if (parents) {\r\n                    var i = parents.length\r\n                    while (i--) {\r\n                        parents[i].notify()\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Convert a property into getter/setter so we can emit\r\n             * the events when the property is accessed/changed.\r\n             *\r\n             * @param {String} key\r\n             * @param {*} val\r\n             */\r\n\r\n            Observer.prototype.convert = function (key, val) {\r\n                var ob = this\r\n                var childOb = ob.observe(val)\r\n                var dep = new Dep()\r\n                Object.defineProperty(ob.value, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: function () {\r\n                        if (Dep.target) {\r\n                            dep.depend()\r\n                            if (childOb) {\r\n                                childOb.dep.depend()\r\n                            }\r\n                        }\r\n                        return val\r\n                    },\r\n                    set: function (newVal) {\r\n                        if (newVal === val) return\r\n                        val = newVal\r\n                        childOb = ob.observe(newVal)\r\n                        dep.notify()\r\n                    }\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Add an owner vm, so that when $add/$delete mutations\r\n             * happen we can notify owner vms to proxy the keys and\r\n             * digest the watchers. This is only called when the object\r\n             * is observed as an instance's root $data.\r\n             *\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            Observer.prototype.addVm = function (vm) {\r\n                (this.vms || (this.vms = [])).push(vm)\r\n            }\r\n\r\n            /**\r\n             * Remove an owner vm. This is called when the object is\r\n             * swapped out as an instance's $data object.\r\n             *\r\n             * @param {Vue} vm\r\n             */\r\n\r\n            Observer.prototype.removeVm = function (vm) {\r\n                this.vms.$remove(vm)\r\n            }\r\n\r\n            // helpers\r\n\r\n            /**\r\n             * Augment an target Object or Array by intercepting\r\n             * the prototype chain using __proto__\r\n             *\r\n             * @param {Object|Array} target\r\n             * @param {Object} proto\r\n             */\r\n\r\n            function protoAugment (target, src) {\r\n                target.__proto__ = src\r\n            }\r\n\r\n            /**\r\n             * Augment an target Object or Array by defining\r\n             * hidden properties.\r\n             *\r\n             * @param {Object|Array} target\r\n             * @param {Object} proto\r\n             */\r\n\r\n            function copyAugment (target, src, keys) {\r\n                var i = keys.length\r\n                var key\r\n                while (i--) {\r\n                    key = keys[i]\r\n                    _.define(target, key, src[key])\r\n                }\r\n            }\r\n\r\n            module.exports = Observer\r\n\r\n\r\n            /***/ },\r\n        /* 56 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var arrayProto = Array.prototype\r\n            var arrayMethods = Object.create(arrayProto)\r\n\r\n            /**\r\n             * Intercept mutating methods and emit events\r\n             */\r\n\r\n                ;[\r\n                'push',\r\n                'pop',\r\n                'shift',\r\n                'unshift',\r\n                'splice',\r\n                'sort',\r\n                'reverse'\r\n            ]\r\n                .forEach(function (method) {\r\n                    // cache original method\r\n                    var original = arrayProto[method]\r\n                    _.define(arrayMethods, method, function mutator () {\r\n                        // avoid leaking arguments:\r\n                        // http://jsperf.com/closure-with-arguments\r\n                        var i = arguments.length\r\n                        var args = new Array(i)\r\n                        while (i--) {\r\n                            args[i] = arguments[i]\r\n                        }\r\n                        var result = original.apply(this, args)\r\n                        var ob = this.__ob__\r\n                        var inserted, removed\r\n                        switch (method) {\r\n                            case 'push':\r\n                                inserted = args\r\n                                break\r\n                            case 'unshift':\r\n                                inserted = args\r\n                                break\r\n                            case 'splice':\r\n                                inserted = args.slice(2)\r\n                                removed = result\r\n                                break\r\n                            case 'pop':\r\n                            case 'shift':\r\n                                removed = [result]\r\n                                break\r\n                        }\r\n                        if (inserted) ob.observeArray(inserted)\r\n                        if (removed) ob.unobserveArray(removed)\r\n                        // notify change\r\n                        ob.notify()\r\n                        return result\r\n                    })\r\n                })\r\n\r\n            /**\r\n             * Swap the element at the given index with a new value\r\n             * and emits corresponding event.\r\n             *\r\n             * @param {Number} index\r\n             * @param {*} val\r\n             * @return {*} - replaced element\r\n             */\r\n\r\n            _.define(\r\n                arrayProto,\r\n                '$set',\r\n                function $set (index, val) {\r\n                    if (index >= this.length) {\r\n                        this.length = index + 1\r\n                    }\r\n                    return this.splice(index, 1, val)[0]\r\n                }\r\n            )\r\n\r\n            /**\r\n             * Convenience method to remove the element at given index.\r\n             *\r\n             * @param {Number} index\r\n             * @param {*} val\r\n             */\r\n\r\n            _.define(\r\n                arrayProto,\r\n                '$remove',\r\n                function $remove (index) {\r\n                    /* istanbul ignore if */\r\n                    if (!this.length) return\r\n                    if (typeof index !== 'number') {\r\n                        index = _.indexOf(this, index)\r\n                    }\r\n                    if (index > -1) {\r\n                        return this.splice(index, 1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            module.exports = arrayMethods\r\n\r\n\r\n            /***/ },\r\n        /* 57 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var objProto = Object.prototype\r\n\r\n            /**\r\n             * Add a new property to an observed object\r\n             * and emits corresponding event\r\n             *\r\n             * @param {String} key\r\n             * @param {*} val\r\n             * @public\r\n             */\r\n\r\n            _.define(\r\n                objProto,\r\n                '$add',\r\n                function $add (key, val) {\r\n                    if (this.hasOwnProperty(key)) return\r\n                    var ob = this.__ob__\r\n                    if (!ob || _.isReserved(key)) {\r\n                        this[key] = val\r\n                        return\r\n                    }\r\n                    ob.convert(key, val)\r\n                    ob.notify()\r\n                    if (ob.vms) {\r\n                        var i = ob.vms.length\r\n                        while (i--) {\r\n                            var vm = ob.vms[i]\r\n                            vm._proxy(key)\r\n                            vm._digest()\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n\r\n            /**\r\n             * Set a property on an observed object, calling add to\r\n             * ensure the property is observed.\r\n             *\r\n             * @param {String} key\r\n             * @param {*} val\r\n             * @public\r\n             */\r\n\r\n            _.define(\r\n                objProto,\r\n                '$set',\r\n                function $set (key, val) {\r\n                    this.$add(key, val)\r\n                    this[key] = val\r\n                }\r\n            )\r\n\r\n            /**\r\n             * Deletes a property from an observed object\r\n             * and emits corresponding event\r\n             *\r\n             * @param {String} key\r\n             * @public\r\n             */\r\n\r\n            _.define(\r\n                objProto,\r\n                '$delete',\r\n                function $delete (key) {\r\n                    if (!this.hasOwnProperty(key)) return\r\n                    delete this[key]\r\n                    var ob = this.__ob__\r\n                    if (!ob || _.isReserved(key)) {\r\n                        return\r\n                    }\r\n                    ob.notify()\r\n                    if (ob.vms) {\r\n                        var i = ob.vms.length\r\n                        while (i--) {\r\n                            var vm = ob.vms[i]\r\n                            vm._unproxy(key)\r\n                            vm._digest()\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n\r\n\r\n            /***/ },\r\n        /* 58 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var Directive = __webpack_require__(59)\r\n            var compiler = __webpack_require__(10)\r\n\r\n            /**\r\n             * Transclude, compile and link element.\r\n             *\r\n             * If a pre-compiled linker is available, that means the\r\n             * passed in element will be pre-transcluded and compiled\r\n             * as well - all we need to do is to call the linker.\r\n             *\r\n             * Otherwise we need to call transclude/compile/link here.\r\n             *\r\n             * @param {Element} el\r\n             * @return {Element}\r\n             */\r\n\r\n            exports._compile = function (el) {\r\n                var options = this.$options\r\n                var host = this._host\r\n                if (options._linkFn) {\r\n                    // pre-transcluded with linker, just use it\r\n                    this._initElement(el)\r\n                    this._unlinkFn = options._linkFn(this, el, host)\r\n                } else {\r\n                    // transclude and init element\r\n                    // transclude can potentially replace original\r\n                    // so we need to keep reference; this step also injects\r\n                    // the template and caches the original attributes\r\n                    // on the container node and replacer node.\r\n                    var original = el\r\n                    el = compiler.transclude(el, options)\r\n                    this._initElement(el)\r\n\r\n                    // root is always compiled per-instance, because\r\n                    // container attrs and props can be different every time.\r\n                    var rootLinker = compiler.compileRoot(el, options)\r\n\r\n                    // compile and link the rest\r\n                    var contentLinkFn\r\n                    var ctor = this.constructor\r\n                    // component compilation can be cached\r\n                    // as long as it's not using inline-template\r\n                    if (options._linkerCachable) {\r\n                        contentLinkFn = ctor.linker\r\n                        if (!contentLinkFn) {\r\n                            contentLinkFn = ctor.linker = compiler.compile(el, options)\r\n                        }\r\n                    }\r\n\r\n                    // link phase\r\n                    var rootUnlinkFn = rootLinker(this, el)\r\n                    var contentUnlinkFn = contentLinkFn\r\n                        ? contentLinkFn(this, el)\r\n                        : compiler.compile(el, options)(this, el, host)\r\n\r\n                    // register composite unlink function\r\n                    // to be called during instance destruction\r\n                    this._unlinkFn = function () {\r\n                        rootUnlinkFn()\r\n                        // passing destroying: true to avoid searching and\r\n                        // splicing the directives\r\n                        contentUnlinkFn(true)\r\n                    }\r\n\r\n                    // finally replace original\r\n                    if (options.replace) {\r\n                        _.replace(original, el)\r\n                    }\r\n                }\r\n                return el\r\n            }\r\n\r\n            /**\r\n             * Initialize instance element. Called in the public\r\n             * $mount() method.\r\n             *\r\n             * @param {Element} el\r\n             */\r\n\r\n            exports._initElement = function (el) {\r\n                if (el instanceof DocumentFragment) {\r\n                    this._isFragment = true\r\n                    this.$el = this._fragmentStart = el.firstChild\r\n                    this._fragmentEnd = el.lastChild\r\n                    // set persisted text anchors to empty\r\n                    if (this._fragmentStart.nodeType === 3) {\r\n                        this._fragmentStart.data = this._fragmentEnd.data = ''\r\n                    }\r\n                    this._blockFragment = el\r\n                } else {\r\n                    this.$el = el\r\n                }\r\n                this.$el.__vue__ = this\r\n                this._callHook('beforeCompile')\r\n            }\r\n\r\n            /**\r\n             * Create and bind a directive to an element.\r\n             *\r\n             * @param {String} name - directive name\r\n             * @param {Node} node   - target node\r\n             * @param {Object} desc - parsed directive descriptor\r\n             * @param {Object} def  - directive definition object\r\n             * @param {Vue|undefined} host - transclusion host component\r\n             */\r\n\r\n            exports._bindDir = function (name, node, desc, def, host) {\r\n                this._directives.push(\r\n                    new Directive(name, node, this, desc, def, host)\r\n                )\r\n            }\r\n\r\n            /**\r\n             * Teardown an instance, unobserves the data, unbind all the\r\n             * directives, turn off all the event listeners, etc.\r\n             *\r\n             * @param {Boolean} remove - whether to remove the DOM node.\r\n             * @param {Boolean} deferCleanup - if true, defer cleanup to\r\n             *                                 be called later\r\n             */\r\n\r\n            exports._destroy = function (remove, deferCleanup) {\r\n                if (this._isBeingDestroyed) {\r\n                    return\r\n                }\r\n                this._callHook('beforeDestroy')\r\n                this._isBeingDestroyed = true\r\n                var i\r\n                // remove self from parent. only necessary\r\n                // if parent is not being destroyed as well.\r\n                var parent = this.$parent\r\n                if (parent && !parent._isBeingDestroyed) {\r\n                    parent.$children.$remove(this)\r\n                }\r\n                // destroy all children.\r\n                i = this.$children.length\r\n                while (i--) {\r\n                    this.$children[i].$destroy()\r\n                }\r\n                // teardown props\r\n                if (this._propsUnlinkFn) {\r\n                    this._propsUnlinkFn()\r\n                }\r\n                // teardown all directives. this also tearsdown all\r\n                // directive-owned watchers.\r\n                if (this._unlinkFn) {\r\n                    this._unlinkFn()\r\n                }\r\n                i = this._watchers.length\r\n                while (i--) {\r\n                    this._watchers[i].teardown()\r\n                }\r\n                // remove reference to self on $el\r\n                if (this.$el) {\r\n                    this.$el.__vue__ = null\r\n                }\r\n                // remove DOM element\r\n                var self = this\r\n                if (remove && this.$el) {\r\n                    this.$remove(function () {\r\n                        self._cleanup()\r\n                    })\r\n                } else if (!deferCleanup) {\r\n                    this._cleanup()\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Clean up to ensure garbage collection.\r\n             * This is called after the leave transition if there\r\n             * is any.\r\n             */\r\n\r\n            exports._cleanup = function () {\r\n                // remove reference from data ob\r\n                // frozen object may not have observer.\r\n                if (this._data.__ob__) {\r\n                    this._data.__ob__.removeVm(this)\r\n                }\r\n                // Clean up references to private properties and other\r\n                // instances. preserve reference to _data so that proxy\r\n                // accessors still work. The only potential side effect\r\n                // here is that mutating the instance after it's destroyed\r\n                // may affect the state of other components that are still\r\n                // observing the same object, but that seems to be a\r\n                // reasonable responsibility for the user rather than\r\n                // always throwing an error on them.\r\n                this.$el =\r\n                    this.$parent =\r\n                        this.$root =\r\n                            this.$children =\r\n                                this._watchers =\r\n                                    this._directives = null\r\n                // call the last hook...\r\n                this._isDestroyed = true\r\n                this._callHook('destroyed')\r\n                // turn off all instance listeners.\r\n                this.$off()\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 59 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var config = __webpack_require__(5)\r\n            var Watcher = __webpack_require__(17)\r\n            var textParser = __webpack_require__(13)\r\n            var expParser = __webpack_require__(19)\r\n            function noop () {}\r\n\r\n            /**\r\n             * A directive links a DOM element with a piece of data,\r\n             * which is the result of evaluating an expression.\r\n             * It registers a watcher with the expression and calls\r\n             * the DOM update function when a change is triggered.\r\n             *\r\n             * @param {String} name\r\n             * @param {Node} el\r\n             * @param {Vue} vm\r\n             * @param {Object} descriptor\r\n             *                 - {String} expression\r\n             *                 - {String} [arg]\r\n             *                 - {Array<Object>} [filters]\r\n             * @param {Object} def - directive definition object\r\n             * @param {Vue|undefined} host - transclusion host target\r\n             * @constructor\r\n             */\r\n\r\n            function Directive (name, el, vm, descriptor, def, host) {\r\n                // public\r\n                this.name = name\r\n                this.el = el\r\n                this.vm = vm\r\n                // copy descriptor props\r\n                this.raw = descriptor.raw\r\n                this.expression = descriptor.expression\r\n                this.arg = descriptor.arg\r\n                this.filters = descriptor.filters\r\n                // private\r\n                this._descriptor = descriptor\r\n                this._host = host\r\n                this._locked = false\r\n                this._bound = false\r\n                this._listeners = null\r\n                // init\r\n                this._bind(def)\r\n            }\r\n\r\n            /**\r\n             * Initialize the directive, mixin definition properties,\r\n             * setup the watcher, call definition bind() and update()\r\n             * if present.\r\n             *\r\n             * @param {Object} def\r\n             */\r\n\r\n            Directive.prototype._bind = function (def) {\r\n                if (\r\n                    (this.name !== 'cloak' || this.vm._isCompiled) &&\r\n                    this.el && this.el.removeAttribute\r\n                ) {\r\n                    this.el.removeAttribute(config.prefix + this.name)\r\n                }\r\n                if (typeof def === 'function') {\r\n                    this.update = def\r\n                } else {\r\n                    _.extend(this, def)\r\n                }\r\n                this._watcherExp = this.expression\r\n                this._checkDynamicLiteral()\r\n                if (this.bind) {\r\n                    this.bind()\r\n                }\r\n                if (this._watcherExp &&\r\n                    (this.update || this.twoWay) &&\r\n                    (!this.isLiteral || this._isDynamicLiteral) &&\r\n                    !this._checkStatement()) {\r\n                    // wrapped updater for context\r\n                    var dir = this\r\n                    if (this.update) {\r\n                        this._update = function (val, oldVal) {\r\n                            if (!dir._locked) {\r\n                                dir.update(val, oldVal)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this._update = noop\r\n                    }\r\n                    // pre-process hook called before the value is piped\r\n                    // through the filters. used in v-repeat.\r\n                    var preProcess = this._preProcess\r\n                        ? _.bind(this._preProcess, this)\r\n                        : null\r\n                    var watcher = this._watcher = new Watcher(\r\n                        this.vm,\r\n                        this._watcherExp,\r\n                        this._update, // callback\r\n                        {\r\n                            filters: this.filters,\r\n                            twoWay: this.twoWay,\r\n                            deep: this.deep,\r\n                            preProcess: preProcess\r\n                        }\r\n                    )\r\n                    if (this._initValue != null) {\r\n                        watcher.set(this._initValue)\r\n                    } else if (this.update) {\r\n                        this.update(watcher.value)\r\n                    }\r\n                }\r\n                this._bound = true\r\n            }\r\n\r\n            /**\r\n             * check if this is a dynamic literal binding.\r\n             *\r\n             * e.g. v-component=\"{{currentView}}\"\r\n             */\r\n\r\n            Directive.prototype._checkDynamicLiteral = function () {\r\n                var expression = this.expression\r\n                if (expression && this.isLiteral) {\r\n                    var tokens = textParser.parse(expression)\r\n                    if (tokens) {\r\n                        var exp = textParser.tokensToExp(tokens)\r\n                        this.expression = this.vm.$get(exp)\r\n                        this._watcherExp = exp\r\n                        this._isDynamicLiteral = true\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check if the directive is a function caller\r\n             * and if the expression is a callable one. If both true,\r\n             * we wrap up the expression and use it as the event\r\n             * handler.\r\n             *\r\n             * e.g. v-on=\"click: a++\"\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n\r\n            Directive.prototype._checkStatement = function () {\r\n                var expression = this.expression\r\n                if (\r\n                    expression && this.acceptStatement &&\r\n                    !expParser.isSimplePath(expression)\r\n                ) {\r\n                    var fn = expParser.parse(expression).get\r\n                    var vm = this.vm\r\n                    var handler = function () {\r\n                        fn.call(vm, vm)\r\n                    }\r\n                    if (this.filters) {\r\n                        handler = vm._applyFilters(handler, null, this.filters)\r\n                    }\r\n                    this.update(handler)\r\n                    return true\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Check for an attribute directive param, e.g. lazy\r\n             *\r\n             * @param {String} name\r\n             * @return {String}\r\n             */\r\n\r\n            Directive.prototype._checkParam = function (name) {\r\n                var param = this.el.getAttribute(name)\r\n                if (param !== null) {\r\n                    this.el.removeAttribute(name)\r\n                    param = this.vm.$interpolate(param)\r\n                }\r\n                return param\r\n            }\r\n\r\n            /**\r\n             * Set the corresponding value with the setter.\r\n             * This should only be used in two-way directives\r\n             * e.g. v-model.\r\n             *\r\n             * @param {*} value\r\n             * @public\r\n             */\r\n\r\n            Directive.prototype.set = function (value) {\r\n                /* istanbul ignore else */\r\n                if (this.twoWay) {\r\n                    this._withLock(function () {\r\n                        this._watcher.set(value)\r\n                    })\r\n                } else if (true) {\r\n                    _.warn(\r\n                        'Directive.set() can only be used inside twoWay' +\r\n                        'directives.'\r\n                    )\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Execute a function while preventing that function from\r\n             * triggering updates on this directive instance.\r\n             *\r\n             * @param {Function} fn\r\n             */\r\n\r\n            Directive.prototype._withLock = function (fn) {\r\n                var self = this\r\n                self._locked = true\r\n                fn.call(self)\r\n                _.nextTick(function () {\r\n                    self._locked = false\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Convenience method that attaches a DOM event listener\r\n             * to the directive element and autometically tears it down\r\n             * during unbind.\r\n             *\r\n             * @param {String} event\r\n             * @param {Function} handler\r\n             */\r\n\r\n            Directive.prototype.on = function (event, handler) {\r\n                _.on(this.el, event, handler)\r\n                ;(this._listeners || (this._listeners = []))\r\n                    .push([event, handler])\r\n            }\r\n\r\n            /**\r\n             * Teardown the watcher and call unbind.\r\n             */\r\n\r\n            Directive.prototype._teardown = function () {\r\n                if (this._bound) {\r\n                    this._bound = false\r\n                    if (this.unbind) {\r\n                        this.unbind()\r\n                    }\r\n                    if (this._watcher) {\r\n                        this._watcher.teardown()\r\n                    }\r\n                    var listeners = this._listeners\r\n                    if (listeners) {\r\n                        for (var i = 0; i < listeners.length; i++) {\r\n                            _.off(this.el, listeners[i][0], listeners[i][1])\r\n                        }\r\n                    }\r\n                    this.vm = this.el =\r\n                        this._watcher = this._listeners = null\r\n                }\r\n            }\r\n\r\n            module.exports = Directive\r\n\r\n\r\n            /***/ },\r\n        /* 60 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Apply a list of filter (descriptors) to a value.\r\n             * Using plain for loops here because this will be called in\r\n             * the getter of any watcher with filters so it is very\r\n             * performance sensitive.\r\n             *\r\n             * @param {*} value\r\n             * @param {*} [oldValue]\r\n             * @param {Array} filters\r\n             * @param {Boolean} write\r\n             * @return {*}\r\n             */\r\n\r\n            exports._applyFilters = function (value, oldValue, filters, write) {\r\n                var filter, fn, args, arg, offset, i, l, j, k\r\n                for (i = 0, l = filters.length; i < l; i++) {\r\n                    filter = filters[i]\r\n                    fn = _.resolveAsset(this.$options, 'filters', filter.name)\r\n                    if (true) {\r\n                        _.assertAsset(fn, 'filter', filter.name)\r\n                    }\r\n                    if (!fn) continue\r\n                    fn = write ? fn.write : (fn.read || fn)\r\n                    if (typeof fn !== 'function') continue\r\n                    args = write ? [value, oldValue] : [value]\r\n                    offset = write ? 2 : 1\r\n                    if (filter.args) {\r\n                        for (j = 0, k = filter.args.length; j < k; j++) {\r\n                            arg = filter.args[j]\r\n                            args[j + offset] = arg.dynamic\r\n                                ? this.$get(arg.value)\r\n                                : arg.value\r\n                        }\r\n                    }\r\n                    value = fn.apply(this, args)\r\n                }\r\n                return value\r\n            }\r\n\r\n            /**\r\n             * Resolve a component, depending on whether the component\r\n             * is defined normally or using an async factory function.\r\n             * Resolves synchronously if already resolved, otherwise\r\n             * resolves asynchronously and caches the resolved\r\n             * constructor on the factory.\r\n             *\r\n             * @param {String} id\r\n             * @param {Function} cb\r\n             */\r\n\r\n            exports._resolveComponent = function (id, cb) {\r\n                var factory = _.resolveAsset(this.$options, 'components', id)\r\n                if (true) {\r\n                    _.assertAsset(factory, 'component', id)\r\n                }\r\n                if (!factory) {\r\n                    return\r\n                }\r\n                // async component factory\r\n                if (!factory.options) {\r\n                    if (factory.resolved) {\r\n                        // cached\r\n                        cb(factory.resolved)\r\n                    } else if (factory.requested) {\r\n                        // pool callbacks\r\n                        factory.pendingCallbacks.push(cb)\r\n                    } else {\r\n                        factory.requested = true\r\n                        var cbs = factory.pendingCallbacks = [cb]\r\n                        factory(function resolve (res) {\r\n                            if (_.isPlainObject(res)) {\r\n                                res = _.Vue.extend(res)\r\n                            }\r\n                            // cache resolved\r\n                            factory.resolved = res\r\n                            // invoke callbacks\r\n                            for (var i = 0, l = cbs.length; i < l; i++) {\r\n                                cbs[i](res)\r\n                            }\r\n                        }, function reject (reason) {\r\n                            (\"development\") !== 'production' && _.warn(\r\n                                'Failed to resolve async component: ' + id + '. ' +\r\n                                (reason ? '\\nReason: ' + reason : '')\r\n                            )\r\n                        })\r\n                    }\r\n                } else {\r\n                    // normal component\r\n                    cb(factory)\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 61 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var Watcher = __webpack_require__(17)\r\n            var Path = __webpack_require__(20)\r\n            var textParser = __webpack_require__(13)\r\n            var dirParser = __webpack_require__(15)\r\n            var expParser = __webpack_require__(19)\r\n            var filterRE = /[^|]\\|[^|]/\r\n\r\n            /**\r\n             * Get the value from an expression on this vm.\r\n             *\r\n             * @param {String} exp\r\n             * @return {*}\r\n             */\r\n\r\n            exports.$get = function (exp) {\r\n                var res = expParser.parse(exp)\r\n                if (res) {\r\n                    try {\r\n                        return res.get.call(this, this)\r\n                    } catch (e) {}\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Set the value from an expression on this vm.\r\n             * The expression must be a valid left-hand\r\n             * expression in an assignment.\r\n             *\r\n             * @param {String} exp\r\n             * @param {*} val\r\n             */\r\n\r\n            exports.$set = function (exp, val) {\r\n                var res = expParser.parse(exp, true)\r\n                if (res && res.set) {\r\n                    res.set.call(this, this, val)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Add a property on the VM\r\n             *\r\n             * @param {String} key\r\n             * @param {*} val\r\n             */\r\n\r\n            exports.$add = function (key, val) {\r\n                this._data.$add(key, val)\r\n            }\r\n\r\n            /**\r\n             * Delete a property on the VM\r\n             *\r\n             * @param {String} key\r\n             */\r\n\r\n            exports.$delete = function (key) {\r\n                this._data.$delete(key)\r\n            }\r\n\r\n            /**\r\n             * Watch an expression, trigger callback when its\r\n             * value changes.\r\n             *\r\n             * @param {String|Function} expOrFn\r\n             * @param {Function} cb\r\n             * @param {Object} [options]\r\n             *                 - {Boolean} deep\r\n             *                 - {Boolean} immediate\r\n             *                 - {Boolean} user\r\n             * @return {Function} - unwatchFn\r\n             */\r\n\r\n            exports.$watch = function (expOrFn, cb, options) {\r\n                var vm = this\r\n                var parsed\r\n                if (typeof expOrFn === 'string') {\r\n                    parsed = dirParser.parse(expOrFn)[0]\r\n                    expOrFn = parsed.expression\r\n                }\r\n                var watcher = new Watcher(vm, expOrFn, cb, {\r\n                    deep: options && options.deep,\r\n                    user: !options || options.user !== false,\r\n                    filters: parsed && parsed.filters\r\n                })\r\n                if (options && options.immediate) {\r\n                    cb.call(vm, watcher.value)\r\n                }\r\n                return function unwatchFn () {\r\n                    watcher.teardown()\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Evaluate a text directive, including filters.\r\n             *\r\n             * @param {String} text\r\n             * @return {String}\r\n             */\r\n\r\n            exports.$eval = function (text) {\r\n                // check for filters.\r\n                if (filterRE.test(text)) {\r\n                    var dir = dirParser.parse(text)[0]\r\n                    // the filter regex check might give false positive\r\n                    // for pipes inside strings, so it's possible that\r\n                    // we don't get any filters here\r\n                    var val = this.$get(dir.expression)\r\n                    return dir.filters\r\n                        ? this._applyFilters(val, null, dir.filters)\r\n                        : val\r\n                } else {\r\n                    // no filter\r\n                    return this.$get(text)\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Interpolate a piece of template text.\r\n             *\r\n             * @param {String} text\r\n             * @return {String}\r\n             */\r\n\r\n            exports.$interpolate = function (text) {\r\n                var tokens = textParser.parse(text)\r\n                var vm = this\r\n                if (tokens) {\r\n                    if (tokens.length === 1) {\r\n                        return vm.$eval(tokens[0].value) + ''\r\n                    } else {\r\n                        return tokens.map(function (token) {\r\n                            return token.tag\r\n                                ? vm.$eval(token.value)\r\n                                : token.value\r\n                        }).join('')\r\n                    }\r\n                } else {\r\n                    return text\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Log instance data as a plain JS object\r\n             * so that it is easier to inspect in console.\r\n             * This method assumes console is available.\r\n             *\r\n             * @param {String} [path]\r\n             */\r\n\r\n            exports.$log = function (path) {\r\n                var data = path\r\n                    ? Path.get(this._data, path)\r\n                    : this._data\r\n                if (data) {\r\n                    data = JSON.parse(JSON.stringify(data))\r\n                }\r\n                console.log(data)\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 62 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var transition = __webpack_require__(30)\r\n\r\n            /**\r\n             * Convenience on-instance nextTick. The callback is\r\n             * auto-bound to the instance, and this avoids component\r\n             * modules having to rely on the global Vue.\r\n             *\r\n             * @param {Function} fn\r\n             */\r\n\r\n            exports.$nextTick = function (fn) {\r\n                _.nextTick(fn, this)\r\n            }\r\n\r\n            /**\r\n             * Append instance to target\r\n             *\r\n             * @param {Node} target\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition] - defaults to true\r\n             */\r\n\r\n            exports.$appendTo = function (target, cb, withTransition) {\r\n                return insert(\r\n                    this, target, cb, withTransition,\r\n                    append, transition.append\r\n                )\r\n            }\r\n\r\n            /**\r\n             * Prepend instance to target\r\n             *\r\n             * @param {Node} target\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition] - defaults to true\r\n             */\r\n\r\n            exports.$prependTo = function (target, cb, withTransition) {\r\n                target = query(target)\r\n                if (target.hasChildNodes()) {\r\n                    this.$before(target.firstChild, cb, withTransition)\r\n                } else {\r\n                    this.$appendTo(target, cb, withTransition)\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Insert instance before target\r\n             *\r\n             * @param {Node} target\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition] - defaults to true\r\n             */\r\n\r\n            exports.$before = function (target, cb, withTransition) {\r\n                return insert(\r\n                    this, target, cb, withTransition,\r\n                    before, transition.before\r\n                )\r\n            }\r\n\r\n            /**\r\n             * Insert instance after target\r\n             *\r\n             * @param {Node} target\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition] - defaults to true\r\n             */\r\n\r\n            exports.$after = function (target, cb, withTransition) {\r\n                target = query(target)\r\n                if (target.nextSibling) {\r\n                    this.$before(target.nextSibling, cb, withTransition)\r\n                } else {\r\n                    this.$appendTo(target.parentNode, cb, withTransition)\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Remove instance from DOM\r\n             *\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition] - defaults to true\r\n             */\r\n\r\n            exports.$remove = function (cb, withTransition) {\r\n                if (!this.$el.parentNode) {\r\n                    return cb && cb()\r\n                }\r\n                var inDoc = this._isAttached && _.inDoc(this.$el)\r\n                // if we are not in document, no need to check\r\n                // for transitions\r\n                if (!inDoc) withTransition = false\r\n                var op\r\n                var self = this\r\n                var realCb = function () {\r\n                    if (inDoc) self._callHook('detached')\r\n                    if (cb) cb()\r\n                }\r\n                if (\r\n                    this._isFragment &&\r\n                    !this._blockFragment.hasChildNodes()\r\n                ) {\r\n                    op = withTransition === false\r\n                        ? append\r\n                        : transition.removeThenAppend\r\n                    blockOp(this, this._blockFragment, op, realCb)\r\n                } else {\r\n                    op = withTransition === false\r\n                        ? remove\r\n                        : transition.remove\r\n                    op(this.$el, this, realCb)\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Shared DOM insertion function.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Element} target\r\n             * @param {Function} [cb]\r\n             * @param {Boolean} [withTransition]\r\n             * @param {Function} op1 - op for non-transition insert\r\n             * @param {Function} op2 - op for transition insert\r\n             * @return vm\r\n             */\r\n\r\n            function insert (vm, target, cb, withTransition, op1, op2) {\r\n                target = query(target)\r\n                var targetIsDetached = !_.inDoc(target)\r\n                var op = withTransition === false || targetIsDetached\r\n                    ? op1\r\n                    : op2\r\n                var shouldCallHook =\r\n                    !targetIsDetached &&\r\n                    !vm._isAttached &&\r\n                    !_.inDoc(vm.$el)\r\n                if (vm._isFragment) {\r\n                    blockOp(vm, target, op, cb)\r\n                } else {\r\n                    op(vm.$el, target, vm, cb)\r\n                }\r\n                if (shouldCallHook) {\r\n                    vm._callHook('attached')\r\n                }\r\n                return vm\r\n            }\r\n\r\n            /**\r\n             * Execute a transition operation on a fragment instance,\r\n             * iterating through all its block nodes.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {Node} target\r\n             * @param {Function} op\r\n             * @param {Function} cb\r\n             */\r\n\r\n            function blockOp (vm, target, op, cb) {\r\n                var current = vm._fragmentStart\r\n                var end = vm._fragmentEnd\r\n                var next\r\n                while (next !== end) {\r\n                    next = current.nextSibling\r\n                    op(current, target, vm)\r\n                    current = next\r\n                }\r\n                op(end, target, vm, cb)\r\n            }\r\n\r\n            /**\r\n             * Check for selectors\r\n             *\r\n             * @param {String|Element} el\r\n             */\r\n\r\n            function query (el) {\r\n                return typeof el === 'string'\r\n                    ? document.querySelector(el)\r\n                    : el\r\n            }\r\n\r\n            /**\r\n             * Append operation that takes a callback.\r\n             *\r\n             * @param {Node} el\r\n             * @param {Node} target\r\n             * @param {Vue} vm - unused\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            function append (el, target, vm, cb) {\r\n                target.appendChild(el)\r\n                if (cb) cb()\r\n            }\r\n\r\n            /**\r\n             * InsertBefore operation that takes a callback.\r\n             *\r\n             * @param {Node} el\r\n             * @param {Node} target\r\n             * @param {Vue} vm - unused\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            function before (el, target, vm, cb) {\r\n                _.before(el, target)\r\n                if (cb) cb()\r\n            }\r\n\r\n            /**\r\n             * Remove operation that takes a callback.\r\n             *\r\n             * @param {Node} el\r\n             * @param {Vue} vm - unused\r\n             * @param {Function} [cb]\r\n             */\r\n\r\n            function remove (el, vm, cb) {\r\n                _.remove(el)\r\n                if (cb) cb()\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 63 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Listen on the given `event` with `fn`.\r\n             *\r\n             * @param {String} event\r\n             * @param {Function} fn\r\n             */\r\n\r\n            exports.$on = function (event, fn) {\r\n                (this._events[event] || (this._events[event] = []))\r\n                    .push(fn)\r\n                modifyListenerCount(this, event, 1)\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Adds an `event` listener that will be invoked a single\r\n             * time then automatically removed.\r\n             *\r\n             * @param {String} event\r\n             * @param {Function} fn\r\n             */\r\n\r\n            exports.$once = function (event, fn) {\r\n                var self = this\r\n                function on () {\r\n                    self.$off(event, on)\r\n                    fn.apply(this, arguments)\r\n                }\r\n                on.fn = fn\r\n                this.$on(event, on)\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Remove the given callback for `event` or all\r\n             * registered callbacks.\r\n             *\r\n             * @param {String} event\r\n             * @param {Function} fn\r\n             */\r\n\r\n            exports.$off = function (event, fn) {\r\n                var cbs\r\n                // all\r\n                if (!arguments.length) {\r\n                    if (this.$parent) {\r\n                        for (event in this._events) {\r\n                            cbs = this._events[event]\r\n                            if (cbs) {\r\n                                modifyListenerCount(this, event, -cbs.length)\r\n                            }\r\n                        }\r\n                    }\r\n                    this._events = {}\r\n                    return this\r\n                }\r\n                // specific event\r\n                cbs = this._events[event]\r\n                if (!cbs) {\r\n                    return this\r\n                }\r\n                if (arguments.length === 1) {\r\n                    modifyListenerCount(this, event, -cbs.length)\r\n                    this._events[event] = null\r\n                    return this\r\n                }\r\n                // specific handler\r\n                var cb\r\n                var i = cbs.length\r\n                while (i--) {\r\n                    cb = cbs[i]\r\n                    if (cb === fn || cb.fn === fn) {\r\n                        modifyListenerCount(this, event, -1)\r\n                        cbs.splice(i, 1)\r\n                        break\r\n                    }\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Trigger an event on self.\r\n             *\r\n             * @param {String} event\r\n             */\r\n\r\n            exports.$emit = function (event) {\r\n                this._eventCancelled = false\r\n                var cbs = this._events[event]\r\n                if (cbs) {\r\n                    // avoid leaking arguments:\r\n                    // http://jsperf.com/closure-with-arguments\r\n                    var i = arguments.length - 1\r\n                    var args = new Array(i)\r\n                    while (i--) {\r\n                        args[i] = arguments[i + 1]\r\n                    }\r\n                    i = 0\r\n                    cbs = cbs.length > 1\r\n                        ? _.toArray(cbs)\r\n                        : cbs\r\n                    for (var l = cbs.length; i < l; i++) {\r\n                        if (cbs[i].apply(this, args) === false) {\r\n                            this._eventCancelled = true\r\n                        }\r\n                    }\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Recursively broadcast an event to all children instances.\r\n             *\r\n             * @param {String} event\r\n             * @param {...*} additional arguments\r\n             */\r\n\r\n            exports.$broadcast = function (event) {\r\n                // if no child has registered for this event,\r\n                // then there's no need to broadcast.\r\n                if (!this._eventsCount[event]) return\r\n                var children = this.$children\r\n                for (var i = 0, l = children.length; i < l; i++) {\r\n                    var child = children[i]\r\n                    child.$emit.apply(child, arguments)\r\n                    if (!child._eventCancelled) {\r\n                        child.$broadcast.apply(child, arguments)\r\n                    }\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Recursively propagate an event up the parent chain.\r\n             *\r\n             * @param {String} event\r\n             * @param {...*} additional arguments\r\n             */\r\n\r\n            exports.$dispatch = function () {\r\n                var parent = this.$parent\r\n                while (parent) {\r\n                    parent.$emit.apply(parent, arguments)\r\n                    parent = parent._eventCancelled\r\n                        ? null\r\n                        : parent.$parent\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Modify the listener counts on all parents.\r\n             * This bookkeeping allows $broadcast to return early when\r\n             * no child has listened to a certain event.\r\n             *\r\n             * @param {Vue} vm\r\n             * @param {String} event\r\n             * @param {Number} count\r\n             */\r\n\r\n            var hookRE = /^hook:/\r\n            function modifyListenerCount (vm, event, count) {\r\n                var parent = vm.$parent\r\n                // hooks do not get broadcasted so no need\r\n                // to do bookkeeping for them\r\n                if (!parent || !count || hookRE.test(event)) return\r\n                while (parent) {\r\n                    parent._eventsCount[event] =\r\n                        (parent._eventsCount[event] || 0) + count\r\n                    parent = parent.$parent\r\n                }\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 64 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n\r\n            /**\r\n             * Create a child instance that prototypally inherits\r\n             * data on parent. To achieve that we create an intermediate\r\n             * constructor with its prototype pointing to parent.\r\n             *\r\n             * @param {Object} opts\r\n             * @param {Function} [BaseCtor]\r\n             * @return {Vue}\r\n             * @public\r\n             */\r\n\r\n            exports.$addChild = function (opts, BaseCtor) {\r\n                BaseCtor = BaseCtor || _.Vue\r\n                opts = opts || {}\r\n                var ChildVue\r\n                var parent = this\r\n                // transclusion context\r\n                var context = opts._context || parent\r\n                var inherit = opts.inherit !== undefined\r\n                    ? opts.inherit\r\n                    : BaseCtor.options.inherit\r\n                if (inherit) {\r\n                    var ctors = context._childCtors\r\n                    ChildVue = ctors[BaseCtor.cid]\r\n                    if (!ChildVue) {\r\n                        var optionName = BaseCtor.options.name\r\n                        var className = optionName\r\n                            ? _.classify(optionName)\r\n                            : 'VueComponent'\r\n                        ChildVue = new Function(\r\n                            'return function ' + className + ' (options) {' +\r\n                            'this.constructor = ' + className + ';' +\r\n                            'this._init(options) }'\r\n                        )()\r\n                        ChildVue.options = BaseCtor.options\r\n                        ChildVue.linker = BaseCtor.linker\r\n                        ChildVue.prototype = context\r\n                        ctors[BaseCtor.cid] = ChildVue\r\n                    }\r\n                } else {\r\n                    ChildVue = BaseCtor\r\n                }\r\n                opts._parent = parent\r\n                opts._root = parent.$root\r\n                var child = new ChildVue(opts)\r\n                return child\r\n            }\r\n\r\n\r\n            /***/ },\r\n        /* 65 */\r\n        /***/ function(module, exports, __webpack_require__) {\r\n\r\n            var _ = __webpack_require__(1)\r\n            var compiler = __webpack_require__(10)\r\n\r\n            /**\r\n             * Set instance target element and kick off the compilation\r\n             * process. The passed in `el` can be a selector string, an\r\n             * existing Element, or a DocumentFragment (for block\r\n             * instances).\r\n             *\r\n             * @param {Element|DocumentFragment|string} el\r\n             * @public\r\n             */\r\n\r\n            exports.$mount = function (el) {\r\n                if (this._isCompiled) {\r\n                    (\"development\") !== 'production' && _.warn(\r\n                        '$mount() should be called only once.'\r\n                    )\r\n                    return\r\n                }\r\n                el = _.query(el)\r\n                if (!el) {\r\n                    el = document.createElement('div')\r\n                }\r\n                this._compile(el)\r\n                this._isCompiled = true\r\n                this._callHook('compiled')\r\n                this._initDOMHooks()\r\n                if (_.inDoc(this.$el)) {\r\n                    this._callHook('attached')\r\n                    ready.call(this)\r\n                } else {\r\n                    this.$once('hook:attached', ready)\r\n                }\r\n                return this\r\n            }\r\n\r\n            /**\r\n             * Mark an instance as ready.\r\n             */\r\n\r\n            function ready () {\r\n                this._isAttached = true\r\n                this._isReady = true\r\n                this._callHook('ready')\r\n            }\r\n\r\n            /**\r\n             * Teardown the instance, simply delegate to the internal\r\n             * _destroy.\r\n             */\r\n\r\n            exports.$destroy = function (remove, deferCleanup) {\r\n                this._destroy(remove, deferCleanup)\r\n            }\r\n\r\n            /**\r\n             * Partially compile a piece of DOM and return a\r\n             * decompile function.\r\n             *\r\n             * @param {Element|DocumentFragment} el\r\n             * @param {Vue} [host]\r\n             * @return {Function}\r\n             */\r\n\r\n            exports.$compile = function (el, host) {\r\n                return compiler.compile(el, this.$options, true)(this, el, host)\r\n            }\r\n\r\n\r\n            /***/ }\r\n        /******/ ])\r\n});\r\n;","/*!\r\n * vue-router v0.7.7\r\n * (c) 2015 Evan You\r\n * Released under the MIT License.\r\n */\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            global.VueRouter = factory();\r\n}(this, function () { 'use strict';\r\n\r\n    var babelHelpers = {};\r\n\r\n    babelHelpers.classCallCheck = function (instance, Constructor) {\r\n        if (!(instance instanceof Constructor)) {\r\n            throw new TypeError(\"Cannot call a class as a function\");\r\n        }\r\n    };\r\n    function Target(path, matcher, delegate) {\r\n        this.path = path;\r\n        this.matcher = matcher;\r\n        this.delegate = delegate;\r\n    }\r\n\r\n    Target.prototype = {\r\n        to: function to(target, callback) {\r\n            var delegate = this.delegate;\r\n\r\n            if (delegate && delegate.willAddRoute) {\r\n                target = delegate.willAddRoute(this.matcher.target, target);\r\n            }\r\n\r\n            this.matcher.add(this.path, target);\r\n\r\n            if (callback) {\r\n                if (callback.length === 0) {\r\n                    throw new Error(\"You must have an argument in the function passed to `to`\");\r\n                }\r\n                this.matcher.addChild(this.path, target, callback, this.delegate);\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n\r\n    function Matcher(target) {\r\n        this.routes = {};\r\n        this.children = {};\r\n        this.target = target;\r\n    }\r\n\r\n    Matcher.prototype = {\r\n        add: function add(path, handler) {\r\n            this.routes[path] = handler;\r\n        },\r\n\r\n        addChild: function addChild(path, target, callback, delegate) {\r\n            var matcher = new Matcher(target);\r\n            this.children[path] = matcher;\r\n\r\n            var match = generateMatch(path, matcher, delegate);\r\n\r\n            if (delegate && delegate.contextEntered) {\r\n                delegate.contextEntered(target, match);\r\n            }\r\n\r\n            callback(match);\r\n        }\r\n    };\r\n\r\n    function generateMatch(startingPath, matcher, delegate) {\r\n        return function (path, nestedCallback) {\r\n            var fullPath = startingPath + path;\r\n\r\n            if (nestedCallback) {\r\n                nestedCallback(generateMatch(fullPath, matcher, delegate));\r\n            } else {\r\n                return new Target(startingPath + path, matcher, delegate);\r\n            }\r\n        };\r\n    }\r\n\r\n    function addRoute(routeArray, path, handler) {\r\n        var len = 0;\r\n        for (var i = 0, l = routeArray.length; i < l; i++) {\r\n            len += routeArray[i].path.length;\r\n        }\r\n\r\n        path = path.substr(len);\r\n        var route = { path: path, handler: handler };\r\n        routeArray.push(route);\r\n    }\r\n\r\n    function eachRoute(baseRoute, matcher, callback, binding) {\r\n        var routes = matcher.routes;\r\n\r\n        for (var path in routes) {\r\n            if (routes.hasOwnProperty(path)) {\r\n                var routeArray = baseRoute.slice();\r\n                addRoute(routeArray, path, routes[path]);\r\n\r\n                if (matcher.children[path]) {\r\n                    eachRoute(routeArray, matcher.children[path], callback, binding);\r\n                } else {\r\n                    callback.call(binding, routeArray);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function map (callback, addRouteCallback) {\r\n        var matcher = new Matcher();\r\n\r\n        callback(generateMatch(\"\", matcher, this.delegate));\r\n\r\n        eachRoute([], matcher, function (route) {\r\n            if (addRouteCallback) {\r\n                addRouteCallback(this, route);\r\n            } else {\r\n                this.add(route);\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\r\n\r\n    var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\r\n\r\n    function isArray(test) {\r\n        return Object.prototype.toString.call(test) === \"[object Array]\";\r\n    }\r\n\r\n    // A Segment represents a segment in the original route description.\r\n    // Each Segment type provides an `eachChar` and `regex` method.\r\n    //\r\n    // The `eachChar` method invokes the callback with one or more character\r\n    // specifications. A character specification consumes one or more input\r\n    // characters.\r\n    //\r\n    // The `regex` method returns a regex fragment for the segment. If the\r\n    // segment is a dynamic of star segment, the regex fragment also includes\r\n    // a capture.\r\n    //\r\n    // A character specification contains:\r\n    //\r\n    // * `validChars`: a String with a list of all valid characters, or\r\n    // * `invalidChars`: a String with a list of all invalid characters\r\n    // * `repeat`: true if the character specification can repeat\r\n\r\n    function StaticSegment(string) {\r\n        this.string = string;\r\n    }\r\n    StaticSegment.prototype = {\r\n        eachChar: function eachChar(callback) {\r\n            var string = this.string,\r\n                ch;\r\n\r\n            for (var i = 0, l = string.length; i < l; i++) {\r\n                ch = string.charAt(i);\r\n                callback({ validChars: ch });\r\n            }\r\n        },\r\n\r\n        regex: function regex() {\r\n            return this.string.replace(escapeRegex, '\\\\$1');\r\n        },\r\n\r\n        generate: function generate() {\r\n            return this.string;\r\n        }\r\n    };\r\n\r\n    function DynamicSegment(name) {\r\n        this.name = name;\r\n    }\r\n    DynamicSegment.prototype = {\r\n        eachChar: function eachChar(callback) {\r\n            callback({ invalidChars: \"/\", repeat: true });\r\n        },\r\n\r\n        regex: function regex() {\r\n            return \"([^/]+)\";\r\n        },\r\n\r\n        generate: function generate(params) {\r\n            return params[this.name];\r\n        }\r\n    };\r\n\r\n    function StarSegment(name) {\r\n        this.name = name;\r\n    }\r\n    StarSegment.prototype = {\r\n        eachChar: function eachChar(callback) {\r\n            callback({ invalidChars: \"\", repeat: true });\r\n        },\r\n\r\n        regex: function regex() {\r\n            return \"(.+)\";\r\n        },\r\n\r\n        generate: function generate(params) {\r\n            return params[this.name];\r\n        }\r\n    };\r\n\r\n    function EpsilonSegment() {}\r\n    EpsilonSegment.prototype = {\r\n        eachChar: function eachChar() {},\r\n        regex: function regex() {\r\n            return \"\";\r\n        },\r\n        generate: function generate() {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    function parse(route, names, specificity) {\r\n        // normalize route as not starting with a \"/\". Recognition will\r\n        // also normalize.\r\n        if (route.charAt(0) === \"/\") {\r\n            route = route.substr(1);\r\n        }\r\n\r\n        var segments = route.split(\"/\"),\r\n            results = [];\r\n\r\n        // A routes has specificity determined by the order that its different segments\r\n        // appear in. This system mirrors how the magnitude of numbers written as strings\r\n        // works.\r\n        // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\r\n        // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\r\n        // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\r\n        // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\r\n        // leading symbol, \"1\".\r\n        // The rule is that symbols to the left carry more weight than symbols to the right\r\n        // when a number is written out as a string. In the above strings, the leading digit\r\n        // represents how many 100's are in the number, and it carries more weight than the middle\r\n        // number which represents how many 10's are in the number.\r\n        // This system of number magnitude works well for route specificity, too. A route written as\r\n        // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\r\n        // `x`, irrespective of the other parts.\r\n        // Because of this similarity, we assign each type of segment a number value written as a\r\n        // string. We can find the specificity of compound routes by concatenating these strings\r\n        // together, from left to right. After we have looped through all of the segments,\r\n        // we convert the string to a number.\r\n        specificity.val = '';\r\n\r\n        for (var i = 0, l = segments.length; i < l; i++) {\r\n            var segment = segments[i],\r\n                match;\r\n\r\n            if (match = segment.match(/^:([^\\/]+)$/)) {\r\n                results.push(new DynamicSegment(match[1]));\r\n                names.push(match[1]);\r\n                specificity.val += '3';\r\n            } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\r\n                results.push(new StarSegment(match[1]));\r\n                specificity.val += '2';\r\n                names.push(match[1]);\r\n            } else if (segment === \"\") {\r\n                results.push(new EpsilonSegment());\r\n                specificity.val += '1';\r\n            } else {\r\n                results.push(new StaticSegment(segment));\r\n                specificity.val += '4';\r\n            }\r\n        }\r\n\r\n        specificity.val = +specificity.val;\r\n\r\n        return results;\r\n    }\r\n\r\n    // A State has a character specification and (`charSpec`) and a list of possible\r\n    // subsequent states (`nextStates`).\r\n    //\r\n    // If a State is an accepting state, it will also have several additional\r\n    // properties:\r\n    //\r\n    // * `regex`: A regular expression that is used to extract parameters from paths\r\n    //   that reached this accepting state.\r\n    // * `handlers`: Information on how to convert the list of captures into calls\r\n    //   to registered handlers with the specified parameters\r\n    // * `types`: How many static, dynamic or star segments in this route. Used to\r\n    //   decide which route to use if multiple registered routes match a path.\r\n    //\r\n    // Currently, State is implemented naively by looping over `nextStates` and\r\n    // comparing a character specification against a character. A more efficient\r\n    // implementation would use a hash of keys pointing at one or more next states.\r\n\r\n    function State(charSpec) {\r\n        this.charSpec = charSpec;\r\n        this.nextStates = [];\r\n    }\r\n\r\n    State.prototype = {\r\n        get: function get(charSpec) {\r\n            var nextStates = this.nextStates;\r\n\r\n            for (var i = 0, l = nextStates.length; i < l; i++) {\r\n                var child = nextStates[i];\r\n\r\n                var isEqual = child.charSpec.validChars === charSpec.validChars;\r\n                isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\r\n\r\n                if (isEqual) {\r\n                    return child;\r\n                }\r\n            }\r\n        },\r\n\r\n        put: function put(charSpec) {\r\n            var state;\r\n\r\n            // If the character specification already exists in a child of the current\r\n            // state, just return that state.\r\n            if (state = this.get(charSpec)) {\r\n                return state;\r\n            }\r\n\r\n            // Make a new state for the character spec\r\n            state = new State(charSpec);\r\n\r\n            // Insert the new state as a child of the current state\r\n            this.nextStates.push(state);\r\n\r\n            // If this character specification repeats, insert the new state as a child\r\n            // of itself. Note that this will not trigger an infinite loop because each\r\n            // transition during recognition consumes a character.\r\n            if (charSpec.repeat) {\r\n                state.nextStates.push(state);\r\n            }\r\n\r\n            // Return the new state\r\n            return state;\r\n        },\r\n\r\n        // Find a list of child states matching the next character\r\n        match: function match(ch) {\r\n            // DEBUG \"Processing `\" + ch + \"`:\"\r\n            var nextStates = this.nextStates,\r\n                child,\r\n                charSpec,\r\n                chars;\r\n\r\n            // DEBUG \"  \" + debugState(this)\r\n            var returned = [];\r\n\r\n            for (var i = 0, l = nextStates.length; i < l; i++) {\r\n                child = nextStates[i];\r\n\r\n                charSpec = child.charSpec;\r\n\r\n                if (typeof (chars = charSpec.validChars) !== 'undefined') {\r\n                    if (chars.indexOf(ch) !== -1) {\r\n                        returned.push(child);\r\n                    }\r\n                } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\r\n                    if (chars.indexOf(ch) === -1) {\r\n                        returned.push(child);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return returned;\r\n        }\r\n\r\n        /** IF DEBUG\r\n         , debug: function() {\r\n      var charSpec = this.charSpec,\r\n          debug = \"[\",\r\n          chars = charSpec.validChars || charSpec.invalidChars;\r\n       if (charSpec.invalidChars) { debug += \"^\"; }\r\n      debug += chars;\r\n      debug += \"]\";\r\n       if (charSpec.repeat) { debug += \"+\"; }\r\n       return debug;\r\n    }\r\n         END IF **/\r\n    };\r\n\r\n    /** IF DEBUG\r\n     function debug(log) {\r\n    console.log(log);\r\n  }\r\n\r\n     function debugState(state) {\r\n    return state.nextStates.map(function(n) {\r\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\r\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\r\n    }).join(\", \")\r\n  }\r\n     END IF **/\r\n\r\n    // Sort the routes by specificity\r\n    function sortSolutions(states) {\r\n        return states.sort(function (a, b) {\r\n            return b.specificity.val - a.specificity.val;\r\n        });\r\n    }\r\n\r\n    function recognizeChar(states, ch) {\r\n        var nextStates = [];\r\n\r\n        for (var i = 0, l = states.length; i < l; i++) {\r\n            var state = states[i];\r\n\r\n            nextStates = nextStates.concat(state.match(ch));\r\n        }\r\n\r\n        return nextStates;\r\n    }\r\n\r\n    var oCreate = Object.create || function (proto) {\r\n            function F() {}\r\n            F.prototype = proto;\r\n            return new F();\r\n        };\r\n\r\n    function RecognizeResults(queryParams) {\r\n        this.queryParams = queryParams || {};\r\n    }\r\n    RecognizeResults.prototype = oCreate({\r\n        splice: Array.prototype.splice,\r\n        slice: Array.prototype.slice,\r\n        push: Array.prototype.push,\r\n        length: 0,\r\n        queryParams: null\r\n    });\r\n\r\n    function findHandler(state, path, queryParams) {\r\n        var handlers = state.handlers,\r\n            regex = state.regex;\r\n        var captures = path.match(regex),\r\n            currentCapture = 1;\r\n        var result = new RecognizeResults(queryParams);\r\n\r\n        for (var i = 0, l = handlers.length; i < l; i++) {\r\n            var handler = handlers[i],\r\n                names = handler.names,\r\n                params = {};\r\n\r\n            for (var j = 0, m = names.length; j < m; j++) {\r\n                params[names[j]] = captures[currentCapture++];\r\n            }\r\n\r\n            result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function addSegment(currentState, segment) {\r\n        segment.eachChar(function (ch) {\r\n            var state;\r\n\r\n            currentState = currentState.put(ch);\r\n        });\r\n\r\n        return currentState;\r\n    }\r\n\r\n    function decodeQueryParamPart(part) {\r\n        // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\r\n        part = part.replace(/\\+/gm, '%20');\r\n        return decodeURIComponent(part);\r\n    }\r\n\r\n    // The main interface\r\n\r\n    var RouteRecognizer = function RouteRecognizer() {\r\n        this.rootState = new State();\r\n        this.names = {};\r\n    };\r\n\r\n    RouteRecognizer.prototype = {\r\n        add: function add(routes, options) {\r\n            var currentState = this.rootState,\r\n                regex = \"^\",\r\n                specificity = {},\r\n                handlers = [],\r\n                allSegments = [],\r\n                name;\r\n\r\n            var isEmpty = true;\r\n\r\n            for (var i = 0, l = routes.length; i < l; i++) {\r\n                var route = routes[i],\r\n                    names = [];\r\n\r\n                var segments = parse(route.path, names, specificity);\r\n\r\n                allSegments = allSegments.concat(segments);\r\n\r\n                for (var j = 0, m = segments.length; j < m; j++) {\r\n                    var segment = segments[j];\r\n\r\n                    if (segment instanceof EpsilonSegment) {\r\n                        continue;\r\n                    }\r\n\r\n                    isEmpty = false;\r\n\r\n                    // Add a \"/\" for the new segment\r\n                    currentState = currentState.put({ validChars: \"/\" });\r\n                    regex += \"/\";\r\n\r\n                    // Add a representation of the segment to the NFA and regex\r\n                    currentState = addSegment(currentState, segment);\r\n                    regex += segment.regex();\r\n                }\r\n\r\n                var handler = { handler: route.handler, names: names };\r\n                handlers.push(handler);\r\n            }\r\n\r\n            if (isEmpty) {\r\n                currentState = currentState.put({ validChars: \"/\" });\r\n                regex += \"/\";\r\n            }\r\n\r\n            currentState.handlers = handlers;\r\n            currentState.regex = new RegExp(regex + \"$\");\r\n            currentState.specificity = specificity;\r\n\r\n            if (name = options && options.as) {\r\n                this.names[name] = {\r\n                    segments: allSegments,\r\n                    handlers: handlers\r\n                };\r\n            }\r\n        },\r\n\r\n        handlersFor: function handlersFor(name) {\r\n            var route = this.names[name],\r\n                result = [];\r\n            if (!route) {\r\n                throw new Error(\"There is no route named \" + name);\r\n            }\r\n\r\n            for (var i = 0, l = route.handlers.length; i < l; i++) {\r\n                result.push(route.handlers[i]);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        hasRoute: function hasRoute(name) {\r\n            return !!this.names[name];\r\n        },\r\n\r\n        generate: function generate(name, params) {\r\n            var route = this.names[name],\r\n                output = \"\";\r\n            if (!route) {\r\n                throw new Error(\"There is no route named \" + name);\r\n            }\r\n\r\n            var segments = route.segments;\r\n\r\n            for (var i = 0, l = segments.length; i < l; i++) {\r\n                var segment = segments[i];\r\n\r\n                if (segment instanceof EpsilonSegment) {\r\n                    continue;\r\n                }\r\n\r\n                output += \"/\";\r\n                output += segment.generate(params);\r\n            }\r\n\r\n            if (output.charAt(0) !== '/') {\r\n                output = '/' + output;\r\n            }\r\n\r\n            if (params && params.queryParams) {\r\n                output += this.generateQueryString(params.queryParams);\r\n            }\r\n\r\n            return output;\r\n        },\r\n\r\n        generateQueryString: function generateQueryString(params) {\r\n            var pairs = [];\r\n            var keys = [];\r\n            for (var key in params) {\r\n                if (params.hasOwnProperty(key)) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            keys.sort();\r\n            for (var i = 0, len = keys.length; i < len; i++) {\r\n                key = keys[i];\r\n                var value = params[key];\r\n                if (value == null) {\r\n                    continue;\r\n                }\r\n                var pair = encodeURIComponent(key);\r\n                if (isArray(value)) {\r\n                    for (var j = 0, l = value.length; j < l; j++) {\r\n                        var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\r\n                        pairs.push(arrayPair);\r\n                    }\r\n                } else {\r\n                    pair += \"=\" + encodeURIComponent(value);\r\n                    pairs.push(pair);\r\n                }\r\n            }\r\n\r\n            if (pairs.length === 0) {\r\n                return '';\r\n            }\r\n\r\n            return \"?\" + pairs.join(\"&\");\r\n        },\r\n\r\n        parseQueryString: function parseQueryString(queryString) {\r\n            var pairs = queryString.split(\"&\"),\r\n                queryParams = {};\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var pair = pairs[i].split('='),\r\n                    key = decodeQueryParamPart(pair[0]),\r\n                    keyLength = key.length,\r\n                    isArray = false,\r\n                    value;\r\n                if (pair.length === 1) {\r\n                    value = 'true';\r\n                } else {\r\n                    //Handle arrays\r\n                    if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\r\n                        isArray = true;\r\n                        key = key.slice(0, keyLength - 2);\r\n                        if (!queryParams[key]) {\r\n                            queryParams[key] = [];\r\n                        }\r\n                    }\r\n                    value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\r\n                }\r\n                if (isArray) {\r\n                    queryParams[key].push(value);\r\n                } else {\r\n                    queryParams[key] = value;\r\n                }\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        recognize: function recognize(path) {\r\n            var states = [this.rootState],\r\n                pathLen,\r\n                i,\r\n                l,\r\n                queryStart,\r\n                queryParams = {},\r\n                isSlashDropped = false;\r\n\r\n            queryStart = path.indexOf('?');\r\n            if (queryStart !== -1) {\r\n                var queryString = path.substr(queryStart + 1, path.length);\r\n                path = path.substr(0, queryStart);\r\n                queryParams = this.parseQueryString(queryString);\r\n            }\r\n\r\n            path = decodeURI(path);\r\n\r\n            // DEBUG GROUP path\r\n\r\n            if (path.charAt(0) !== \"/\") {\r\n                path = \"/\" + path;\r\n            }\r\n\r\n            pathLen = path.length;\r\n            if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\r\n                path = path.substr(0, pathLen - 1);\r\n                isSlashDropped = true;\r\n            }\r\n\r\n            for (i = 0, l = path.length; i < l; i++) {\r\n                states = recognizeChar(states, path.charAt(i));\r\n                if (!states.length) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // END DEBUG GROUP\r\n\r\n            var solutions = [];\r\n            for (i = 0, l = states.length; i < l; i++) {\r\n                if (states[i].handlers) {\r\n                    solutions.push(states[i]);\r\n                }\r\n            }\r\n\r\n            states = sortSolutions(solutions);\r\n\r\n            var state = solutions[0];\r\n\r\n            if (state && state.handlers) {\r\n                // if a trailing slash was dropped and a star segment is the last segment\r\n                // specified, put the trailing slash back\r\n                if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\r\n                    path = path + \"/\";\r\n                }\r\n                return findHandler(state, path, queryParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    RouteRecognizer.prototype.map = map;\r\n\r\n    RouteRecognizer.VERSION = '0.1.9';\r\n\r\n    var genQuery = RouteRecognizer.prototype.generateQueryString;\r\n\r\n    // export default for holding the Vue reference\r\n    var exports$1 = {};\r\n    /**\r\n     * Warn stuff.\r\n     *\r\n     * @param {String} msg\r\n     */\r\n\r\n    function warn(msg) {\r\n        /* istanbul ignore next */\r\n        if (window.console) {\r\n            console.warn('[vue-router] ' + msg);\r\n            /* istanbul ignore if */\r\n            if (!exports$1.Vue || exports$1.Vue.config.debug) {\r\n                console.warn(new Error('warning stack trace:').stack);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolve a relative path.\r\n     *\r\n     * @param {String} base\r\n     * @param {String} relative\r\n     * @param {Boolean} append\r\n     * @return {String}\r\n     */\r\n\r\n    function resolvePath(base, relative, append) {\r\n        var query = base.match(/(\\?.*)$/);\r\n        if (query) {\r\n            query = query[1];\r\n            base = base.slice(0, -query.length);\r\n        }\r\n        // a query!\r\n        if (relative.charAt(0) === '?') {\r\n            return base + relative;\r\n        }\r\n        var stack = base.split('/');\r\n        // remove trailing segment if:\r\n        // - not appending\r\n        // - appending to trailing slash (last segment is empty)\r\n        if (!append || !stack[stack.length - 1]) {\r\n            stack.pop();\r\n        }\r\n        // resolve relative path\r\n        var segments = relative.replace(/^\\//, '').split('/');\r\n        for (var i = 0; i < segments.length; i++) {\r\n            var segment = segments[i];\r\n            if (segment === '.') {\r\n                continue;\r\n            } else if (segment === '..') {\r\n                stack.pop();\r\n            } else {\r\n                stack.push(segment);\r\n            }\r\n        }\r\n        // ensure leading slash\r\n        if (stack[0] !== '') {\r\n            stack.unshift('');\r\n        }\r\n        return stack.join('/');\r\n    }\r\n\r\n    /**\r\n     * Forgiving check for a promise\r\n     *\r\n     * @param {Object} p\r\n     * @return {Boolean}\r\n     */\r\n\r\n    function isPromise(p) {\r\n        return p && typeof p.then === 'function';\r\n    }\r\n\r\n    /**\r\n     * Retrive a route config field from a component instance\r\n     * OR a component contructor.\r\n     *\r\n     * @param {Function|Vue} component\r\n     * @param {String} name\r\n     * @return {*}\r\n     */\r\n\r\n    function getRouteConfig(component, name) {\r\n        var options = component && (component.$options || component.options);\r\n        return options && options.route && options.route[name];\r\n    }\r\n\r\n    /**\r\n     * Resolve an async component factory. Have to do a dirty\r\n     * mock here because of Vue core's internal API depends on\r\n     * an ID check.\r\n     *\r\n     * @param {Object} handler\r\n     * @param {Function} cb\r\n     */\r\n\r\n    var resolver = undefined;\r\n\r\n    function resolveAsyncComponent(handler, cb) {\r\n        if (!resolver) {\r\n            resolver = {\r\n                resolve: exports$1.Vue.prototype._resolveComponent,\r\n                $options: {\r\n                    components: {\r\n                        _: handler.component\r\n                    }\r\n                }\r\n            };\r\n        } else {\r\n            resolver.$options.components._ = handler.component;\r\n        }\r\n        resolver.resolve('_', function (Component) {\r\n            handler.component = Component;\r\n            cb(Component);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Map the dynamic segments in a path to params.\r\n     *\r\n     * @param {String} path\r\n     * @param {Object} params\r\n     * @param {Object} query\r\n     */\r\n\r\n    function mapParams(path, params, query) {\r\n        if (params === undefined) params = {};\r\n\r\n        path = path.replace(/:([^\\/]+)/g, function (_, key) {\r\n            var val = params[key];\r\n            if (!val) {\r\n                warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\r\n            }\r\n            return val || '';\r\n        });\r\n        if (query) {\r\n            path += genQuery(query);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    var hashRE = /#.*$/;\r\n\r\n    var HTML5History = (function () {\r\n        function HTML5History(_ref) {\r\n            var root = _ref.root;\r\n            var onChange = _ref.onChange;\r\n            babelHelpers.classCallCheck(this, HTML5History);\r\n\r\n            if (root) {\r\n                // make sure there's the starting slash\r\n                if (root.charAt(0) !== '/') {\r\n                    root = '/' + root;\r\n                }\r\n                // remove trailing slash\r\n                this.root = root.replace(/\\/$/, '');\r\n                this.rootRE = new RegExp('^\\\\' + this.root);\r\n            } else {\r\n                this.root = null;\r\n            }\r\n            this.onChange = onChange;\r\n            // check base tag\r\n            var baseEl = document.querySelector('base');\r\n            this.base = baseEl && baseEl.getAttribute('href');\r\n        }\r\n\r\n        HTML5History.prototype.start = function start() {\r\n            var _this = this;\r\n\r\n            this.listener = function (e) {\r\n                var url = decodeURI(location.pathname + location.search);\r\n                if (_this.root) {\r\n                    url = url.replace(_this.rootRE, '');\r\n                }\r\n                _this.onChange(url, e && e.state, location.hash);\r\n            };\r\n            window.addEventListener('popstate', this.listener);\r\n            this.listener();\r\n        };\r\n\r\n        HTML5History.prototype.stop = function stop() {\r\n            window.removeEventListener('popstate', this.listener);\r\n        };\r\n\r\n        HTML5History.prototype.go = function go(path, replace, append) {\r\n            var url = this.formatPath(path, append);\r\n            if (replace) {\r\n                history.replaceState({}, '', url);\r\n            } else {\r\n                // record scroll position by replacing current state\r\n                history.replaceState({\r\n                    pos: {\r\n                        x: window.pageXOffset,\r\n                        y: window.pageYOffset\r\n                    }\r\n                }, '');\r\n                // then push new state\r\n                history.pushState({}, '', url);\r\n            }\r\n            var hashMatch = path.match(hashRE);\r\n            var hash = hashMatch && hashMatch[0];\r\n            path = url\r\n                // strip hash so it doesn't mess up params\r\n                .replace(hashRE, '')\r\n                // remove root before matching\r\n                .replace(this.rootRE, '');\r\n            this.onChange(path, null, hash);\r\n        };\r\n\r\n        HTML5History.prototype.formatPath = function formatPath(path, append) {\r\n            return path.charAt(0) === '/'\r\n                // absolute path\r\n                ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\r\n        };\r\n\r\n        return HTML5History;\r\n    })();\r\n\r\n    var HashHistory = (function () {\r\n        function HashHistory(_ref) {\r\n            var hashbang = _ref.hashbang;\r\n            var onChange = _ref.onChange;\r\n            babelHelpers.classCallCheck(this, HashHistory);\r\n\r\n            this.hashbang = hashbang;\r\n            this.onChange = onChange;\r\n        }\r\n\r\n        HashHistory.prototype.start = function start() {\r\n            var self = this;\r\n            this.listener = function () {\r\n                var path = location.hash;\r\n                var raw = path.replace(/^#!?/, '');\r\n                // always\r\n                if (raw.charAt(0) !== '/') {\r\n                    raw = '/' + raw;\r\n                }\r\n                var formattedPath = self.formatPath(raw);\r\n                if (formattedPath !== path) {\r\n                    location.replace(formattedPath);\r\n                    return;\r\n                }\r\n                // determine query\r\n                // note it's possible to have queries in both the actual URL\r\n                // and the hash fragment itself.\r\n                var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\r\n                self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\r\n            };\r\n            window.addEventListener('hashchange', this.listener);\r\n            this.listener();\r\n        };\r\n\r\n        HashHistory.prototype.stop = function stop() {\r\n            window.removeEventListener('hashchange', this.listener);\r\n        };\r\n\r\n        HashHistory.prototype.go = function go(path, replace, append) {\r\n            path = this.formatPath(path, append);\r\n            if (replace) {\r\n                location.replace(path);\r\n            } else {\r\n                location.hash = path;\r\n            }\r\n        };\r\n\r\n        HashHistory.prototype.formatPath = function formatPath(path, append) {\r\n            var isAbsoloute = path.charAt(0) === '/';\r\n            var prefix = '#' + (this.hashbang ? '!' : '');\r\n            return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\r\n        };\r\n\r\n        return HashHistory;\r\n    })();\r\n\r\n    var AbstractHistory = (function () {\r\n        function AbstractHistory(_ref) {\r\n            var onChange = _ref.onChange;\r\n            babelHelpers.classCallCheck(this, AbstractHistory);\r\n\r\n            this.onChange = onChange;\r\n            this.currentPath = '/';\r\n        }\r\n\r\n        AbstractHistory.prototype.start = function start() {\r\n            this.onChange('/');\r\n        };\r\n\r\n        AbstractHistory.prototype.stop = function stop() {\r\n            // noop\r\n        };\r\n\r\n        AbstractHistory.prototype.go = function go(path, replace, append) {\r\n            path = this.currentPath = this.formatPath(path, append);\r\n            this.onChange(path);\r\n        };\r\n\r\n        AbstractHistory.prototype.formatPath = function formatPath(path, append) {\r\n            return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\r\n        };\r\n\r\n        return AbstractHistory;\r\n    })();\r\n\r\n    /**\r\n     * Determine the reusability of an existing router view.\r\n     *\r\n     * @param {Directive} view\r\n     * @param {Object} handler\r\n     * @param {Transition} transition\r\n     */\r\n\r\n    function canReuse(view, handler, transition) {\r\n        var component = view.childVM;\r\n        if (!component || !handler) {\r\n            return false;\r\n        }\r\n        // important: check view.Component here because it may\r\n        // have been changed in activate hook\r\n        if (view.Component !== handler.component) {\r\n            return false;\r\n        }\r\n        var canReuseFn = getRouteConfig(component, 'canReuse');\r\n        return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\r\n            to: transition.to,\r\n            from: transition.from\r\n        }) : true; // defaults to true\r\n    }\r\n\r\n    /**\r\n     * Check if a component can deactivate.\r\n     *\r\n     * @param {Directive} view\r\n     * @param {Transition} transition\r\n     * @param {Function} next\r\n     */\r\n\r\n    function canDeactivate(view, transition, next) {\r\n        var fromComponent = view.childVM;\r\n        var hook = getRouteConfig(fromComponent, 'canDeactivate');\r\n        if (!hook) {\r\n            next();\r\n        } else {\r\n            transition.callHook(hook, fromComponent, next, {\r\n                expectBoolean: true\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a component can activate.\r\n     *\r\n     * @param {Object} handler\r\n     * @param {Transition} transition\r\n     * @param {Function} next\r\n     */\r\n\r\n    function canActivate(handler, transition, next) {\r\n        resolveAsyncComponent(handler, function (Component) {\r\n            // have to check due to async-ness\r\n            if (transition.aborted) {\r\n                return;\r\n            }\r\n            // determine if this component can be activated\r\n            var hook = getRouteConfig(Component, 'canActivate');\r\n            if (!hook) {\r\n                next();\r\n            } else {\r\n                transition.callHook(hook, null, next, {\r\n                    expectBoolean: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Call deactivate hooks for existing router-views.\r\n     *\r\n     * @param {Directive} view\r\n     * @param {Transition} transition\r\n     * @param {Function} next\r\n     */\r\n\r\n    function deactivate(view, transition, next) {\r\n        var component = view.childVM;\r\n        var hook = getRouteConfig(component, 'deactivate');\r\n        if (!hook) {\r\n            next();\r\n        } else {\r\n            transition.callHooks(hook, component, next);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Activate / switch component for a router-view.\r\n     *\r\n     * @param {Directive} view\r\n     * @param {Transition} transition\r\n     * @param {Number} depth\r\n     * @param {Function} [cb]\r\n     */\r\n\r\n    function activate(view, transition, depth, cb, reuse) {\r\n        var handler = transition.activateQueue[depth];\r\n        if (!handler) {\r\n            // fix 1.0.0-alpha.3 compat\r\n            if (view._bound) {\r\n                view.setComponent(null);\r\n            }\r\n            cb && cb();\r\n            return;\r\n        }\r\n\r\n        var Component = view.Component = handler.component;\r\n        var activateHook = getRouteConfig(Component, 'activate');\r\n        var dataHook = getRouteConfig(Component, 'data');\r\n        var waitForData = getRouteConfig(Component, 'waitForData');\r\n\r\n        view.depth = depth;\r\n        view.activated = false;\r\n\r\n        var component = undefined;\r\n        var loading = !!(dataHook && !waitForData);\r\n\r\n        // \"reuse\" is a flag passed down when the parent view is\r\n        // either reused via keep-alive or as a child of a kept-alive view.\r\n        // of course we can only reuse if the current kept-alive instance\r\n        // is of the correct type.\r\n        reuse = reuse && view.childVM && view.childVM.constructor === Component;\r\n\r\n        if (reuse) {\r\n            // just reuse\r\n            component = view.childVM;\r\n            component.$loadingRouteData = loading;\r\n        } else {\r\n            // unbuild current component. this step also destroys\r\n            // and removes all nested child views.\r\n            view.unbuild(true);\r\n            // handle keep-alive.\r\n            // if the view has keep-alive, the child vm is not actually\r\n            // destroyed - its nested views will still be in router's\r\n            // view list. We need to removed these child views and\r\n            // cache them on the child vm.\r\n            if (view.keepAlive) {\r\n                var views = transition.router._views;\r\n                var i = views.indexOf(view);\r\n                if (i > 0) {\r\n                    transition.router._views = views.slice(i);\r\n                    if (view.childVM) {\r\n                        view.childVM._routerViews = views.slice(0, i);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // build the new component. this will also create the\r\n            // direct child view of the current one. it will register\r\n            // itself as view.childView.\r\n            component = view.build({\r\n                _meta: {\r\n                    $loadingRouteData: loading\r\n                }\r\n            });\r\n            // handle keep-alive.\r\n            // when a kept-alive child vm is restored, we need to\r\n            // add its cached child views into the router's view list,\r\n            // and also properly update current view's child view.\r\n            if (view.keepAlive) {\r\n                component.$loadingRouteData = loading;\r\n                var cachedViews = component._routerViews;\r\n                if (cachedViews) {\r\n                    transition.router._views = cachedViews.concat(transition.router._views);\r\n                    view.childView = cachedViews[cachedViews.length - 1];\r\n                    component._routerViews = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        // cleanup the component in case the transition is aborted\r\n        // before the component is ever inserted.\r\n        var cleanup = function cleanup() {\r\n            component.$destroy();\r\n        };\r\n\r\n        // actually insert the component and trigger transition\r\n        var insert = function insert() {\r\n            if (reuse) {\r\n                cb && cb();\r\n                return;\r\n            }\r\n            var router = transition.router;\r\n            if (router._rendered || router._transitionOnLoad) {\r\n                view.transition(component);\r\n            } else {\r\n                // no transition on first render, manual transition\r\n                /* istanbul ignore if */\r\n                if (view.setCurrent) {\r\n                    // 0.12 compat\r\n                    view.setCurrent(component);\r\n                } else {\r\n                    // 1.0\r\n                    view.childVM = component;\r\n                }\r\n                component.$before(view.anchor, null, false);\r\n            }\r\n            cb && cb();\r\n        };\r\n\r\n        // called after activation hook is resolved\r\n        var afterActivate = function afterActivate() {\r\n            view.activated = true;\r\n            // activate the child view\r\n            if (view.childView) {\r\n                activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\r\n            }\r\n            if (dataHook && waitForData) {\r\n                // wait until data loaded to insert\r\n                loadData(component, transition, dataHook, insert, cleanup);\r\n            } else {\r\n                // load data and insert at the same time\r\n                if (dataHook) {\r\n                    loadData(component, transition, dataHook);\r\n                }\r\n                insert();\r\n            }\r\n        };\r\n\r\n        if (activateHook) {\r\n            transition.callHooks(activateHook, component, afterActivate, {\r\n                cleanup: cleanup\r\n            });\r\n        } else {\r\n            afterActivate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reuse a view, just reload data if necessary.\r\n     *\r\n     * @param {Directive} view\r\n     * @param {Transition} transition\r\n     */\r\n\r\n    function reuse(view, transition) {\r\n        var component = view.childVM;\r\n        var dataHook = getRouteConfig(component, 'data');\r\n        if (dataHook) {\r\n            loadData(component, transition, dataHook);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Asynchronously load and apply data to component.\r\n     *\r\n     * @param {Vue} component\r\n     * @param {Transition} transition\r\n     * @param {Function} hook\r\n     * @param {Function} cb\r\n     * @param {Function} cleanup\r\n     */\r\n\r\n    function loadData(component, transition, hook, cb, cleanup) {\r\n        component.$loadingRouteData = true;\r\n        transition.callHooks(hook, component, function (data, onError) {\r\n            // merge data from multiple data hooks\r\n            if (Array.isArray(data) && data._needMerge) {\r\n                data = data.reduce(function (res, obj) {\r\n                    if (isPlainObject(obj)) {\r\n                        Object.keys(obj).forEach(function (key) {\r\n                            res[key] = obj[key];\r\n                        });\r\n                    }\r\n                    return res;\r\n                }, Object.create(null));\r\n            }\r\n            // handle promise sugar syntax\r\n            var promises = [];\r\n            if (isPlainObject(data)) {\r\n                Object.keys(data).forEach(function (key) {\r\n                    var val = data[key];\r\n                    if (isPromise(val)) {\r\n                        promises.push(val.then(function (resolvedVal) {\r\n                            component.$set(key, resolvedVal);\r\n                        }));\r\n                    } else {\r\n                        component.$set(key, val);\r\n                    }\r\n                });\r\n            }\r\n            if (!promises.length) {\r\n                component.$loadingRouteData = false;\r\n                cb && cb();\r\n            } else {\r\n                promises[0].constructor.all(promises).then(function (_) {\r\n                    component.$loadingRouteData = false;\r\n                    cb && cb();\r\n                }, onError);\r\n            }\r\n        }, {\r\n            cleanup: cleanup,\r\n            expectData: true\r\n        });\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Object]';\r\n    }\r\n\r\n    /**\r\n     * A RouteTransition object manages the pipeline of a\r\n     * router-view switching process. This is also the object\r\n     * passed into user route hooks.\r\n     *\r\n     * @param {Router} router\r\n     * @param {Route} to\r\n     * @param {Route} from\r\n     */\r\n\r\n    var RouteTransition = (function () {\r\n        function RouteTransition(router, to, from) {\r\n            babelHelpers.classCallCheck(this, RouteTransition);\r\n\r\n            this.router = router;\r\n            this.to = to;\r\n            this.from = from;\r\n            this.next = null;\r\n            this.aborted = false;\r\n            this.done = false;\r\n\r\n            // start by determine the queues\r\n\r\n            // the deactivate queue is an array of router-view\r\n            // directive instances that need to be deactivated,\r\n            // deepest first.\r\n            this.deactivateQueue = router._views;\r\n\r\n            // check the default handler of the deepest match\r\n            var matched = to.matched ? Array.prototype.slice.call(to.matched) : [];\r\n\r\n            // the activate queue is an array of route handlers\r\n            // that need to be activated\r\n            this.activateQueue = matched.map(function (match) {\r\n                return match.handler;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Abort current transition and return to previous location.\r\n         */\r\n\r\n        RouteTransition.prototype.abort = function abort() {\r\n            if (!this.aborted) {\r\n                this.aborted = true;\r\n                // if the root path throws an error during validation\r\n                // on initial load, it gets caught in an infinite loop.\r\n                var abortingOnLoad = !this.from.path && this.to.path === '/';\r\n                if (!abortingOnLoad) {\r\n                    this.router.replace(this.from.path || '/');\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Abort current transition and redirect to a new location.\r\n         *\r\n         * @param {String} path\r\n         */\r\n\r\n        RouteTransition.prototype.redirect = function redirect(path) {\r\n            if (!this.aborted) {\r\n                this.aborted = true;\r\n                if (typeof path === 'string') {\r\n                    path = mapParams(path, this.to.params, this.to.query);\r\n                } else {\r\n                    path.params = path.params || this.to.params;\r\n                    path.query = path.query || this.to.query;\r\n                }\r\n                this.router.replace(path);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * A router view transition's pipeline can be described as\r\n         * follows, assuming we are transitioning from an existing\r\n         * <router-view> chain [Component A, Component B] to a new\r\n         * chain [Component A, Component C]:\r\n         *\r\n         *  A    A\r\n         *  | => |\r\n         *  B    C\r\n         *\r\n         * 1. Reusablity phase:\r\n         *   -> canReuse(A, A)\r\n         *   -> canReuse(B, C)\r\n         *   -> determine new queues:\r\n         *      - deactivation: [B]\r\n         *      - activation: [C]\r\n         *\r\n         * 2. Validation phase:\r\n         *   -> canDeactivate(B)\r\n         *   -> canActivate(C)\r\n         *\r\n         * 3. Activation phase:\r\n         *   -> deactivate(B)\r\n         *   -> activate(C)\r\n         *\r\n         * Each of these steps can be asynchronous, and any\r\n         * step can potentially abort the transition.\r\n         *\r\n         * @param {Function} cb\r\n         */\r\n\r\n        RouteTransition.prototype.start = function start(cb) {\r\n            var transition = this;\r\n            var daq = this.deactivateQueue;\r\n            var aq = this.activateQueue;\r\n            var rdaq = daq.slice().reverse();\r\n            var reuseQueue = undefined;\r\n\r\n            // 1. Reusability phase\r\n            var i = undefined;\r\n            for (i = 0; i < rdaq.length; i++) {\r\n                if (!canReuse(rdaq[i], aq[i], transition)) {\r\n                    break;\r\n                }\r\n            }\r\n            if (i > 0) {\r\n                reuseQueue = rdaq.slice(0, i);\r\n                daq = rdaq.slice(i).reverse();\r\n                aq = aq.slice(i);\r\n            }\r\n\r\n            // 2. Validation phase\r\n            transition.runQueue(daq, canDeactivate, function () {\r\n                transition.runQueue(aq, canActivate, function () {\r\n                    transition.runQueue(daq, deactivate, function () {\r\n                        // 3. Activation phase\r\n\r\n                        // Update router current route\r\n                        transition.router._onTransitionValidated(transition);\r\n\r\n                        // trigger reuse for all reused views\r\n                        reuseQueue && reuseQueue.forEach(function (view) {\r\n                            reuse(view, transition);\r\n                        });\r\n\r\n                        // the root of the chain that needs to be replaced\r\n                        // is the top-most non-reusable view.\r\n                        if (daq.length) {\r\n                            var view = daq[daq.length - 1];\r\n                            var depth = reuseQueue ? reuseQueue.length : 0;\r\n                            activate(view, transition, depth, cb);\r\n                        } else {\r\n                            cb();\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Asynchronously and sequentially apply a function to a\r\n         * queue.\r\n         *\r\n         * @param {Array} queue\r\n         * @param {Function} fn\r\n         * @param {Function} cb\r\n         */\r\n\r\n        RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\r\n            var transition = this;\r\n            step(0);\r\n            function step(index) {\r\n                if (index >= queue.length) {\r\n                    cb();\r\n                } else {\r\n                    fn(queue[index], transition, function () {\r\n                        step(index + 1);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Call a user provided route transition hook and handle\r\n         * the response (e.g. if the user returns a promise).\r\n         *\r\n         * If the user neither expects an argument nor returns a\r\n         * promise, the hook is assumed to be synchronous.\r\n         *\r\n         * @param {Function} hook\r\n         * @param {*} [context]\r\n         * @param {Function} [cb]\r\n         * @param {Object} [options]\r\n         *                 - {Boolean} expectBoolean\r\n         *                 - {Boolean} expectData\r\n         *                 - {Function} cleanup\r\n         */\r\n\r\n        RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\r\n            var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\r\n\r\n            var _ref$expectBoolean = _ref.expectBoolean;\r\n            var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\r\n            var _ref$expectData = _ref.expectData;\r\n            var expectData = _ref$expectData === undefined ? false : _ref$expectData;\r\n            var cleanup = _ref.cleanup;\r\n\r\n            var transition = this;\r\n            var nextCalled = false;\r\n\r\n            // abort the transition\r\n            var abort = function abort() {\r\n                cleanup && cleanup();\r\n                transition.abort();\r\n            };\r\n\r\n            // handle errors\r\n            var onError = function onError(err) {\r\n                // cleanup indicates an after-activation hook,\r\n                // so instead of aborting we just let the transition\r\n                // finish.\r\n                cleanup ? next() : abort();\r\n                if (err && !transition.router._suppress) {\r\n                    warn('Uncaught error during transition: ');\r\n                    throw err instanceof Error ? err : new Error(err);\r\n                }\r\n            };\r\n\r\n            // advance the transition to the next step\r\n            var next = function next(data) {\r\n                if (nextCalled) {\r\n                    warn('transition.next() should be called only once.');\r\n                    return;\r\n                }\r\n                nextCalled = true;\r\n                if (transition.aborted) {\r\n                    cleanup && cleanup();\r\n                    return;\r\n                }\r\n                cb && cb(data, onError);\r\n            };\r\n\r\n            // expose a clone of the transition object, so that each\r\n            // hook gets a clean copy and prevent the user from\r\n            // messing with the internals.\r\n            var exposed = {\r\n                to: transition.to,\r\n                from: transition.from,\r\n                abort: abort,\r\n                next: next,\r\n                redirect: function redirect() {\r\n                    transition.redirect.apply(transition, arguments);\r\n                }\r\n            };\r\n\r\n            // actually call the hook\r\n            var res = undefined;\r\n            try {\r\n                res = hook.call(context, exposed);\r\n            } catch (err) {\r\n                return onError(err);\r\n            }\r\n\r\n            // handle boolean/promise return values\r\n            var resIsPromise = isPromise(res);\r\n            if (expectBoolean) {\r\n                if (typeof res === 'boolean') {\r\n                    res ? next() : abort();\r\n                } else if (resIsPromise) {\r\n                    res.then(function (ok) {\r\n                        ok ? next() : abort();\r\n                    }, onError);\r\n                } else if (!hook.length) {\r\n                    next(res);\r\n                }\r\n            } else if (resIsPromise) {\r\n                res.then(next, onError);\r\n            } else if (expectData && isPlainOjbect(res) || !hook.length) {\r\n                next(res);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Call a single hook or an array of async hooks in series.\r\n         *\r\n         * @param {Array} hooks\r\n         * @param {*} context\r\n         * @param {Function} cb\r\n         * @param {Object} [options]\r\n         */\r\n\r\n        RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\r\n            var _this = this;\r\n\r\n            if (Array.isArray(hooks)) {\r\n                (function () {\r\n                    var res = [];\r\n                    res._needMerge = true;\r\n                    var onError = undefined;\r\n                    _this.runQueue(hooks, function (hook, _, next) {\r\n                        if (!_this.aborted) {\r\n                            _this.callHook(hook, context, function (r, onError) {\r\n                                if (r) res.push(r);\r\n                                onError = onError;\r\n                                next();\r\n                            }, options);\r\n                        }\r\n                    }, function () {\r\n                        cb(res, onError);\r\n                    });\r\n                })();\r\n            } else {\r\n                this.callHook(hooks, context, cb, options);\r\n            }\r\n        };\r\n\r\n        return RouteTransition;\r\n    })();\r\n\r\n    function isPlainOjbect(val) {\r\n        return Object.prototype.toString.call(val) === '[object Object]';\r\n    }\r\n\r\n    var internalKeysRE = /^(component|subRoutes)$/;\r\n\r\n    /**\r\n     * Route Context Object\r\n     *\r\n     * @param {String} path\r\n     * @param {Router} router\r\n     */\r\n\r\n    var Route = function Route(path, router) {\r\n        var _this = this;\r\n\r\n        babelHelpers.classCallCheck(this, Route);\r\n\r\n        var matched = router._recognizer.recognize(path);\r\n        if (matched) {\r\n            // copy all custom fields from route configs\r\n            [].forEach.call(matched, function (match) {\r\n                for (var key in match.handler) {\r\n                    if (!internalKeysRE.test(key)) {\r\n                        _this[key] = match.handler[key];\r\n                    }\r\n                }\r\n            });\r\n            // set query and params\r\n            this.query = matched.queryParams;\r\n            this.params = [].reduce.call(matched, function (prev, cur) {\r\n                if (cur.params) {\r\n                    for (var key in cur.params) {\r\n                        prev[key] = cur.params[key];\r\n                    }\r\n                }\r\n                return prev;\r\n            }, {});\r\n        }\r\n        // expose path and router\r\n        this.path = path;\r\n        this.router = router;\r\n        // for internal use\r\n        this.matched = matched || router._notFoundHandler;\r\n        // Important: freeze self to prevent observation\r\n        Object.freeze(this);\r\n    };\r\n\r\n    function applyOverride (Vue) {\r\n\r\n        var _ = Vue.util;\r\n\r\n        // override Vue's init and destroy process to keep track of router instances\r\n        var init = Vue.prototype._init;\r\n        Vue.prototype._init = function (options) {\r\n            var root = options._parent || options.parent || this;\r\n            var route = root.$route;\r\n            if (route) {\r\n                route.router._children.push(this);\r\n                if (!this.$route) {\r\n                    /* istanbul ignore if */\r\n                    if (this._defineMeta) {\r\n                        // 0.12\r\n                        this._defineMeta('$route', route);\r\n                    } else {\r\n                        // 1.0\r\n                        _.defineReactive(this, '$route', route);\r\n                    }\r\n                }\r\n            }\r\n            init.call(this, options);\r\n        };\r\n\r\n        var destroy = Vue.prototype._destroy;\r\n        Vue.prototype._destroy = function () {\r\n            if (!this._isBeingDestroyed) {\r\n                var route = this.$root.$route;\r\n                if (route) {\r\n                    route.router._children.$remove(this);\r\n                }\r\n                destroy.apply(this, arguments);\r\n            }\r\n        };\r\n\r\n        // 1.0 only: enable route mixins\r\n        var strats = Vue.config.optionMergeStrategies;\r\n        var hooksToMergeRE = /^(data|activate|deactivate)$/;\r\n\r\n        if (strats) {\r\n            strats.route = function (parentVal, childVal) {\r\n                if (!childVal) return parentVal;\r\n                if (!parentVal) return childVal;\r\n                var ret = {};\r\n                _.extend(ret, parentVal);\r\n                for (var key in childVal) {\r\n                    var a = ret[key];\r\n                    var b = childVal[key];\r\n                    // for data, activate and deactivate, we need to merge them into\r\n                    // arrays similar to lifecycle hooks.\r\n                    if (a && hooksToMergeRE.test(key)) {\r\n                        ret[key] = (_.isArray(a) ? a : [a]).concat(b);\r\n                    } else {\r\n                        ret[key] = b;\r\n                    }\r\n                }\r\n                return ret;\r\n            };\r\n        }\r\n    }\r\n\r\n    function View (Vue) {\r\n\r\n        var _ = Vue.util;\r\n        var componentDef =\r\n            // 0.12\r\n            Vue.directive('_component') ||\r\n                // 1.0\r\n            Vue.internalDirectives.component;\r\n        // <router-view> extends the internal component directive\r\n        var viewDef = _.extend({}, componentDef);\r\n\r\n        // with some overrides\r\n        _.extend(viewDef, {\r\n\r\n            _isRouterView: true,\r\n\r\n            bind: function bind() {\r\n                var route = this.vm.$route;\r\n                /* istanbul ignore if */\r\n                if (!route) {\r\n                    warn('<router-view> can only be used inside a ' + 'router-enabled app.');\r\n                    return;\r\n                }\r\n                // force dynamic directive so v-component doesn't\r\n                // attempt to build right now\r\n                this._isDynamicLiteral = true;\r\n                // finally, init by delegating to v-component\r\n                componentDef.bind.call(this);\r\n\r\n                // all we need to do here is registering this view\r\n                // in the router. actual component switching will be\r\n                // managed by the pipeline.\r\n                var router = this.router = route.router;\r\n                router._views.unshift(this);\r\n\r\n                // note the views are in reverse order.\r\n                var parentView = router._views[1];\r\n                if (parentView) {\r\n                    // register self as a child of the parent view,\r\n                    // instead of activating now. This is so that the\r\n                    // child's activate hook is called after the\r\n                    // parent's has resolved.\r\n                    parentView.childView = this;\r\n                }\r\n\r\n                // handle late-rendered view\r\n                // two possibilities:\r\n                // 1. root view rendered after transition has been\r\n                //    validated;\r\n                // 2. child view rendered after parent view has been\r\n                //    activated.\r\n                var transition = route.router._currentTransition;\r\n                if (!parentView && transition.done || parentView && parentView.activated) {\r\n                    var depth = parentView ? parentView.depth + 1 : 0;\r\n                    activate(this, transition, depth);\r\n                }\r\n            },\r\n\r\n            unbind: function unbind() {\r\n                this.router._views.$remove(this);\r\n                componentDef.unbind.call(this);\r\n            }\r\n        });\r\n\r\n        Vue.elementDirective('router-view', viewDef);\r\n    }\r\n\r\n    var trailingSlashRE = /\\/$/;\r\n    var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\r\n    var queryStringRE = /\\?.*$/;\r\n\r\n    // install v-link, which provides navigation support for\r\n    // HTML5 history mode\r\n    function Link (Vue) {\r\n\r\n        var _ = Vue.util;\r\n\r\n        Vue.directive('link', {\r\n\r\n            bind: function bind() {\r\n                var _this = this;\r\n\r\n                var vm = this.vm;\r\n                /* istanbul ignore if */\r\n                if (!vm.$route) {\r\n                    warn('v-link can only be used inside a ' + 'router-enabled app.');\r\n                    return;\r\n                }\r\n                // no need to handle click if link expects to be opened\r\n                // in a new window/tab.\r\n                /* istanbul ignore if */\r\n                if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\r\n                    return;\r\n                }\r\n                // handle click\r\n                var router = vm.$route.router;\r\n                this.handler = function (e) {\r\n                    // don't redirect with control keys\r\n                    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\r\n                    // don't redirect when preventDefault called\r\n                    if (e.defaultPrevented) return;\r\n                    // don't redirect on right click\r\n                    if (e.button !== 0) return;\r\n\r\n                    var target = _this.target;\r\n                    var go = function go(target) {\r\n                        e.preventDefault();\r\n                        if (target != null) {\r\n                            router.go(target);\r\n                        }\r\n                    };\r\n\r\n                    if (_this.el.tagName === 'A' || e.target === _this.el) {\r\n                        // v-link on <a v-link=\"'path'\">\r\n                        go(target);\r\n                    } else {\r\n                        // v-link delegate on <div v-link>\r\n                        var el = e.target;\r\n                        while (el && el.tagName !== 'A' && el !== _this.el) {\r\n                            el = el.parentNode;\r\n                        }\r\n                        if (!el) return;\r\n                        if (el.tagName !== 'A' || !el.href) {\r\n                            // allow not anchor\r\n                            go(target);\r\n                        } else if (sameOrigin(el)) {\r\n                            go({\r\n                                path: el.pathname,\r\n                                replace: target && target.replace,\r\n                                append: target && target.append\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                this.el.addEventListener('click', this.handler);\r\n                // manage active link class\r\n                this.unwatch = vm.$watch('$route.path', _.bind(this.updateClasses, this));\r\n            },\r\n\r\n            update: function update(path) {\r\n                var router = this.vm.$route.router;\r\n                var append = undefined;\r\n                this.target = path;\r\n                if (_.isObject(path)) {\r\n                    append = path.append;\r\n                    this.exact = path.exact;\r\n                    this.prevActiveClass = this.activeClass;\r\n                    this.activeClass = path.activeClass;\r\n                }\r\n                path = this.path = router._stringifyPath(path);\r\n                this.activeRE = path && !this.exact ? new RegExp('^' + path.replace(/\\/$/, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\r\n                this.updateClasses(this.vm.$route.path);\r\n                var isAbsolute = path.charAt(0) === '/';\r\n                // do not format non-hash relative paths\r\n                var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, append) : path;\r\n                if (this.el.tagName === 'A') {\r\n                    if (href) {\r\n                        this.el.href = href;\r\n                    } else {\r\n                        this.el.removeAttribute('href');\r\n                    }\r\n                }\r\n            },\r\n\r\n            updateClasses: function updateClasses(path) {\r\n                var el = this.el;\r\n                var router = this.vm.$route.router;\r\n                var activeClass = this.activeClass || router._linkActiveClass;\r\n                // clear old class\r\n                if (this.prevActiveClass !== activeClass) {\r\n                    _.removeClass(el, this.prevActiveClass);\r\n                }\r\n                // remove query string before matching\r\n                var dest = this.path.replace(queryStringRE, '');\r\n                path = path.replace(queryStringRE, '');\r\n                // add new class\r\n                if (this.exact) {\r\n                    if (dest === path ||\r\n                            // also allow additional trailing slash\r\n                        dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\r\n                        _.addClass(el, activeClass);\r\n                    } else {\r\n                        _.removeClass(el, activeClass);\r\n                    }\r\n                } else {\r\n                    if (this.activeRE && this.activeRE.test(path)) {\r\n                        _.addClass(el, activeClass);\r\n                    } else {\r\n                        _.removeClass(el, activeClass);\r\n                    }\r\n                }\r\n            },\r\n\r\n            unbind: function unbind() {\r\n                this.el.removeEventListener('click', this.handler);\r\n                this.unwatch && this.unwatch();\r\n            }\r\n        });\r\n\r\n        function sameOrigin(link) {\r\n            return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\r\n        }\r\n    }\r\n\r\n    var historyBackends = {\r\n        abstract: AbstractHistory,\r\n        hash: HashHistory,\r\n        html5: HTML5History\r\n    };\r\n\r\n    // late bind during install\r\n    var Vue = undefined;\r\n\r\n    /**\r\n     * Router constructor\r\n     *\r\n     * @param {Object} [options]\r\n     */\r\n\r\n    var Router = (function () {\r\n        function Router() {\r\n            var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\r\n\r\n            var _ref$hashbang = _ref.hashbang;\r\n            var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\r\n            var _ref$abstract = _ref.abstract;\r\n            var abstract = _ref$abstract === undefined ? false : _ref$abstract;\r\n            var _ref$history = _ref.history;\r\n            var history = _ref$history === undefined ? false : _ref$history;\r\n            var _ref$saveScrollPosition = _ref.saveScrollPosition;\r\n            var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\r\n            var _ref$transitionOnLoad = _ref.transitionOnLoad;\r\n            var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\r\n            var _ref$suppressTransitionError = _ref.suppressTransitionError;\r\n            var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\r\n            var _ref$root = _ref.root;\r\n            var root = _ref$root === undefined ? null : _ref$root;\r\n            var _ref$linkActiveClass = _ref.linkActiveClass;\r\n            var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\r\n            babelHelpers.classCallCheck(this, Router);\r\n\r\n            /* istanbul ignore if */\r\n            if (!Router.installed) {\r\n                throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\r\n            }\r\n\r\n            // Vue instances\r\n            this.app = null;\r\n            this._views = [];\r\n            this._children = [];\r\n\r\n            // route recognizer\r\n            this._recognizer = new RouteRecognizer();\r\n            this._guardRecognizer = new RouteRecognizer();\r\n\r\n            // state\r\n            this._started = false;\r\n            this._startCb = null;\r\n            this._currentRoute = {};\r\n            this._currentTransition = null;\r\n            this._previousTransition = null;\r\n            this._notFoundHandler = null;\r\n            this._notFoundRedirect = null;\r\n            this._beforeEachHooks = [];\r\n            this._afterEachHooks = [];\r\n\r\n            // feature detection\r\n            this._hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\r\n\r\n            // trigger transition on initial render?\r\n            this._rendered = false;\r\n            this._transitionOnLoad = transitionOnLoad;\r\n\r\n            // history mode\r\n            this._abstract = abstract;\r\n            this._hashbang = hashbang;\r\n            this._history = this._hasPushState && history;\r\n\r\n            // other options\r\n            this._saveScrollPosition = saveScrollPosition;\r\n            this._linkActiveClass = linkActiveClass;\r\n            this._suppress = suppressTransitionError;\r\n\r\n            // create history object\r\n            var inBrowser = Vue.util.inBrowser;\r\n            this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\r\n\r\n            var History = historyBackends[this.mode];\r\n            var self = this;\r\n            this.history = new History({\r\n                root: root,\r\n                hashbang: this._hashbang,\r\n                onChange: function onChange(path, state, anchor) {\r\n                    self._match(path, state, anchor);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Allow directly passing components to a route\r\n         * definition.\r\n         *\r\n         * @param {String} path\r\n         * @param {Object} handler\r\n         */\r\n\r\n        // API ===================================================\r\n\r\n        /**\r\n         * Register a map of top-level paths.\r\n         *\r\n         * @param {Object} map\r\n         */\r\n\r\n        Router.prototype.map = function map(_map) {\r\n            for (var route in _map) {\r\n                this.on(route, _map[route]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Register a single root-level path\r\n         *\r\n         * @param {String} rootPath\r\n         * @param {Object} handler\r\n         *                 - {String} component\r\n         *                 - {Object} [subRoutes]\r\n         *                 - {Boolean} [forceRefresh]\r\n         *                 - {Function} [before]\r\n         *                 - {Function} [after]\r\n         */\r\n\r\n        Router.prototype.on = function on(rootPath, handler) {\r\n            if (rootPath === '*') {\r\n                this._notFound(handler);\r\n            } else {\r\n                this._addRoute(rootPath, handler, []);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set redirects.\r\n         *\r\n         * @param {Object} map\r\n         */\r\n\r\n        Router.prototype.redirect = function redirect(map) {\r\n            for (var path in map) {\r\n                this._addRedirect(path, map[path]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set aliases.\r\n         *\r\n         * @param {Object} map\r\n         */\r\n\r\n        Router.prototype.alias = function alias(map) {\r\n            for (var path in map) {\r\n                this._addAlias(path, map[path]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set global before hook.\r\n         *\r\n         * @param {Function} fn\r\n         */\r\n\r\n        Router.prototype.beforeEach = function beforeEach(fn) {\r\n            this._beforeEachHooks.push(fn);\r\n        };\r\n\r\n        /**\r\n         * Set global after hook.\r\n         *\r\n         * @param {Function} fn\r\n         */\r\n\r\n        Router.prototype.afterEach = function afterEach(fn) {\r\n            this._afterEachHooks.push(fn);\r\n        };\r\n\r\n        /**\r\n         * Navigate to a given path.\r\n         * The path can be an object describing a named path in\r\n         * the format of { name: '...', params: {}, query: {}}\r\n         * The path is assumed to be already decoded, and will\r\n         * be resolved against root (if provided)\r\n         *\r\n         * @param {String|Object} path\r\n         * @param {Boolean} [replace]\r\n         */\r\n\r\n        Router.prototype.go = function go(path) {\r\n            var replace = false;\r\n            var append = false;\r\n            if (Vue.util.isObject(path)) {\r\n                replace = path.replace;\r\n                append = path.append;\r\n            }\r\n            path = this._stringifyPath(path);\r\n            if (path) {\r\n                this.history.go(path, replace, append);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Short hand for replacing current path\r\n         *\r\n         * @param {String} path\r\n         */\r\n\r\n        Router.prototype.replace = function replace(path) {\r\n            if (typeof path === 'string') {\r\n                path = { path: path };\r\n            }\r\n            path.replace = true;\r\n            this.go(path);\r\n        };\r\n\r\n        /**\r\n         * Start the router.\r\n         *\r\n         * @param {VueConstructor} App\r\n         * @param {String|Element} container\r\n         * @param {Function} [cb]\r\n         */\r\n\r\n        Router.prototype.start = function start(App, container, cb) {\r\n            /* istanbul ignore if */\r\n            if (this._started) {\r\n                warn('already started.');\r\n                return;\r\n            }\r\n            this._started = true;\r\n            this._startCb = cb;\r\n            if (!this.app) {\r\n                /* istanbul ignore if */\r\n                if (!App || !container) {\r\n                    throw new Error('Must start vue-router with a component and a ' + 'root container.');\r\n                }\r\n                this._appContainer = container;\r\n                var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\r\n                // give it a name for better debugging\r\n                Ctor.options.name = Ctor.options.name || 'RouterApp';\r\n            }\r\n            this.history.start();\r\n        };\r\n\r\n        /**\r\n         * Stop listening to route changes.\r\n         */\r\n\r\n        Router.prototype.stop = function stop() {\r\n            this.history.stop();\r\n            this._started = false;\r\n        };\r\n\r\n        // Internal methods ======================================\r\n\r\n        /**\r\n         * Add a route containing a list of segments to the internal\r\n         * route recognizer. Will be called recursively to add all\r\n         * possible sub-routes.\r\n         *\r\n         * @param {String} path\r\n         * @param {Object} handler\r\n         * @param {Array} segments\r\n         */\r\n\r\n        Router.prototype._addRoute = function _addRoute(path, handler, segments) {\r\n            guardComponent(path, handler);\r\n            handler.path = path;\r\n            handler.fullPath = (segments.reduce(function (path, segment) {\r\n                return path + segment.path;\r\n            }, '') + path).replace('//', '/');\r\n            segments.push({\r\n                path: path,\r\n                handler: handler\r\n            });\r\n            this._recognizer.add(segments, {\r\n                as: handler.name\r\n            });\r\n            // add sub routes\r\n            if (handler.subRoutes) {\r\n                for (var subPath in handler.subRoutes) {\r\n                    // recursively walk all sub routes\r\n                    this._addRoute(subPath, handler.subRoutes[subPath],\r\n                        // pass a copy in recursion to avoid mutating\r\n                        // across branches\r\n                        segments.slice());\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set the notFound route handler.\r\n         *\r\n         * @param {Object} handler\r\n         */\r\n\r\n        Router.prototype._notFound = function _notFound(handler) {\r\n            guardComponent('*', handler);\r\n            this._notFoundHandler = [{ handler: handler }];\r\n        };\r\n\r\n        /**\r\n         * Add a redirect record.\r\n         *\r\n         * @param {String} path\r\n         * @param {String} redirectPath\r\n         */\r\n\r\n        Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\r\n            if (path === '*') {\r\n                this._notFoundRedirect = redirectPath;\r\n            } else {\r\n                this._addGuard(path, redirectPath, this.replace);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Add an alias record.\r\n         *\r\n         * @param {String} path\r\n         * @param {String} aliasPath\r\n         */\r\n\r\n        Router.prototype._addAlias = function _addAlias(path, aliasPath) {\r\n            this._addGuard(path, aliasPath, this._match);\r\n        };\r\n\r\n        /**\r\n         * Add a path guard.\r\n         *\r\n         * @param {String} path\r\n         * @param {String} mappedPath\r\n         * @param {Function} handler\r\n         */\r\n\r\n        Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\r\n            var _this = this;\r\n\r\n            this._guardRecognizer.add([{\r\n                path: path,\r\n                handler: function handler(match, query) {\r\n                    var realPath = mapParams(mappedPath, match.params, query);\r\n                    _handler.call(_this, realPath);\r\n                }\r\n            }]);\r\n        };\r\n\r\n        /**\r\n         * Check if a path matches any redirect records.\r\n         *\r\n         * @param {String} path\r\n         * @return {Boolean} - if true, will skip normal match.\r\n         */\r\n\r\n        Router.prototype._checkGuard = function _checkGuard(path) {\r\n            var matched = this._guardRecognizer.recognize(path);\r\n            if (matched) {\r\n                matched[0].handler(matched[0], matched.queryParams);\r\n                return true;\r\n            } else if (this._notFoundRedirect) {\r\n                matched = this._recognizer.recognize(path);\r\n                if (!matched) {\r\n                    this.replace(this._notFoundRedirect);\r\n                    return true;\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Match a URL path and set the route context on vm,\r\n         * triggering view updates.\r\n         *\r\n         * @param {String} path\r\n         * @param {Object} [state]\r\n         * @param {String} [anchor]\r\n         */\r\n\r\n        Router.prototype._match = function _match(path, state, anchor) {\r\n            var _this2 = this;\r\n\r\n            if (this._checkGuard(path)) {\r\n                return;\r\n            }\r\n\r\n            var currentRoute = this._currentRoute;\r\n            var currentTransition = this._currentTransition;\r\n\r\n            if (currentTransition) {\r\n                if (currentTransition.to.path === path) {\r\n                    // do nothing if we have an active transition going to the same path\r\n                    return;\r\n                } else if (currentRoute.path === path) {\r\n                    // We are going to the same path, but we also have an ongoing but\r\n                    // not-yet-validated transition. Abort that transition and reset to\r\n                    // prev transition.\r\n                    currentTransition.aborted = true;\r\n                    this._currentTransition = this._prevTransition;\r\n                    return;\r\n                } else {\r\n                    // going to a totally different path. abort ongoing transition.\r\n                    currentTransition.aborted = true;\r\n                }\r\n            }\r\n\r\n            // construct new route and transition context\r\n            var route = new Route(path, this);\r\n            var transition = new RouteTransition(this, route, currentRoute);\r\n\r\n            // current transition is updated right now.\r\n            // however, current route will only be updated after the transition has\r\n            // been validated.\r\n            this._prevTransition = currentTransition;\r\n            this._currentTransition = transition;\r\n\r\n            if (!this.app) {\r\n                // initial render\r\n                this.app = new this._appConstructor({\r\n                    el: this._appContainer,\r\n                    _meta: {\r\n                        $route: route\r\n                    }\r\n                });\r\n            }\r\n\r\n            // check global before hook\r\n            var beforeHooks = this._beforeEachHooks;\r\n            var startTransition = function startTransition() {\r\n                transition.start(function () {\r\n                    _this2._postTransition(route, state, anchor);\r\n                });\r\n            };\r\n\r\n            if (beforeHooks.length) {\r\n                transition.runQueue(beforeHooks, function (hook, _, next) {\r\n                    if (transition === _this2._currentTransition) {\r\n                        transition.callHook(hook, null, next, {\r\n                            expectBoolean: true\r\n                        });\r\n                    }\r\n                }, startTransition);\r\n            } else {\r\n                startTransition();\r\n            }\r\n\r\n            if (!this._rendered && this._startCb) {\r\n                this._startCb.call(null);\r\n            }\r\n\r\n            // HACK:\r\n            // set rendered to true after the transition start, so\r\n            // that components that are acitvated synchronously know\r\n            // whether it is the initial render.\r\n            this._rendered = true;\r\n        };\r\n\r\n        /**\r\n         * Set current to the new transition.\r\n         * This is called by the transition object when the\r\n         * validation of a route has succeeded.\r\n         *\r\n         * @param {Transition} transition\r\n         */\r\n\r\n        Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\r\n            // set current route\r\n            var route = this._currentRoute = transition.to;\r\n            // update route context for all children\r\n            if (this.app.$route !== route) {\r\n                this.app.$route = route;\r\n                this._children.forEach(function (child) {\r\n                    child.$route = route;\r\n                });\r\n            }\r\n            // call global after hook\r\n            if (this._afterEachHooks.length) {\r\n                this._afterEachHooks.forEach(function (hook) {\r\n                    return hook.call(null, {\r\n                        to: transition.to,\r\n                        from: transition.from\r\n                    });\r\n                });\r\n            }\r\n            this._currentTransition.done = true;\r\n        };\r\n\r\n        /**\r\n         * Handle stuff after the transition.\r\n         *\r\n         * @param {Route} route\r\n         * @param {Object} [state]\r\n         * @param {String} [anchor]\r\n         */\r\n\r\n        Router.prototype._postTransition = function _postTransition(route, state, anchor) {\r\n            // handle scroll positions\r\n            // saved scroll positions take priority\r\n            // then we check if the path has an anchor\r\n            var pos = state && state.pos;\r\n            if (pos && this._saveScrollPosition) {\r\n                Vue.nextTick(function () {\r\n                    window.scrollTo(pos.x, pos.y);\r\n                });\r\n            } else if (anchor) {\r\n                Vue.nextTick(function () {\r\n                    var el = document.getElementById(anchor.slice(1));\r\n                    if (el) {\r\n                        window.scrollTo(window.scrollX, el.offsetTop);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Normalize named route object / string paths into\r\n         * a string.\r\n         *\r\n         * @param {Object|String|Number} path\r\n         * @return {String}\r\n         */\r\n\r\n        Router.prototype._stringifyPath = function _stringifyPath(path) {\r\n            if (path && typeof path === 'object') {\r\n                if (path.name) {\r\n                    var params = path.params || {};\r\n                    if (path.query) {\r\n                        params.queryParams = path.query;\r\n                    }\r\n                    return this._recognizer.generate(path.name, params);\r\n                } else if (path.path) {\r\n                    var fullPath = path.path;\r\n                    if (path.query) {\r\n                        var query = this._recognizer.generateQueryString(path.query);\r\n                        if (fullPath.indexOf('?') > -1) {\r\n                            fullPath += '&' + query.slice(1);\r\n                        } else {\r\n                            fullPath += query;\r\n                        }\r\n                    }\r\n                    return fullPath;\r\n                } else {\r\n                    return '';\r\n                }\r\n            } else {\r\n                return path ? path + '' : '';\r\n            }\r\n        };\r\n\r\n        return Router;\r\n    })();\r\n\r\n    function guardComponent(path, handler) {\r\n        var comp = handler.component;\r\n        if (Vue.util.isPlainObject(comp)) {\r\n            comp = handler.component = Vue.extend(comp);\r\n        }\r\n        /* istanbul ignore if */\r\n        if (typeof comp !== 'function') {\r\n            handler.component = null;\r\n            warn('invalid component for route \"' + path + '\".');\r\n        }\r\n    }\r\n\r\n    /* Installation */\r\n\r\n    Router.installed = false;\r\n\r\n    /**\r\n     * Installation interface.\r\n     * Install the necessary directives.\r\n     */\r\n\r\n    Router.install = function (externalVue) {\r\n        /* istanbul ignore if */\r\n        if (Router.installed) {\r\n            warn('already installed.');\r\n            return;\r\n        }\r\n        Vue = externalVue;\r\n        applyOverride(Vue);\r\n        View(Vue);\r\n        Link(Vue);\r\n        exports$1.Vue = Vue;\r\n        Router.installed = true;\r\n    };\r\n\r\n    // auto install\r\n    /* istanbul ignore if */\r\n    if (typeof window !== 'undefined' && window.Vue) {\r\n        window.Vue.use(Router);\r\n    }\r\n\r\n    return Router;\r\n\r\n}));\r\n//# sourceMappingURL=vue-router.js.map"],"sourceRoot":"/source/"}